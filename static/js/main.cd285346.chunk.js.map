{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","api/FirebaseHelper.js","helpers.js","components/misc/loader.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/password.svg","assets/logout.svg","assets/post.svg","assets/records.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","components/templates/death-certificate.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchCollection","collectionName","a","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","id","push","addRecord","record","addDoc","success","editRecord","docId","value","updateDoc","deleteRecord","deleteDoc","archiveRecord","currentCollectionName","targetCollectionName","login","username","password","admins","i","length","changePassword","oldPassword","newPassword","loggedIn","find","o","message","inputGetter","document","getElementById","getById","customAlert","icon","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","MiniLoader","className","Loader","ContentItem","selected","requestRefresh","isArchive","useState","updating","setUpdating","archiving","setArchiving","submit","values","marriageDialog","html","didOpen","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","preConfirm","replace","ageValid","innerHTML","noempty","nothingChanged","showCancelButton","then","isConfirmed","Object","keys","sort","b","map","key","console","log","toUpperCase","slice","match","join","recordDetail","src","print","alt","onClick","printJS","printable","certificate","type","base64","edit","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","address","phone","fullname","phoneValid","content","now","Date","date","getFullYear","getMonth","toString","padStart","getDate","archive","confirmButtonText","result","confirmArchive","ToggleSwitch","toggleArchive","onChange","target","checked","ActionBar","search","show","addingRecord","setAddingRecord","add","Content","records","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","refreshList","fetchData","getMatches","arr","trim","toLowerCase","includes","createItem","useEffect","input","SidebarItem","imagesrc","label","isSelected","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","marriage","death","donation","post","newPassword1","matched","changeResult","window","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","submitLogin","DeathCertificate","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","App","exact","path","element","Home","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cd285346.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","import {\n  collection,\n  doc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { firestore } from \"../App\";\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value) {\n  let success;\n  try {\n    await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport { archiveRecord, editRecord } from \"../../api/FirebaseHelper\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\nimport { useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport printJS from \"print-js\";\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n\n  async function submit(values) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(selected, `${selected}_archive`, record.id, record)\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    console.log(key);\n    try {\n      key = key.charAt(0).toUpperCase() + key.slice(1);\n      key = key.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    } catch {}\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\" pattern=\"[+]{1}[0-9]{11,14}\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"address\").value = record.address;\n        getById(\"phone\").value = record.phone;\n      },\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \" \";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullname === record.name &&\n          address === record.address &&\n          phone === record.phone;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title && content === record.content;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"record-datas\">\n        {Object.keys(record)\n          .sort((a, b) => a > b)\n          .map((key) => {\n            if (key !== \"id\" && key !== \"certificate\")\n              return recordDetail(key, record[key]);\n            else return null;\n          })}\n      </div>\n      <span>\n        <div className=\"icons-container\">\n          {selected !== \"post\" && selected !== \"donation\" ? (\n            <div className=\"icon-container\">\n              <img\n                src={print}\n                title=\"print\"\n                alt=\"\"\n                className=\"icon\"\n                onClick={() => {\n                  printJS({\n                    printable: record.certificate,\n                    type: \"pdf\",\n                    base64: true,\n                  });\n\n                  // const monthNames = [\n                  //   \"January\",\n                  //   \"February\",\n                  //   \"March\",\n                  //   \"April\",\n                  //   \"May\",\n                  //   \"June\",\n                  //   \"July\",\n                  //   \"August\",\n                  //   \"September\",\n                  //   \"October\",\n                  //   \"November\",\n                  //   \"December\",\n                  // ];\n                  // let birthday = new Date(record.dayOfBirth);\n                  // let newWindow = window.open();\n                  // newWindow.document.write(\"<!DOCTYPE html\");\n                  // newWindow.document.write(\"<html>\");\n                  // newWindow.document.write(\"<head>\");\n                  // newWindow.document.write(\"<title>Death Certificate</title>\");\n                  // newWindow.document.write(\"</head>\");\n                  // newWindow.document.write(\"<body>\");\n                  // newWindow.document.write(\n                  //   `<h3 style='position: fixed; top:420px; left: 400px'>${record.name}</h3>` +\n                  //     `<h3 style='position: fixed; top: 530px; left: 220px'>${birthday.getDate()} th</h3>` +\n                  //     `<h3 style='position: fixed; top: 530px; left: 450px'>${\n                  //       monthNames[birthday.getMonth()]\n                  //     }, </h3>` +\n                  //     `<h3 style='position: fixed; top: 530px; left: 580px'>${birthday.getFullYear()} </h3>`\n                  // );\n                  // newWindow.document.write(\n                  //   `<h3 style='position: fixed; top: 530px; left: 580px'>${birthday.getFullYear()} </h3>`\n                  // );\n                  // newWindow.document.write(\n                  //   \"<img src='https://raw.githubusercontent.com/Grrom/grrom.github.io/main/images/death-cert.png'>\"\n                  // );\n                  // newWindow.document.write(\"</body>\");\n                  // newWindow.document.write(\"</html>\");\n                  // // w.document.write(\n                  // //   \"<img src='https://raw.githubusercontent.com/Grrom/grrom.github.io/main/images/death-cert.png'>\"\n                  // // );\n                  // // w.document.write();\n                  // newWindow.print();\n                }}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"icon-container\">\n            {updating ? (\n              <MiniLoader />\n            ) : (\n              <img\n                src={edit}\n                title=\"edit\"\n                alt=\"\"\n                className=\"icon\"\n                onClick={() => {\n                  switch (selected) {\n                    case \"marriage\":\n                      marriageDialog();\n                      break;\n                    case \"death\":\n                      deathDialog();\n                      break;\n                    case \"donation\":\n                      donationDialog();\n                      break;\n                    case \"post\":\n                      postDialog();\n                      break;\n                    default:\n                      marriageDialog();\n                  }\n                }}\n              />\n            )}\n          </div>\n          {selected !== \"post\" && selected !== \"donation\" && !isArchive ? (\n            <div className=\"icon-container\">\n              {archiving ? (\n                <MiniLoader />\n              ) : (\n                <img\n                  src={archive}\n                  title=\"archive\"\n                  alt=\"archive\"\n                  className=\"icon\"\n                  onClick={() =>\n                    Swal.fire({\n                      title: \"Are you sure you want to archive this record?\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonText: \"archive\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        confirmArchive();\n                      }\n                    })\n                  }\n                />\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </span>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggleArchive }) {\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        onChange={(value) => {\n          toggleArchive(value.target.checked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  isArchive,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"post\" ? (\n        <span className=\"search-bar\">\n          <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"post\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggleArchive={toggleArchive} />\n          <h4>Toggle Archive</h4>\n        </span>\n      ) : (\n        \"\"\n      )}\n      <span\n        className=\"action-button add-record\"\n        title=\"Add\"\n        onClick={() => {\n          switch (selected) {\n            case \"marriage\":\n              marriageDialog();\n              break;\n            case \"death\":\n              deathDialog();\n              break;\n            case \"donation\":\n              donationDialog();\n              break;\n            case \"post\":\n              postDialog();\n              break;\n            default:\n              marriageDialog();\n          }\n        }}\n      >\n        {addingRecord ? (\n          <MiniLoader />\n        ) : (\n          <img src={add} alt=\"add\" className=\"icon\" />\n        )}\n        <h4>Add </h4>\n      </span>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCollection } from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      console.log(\"fetch\");\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"post\") {\n        setIsArchive(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.wifeName || record.husbandName || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n        toggleArchive={toggleArchive}\n        isArchive={isArchive}\n      />\n      {selected === \"\" ? (\n        <h3 className=\"content-message\">Nothing Selected</h3>\n      ) : fetchingCollection ? (\n        <Loader />\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","export default function SidebarItem({ imagesrc, label, isSelected }) {\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"post\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Post\"\n          imagesrc={post}\n          isSelected={selected === \"post\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport \"./death.scss\";\n\nexport default function DeathCertificate() {\n  useEffect(() => window.print(), []);\n\n  return (\n    <div id=\"death\">\n      <div id=\"name\"></div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport DeathCertificate from \"./components/templates/death-certificate\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\n\nexport default function App() {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/admin\" element={<Home />}></Route>\n        <Route path=\"/death\" element={<DeathCertificate />} />\n      </Routes>\n    </Router>\n  );\n}\n\nfunction Home() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}