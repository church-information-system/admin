{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","api/FirebaseHelper.js","helpers.js","components/misc/loader.jsx","components/content/content-item.jsx","assets/add.svg","components/content/action-bar.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/password.svg","assets/logout.svg","assets/post.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchCollection","collectionName","a","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","id","push","addRecord","record","addDoc","success","editRecord","docId","value","updateDoc","deleteRecord","deleteDoc","archiveRecord","currentCollectionName","targetCollectionName","login","username","password","admins","i","length","changePassword","oldPassword","newPassword","loggedIn","find","o","message","inputGetter","document","getElementById","getById","customAlert","icon","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","MiniLoader","className","Loader","ContentItem","selected","requestRefresh","useState","updating","setUpdating","archiving","setArchiving","submit","values","marriageDialog","html","didOpen","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","preConfirm","ageValid","innerHTML","noempty","nothingChanged","showCancelButton","then","isConfirmed","Object","keys","sort","b","map","key","toUpperCase","slice","match","join","recordDetail","src","print","alt","onClick","edit","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","content","now","Date","date","getFullYear","getMonth","toString","padStart","getDate","archive","confirmButtonText","result","confirmArchive","ActionBar","search","show","addingRecord","setAddingRecord","type","console","log","add","Content","records","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","refreshList","fetchData","getMatches","arr","trim","toLowerCase","includes","createItem","useEffect","input","SidebarItem","imagesrc","label","isSelected","SideBar","select","marriage","death","donation","post","newPassword1","matched","changeResult","window","location","reload","logout","NavBar","hideSidebar","style","width","querySelectorAll","element","addEventListener","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","onChange","target","checked","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4813ff42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","import {\n  collection,\n  doc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { firestore } from \"../App\";\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value) {\n  let success;\n  try {\n    await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport { archiveRecord, editRecord } from \"../../api/FirebaseHelper\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\nimport { useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\n\nexport default function ContentItem({ record, selected, requestRefresh }) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n\n  async function submit(values) {\n    setUpdating(() => true);\n    if (await editRecord(selected, record.id, values)) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(selected, `${selected}_archive`, record.id, record)\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n\n    try {\n      key = key.charAt(0).toUpperCase() + key.slice(1)\n      key = key.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")\n    } catch { }\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<h3>Enter Husband details:</h4>' +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<br></br>' +\n        '<h3>Enter Wife details:</h4>' +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n      },\n      preConfirm: () => {\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid = husbandAge.length > 0 && wifeAge.length > 0\n        if (!ageValid) getById(\"invalidAge\").innerHTML = \"Please make sure that the age you entered is a valid number\";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0\n        if (!ageValid) getById(\"invalidAge\").innerHTML = \"Please make sure that the age you entered is a valid number\";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Name\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let nothingChanged =\n          title === record.title && content === record.content;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"record-datas\">\n        {Object.keys(record)\n          .sort((a, b) => a < b)\n          .map((key) => {\n            if (key !== \"id\") return recordDetail(key, record[key]);\n            else return null;\n          })}\n      </div>\n      <span>\n        <div className=\"icons-container\">\n          <div className=\"icon-container\">\n            <img\n              src={print}\n              title=\"print\"\n              alt=\"\"\n              className=\"icon\"\n              onClick={() => Swal.fire({ title: \"print\" })}\n            />\n          </div>\n          <div className=\"icon-container\">\n            {updating ? (\n              <MiniLoader />\n            ) : (\n              <img\n                src={edit}\n                title=\"edit\"\n                alt=\"\"\n                className=\"icon\"\n                onClick={() => {\n                  switch (selected) {\n                    case \"marriage\":\n                      marriageDialog();\n                      break;\n                    case \"death\":\n                      deathDialog();\n                      break;\n                    case \"post\":\n                      postDialog();\n                      break;\n                    default:\n                      marriageDialog();\n                  }\n                }}\n              />\n            )}\n          </div>\n          <div className=\"icon-container\">\n            {archiving ? (\n              <MiniLoader />\n            ) : (\n              <img\n                src={archive}\n                title=\"archive\"\n                alt=\"archive\"\n                className=\"icon\"\n                onClick={() =>\n                  Swal.fire({\n                    title: \"Are you sure you want to archive this record?\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonText: \"archive\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      confirmArchive();\n                    }\n                  })\n                }\n              />\n            )}\n          </div>\n        </div>\n      </span>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import add from \"../../assets/add.svg\";\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\n\nexport default function ActionBar({ requestRefresh, search, show, selected }) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected, values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<h3>Enter Husband details:</h4>' +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<br></br>' +\n        '<h3>Enter Wife details:</h4>' +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid = husbandAge.length > 0 && wifeAge.length > 0\n        if (!ageValid) getById(\"invalidAge\").innerHTML = \"Please make sure that the age you entered is a valid number\";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0\n        if (!ageValid) getById(\"invalidAge\").innerHTML = \"Please make sure that the age you entered is a valid number\";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Name\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        console.log();\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      <span className=\"search-bar\">\n        <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n        <div\n          className=\"action-button\"\n          title=\"Search\"\n          onClick={() => search(document.getElementById(\"search-field\").value)}\n        >\n          <h4>Search</h4>\n        </div>\n      </span>\n      <span\n        className=\"action-button add-record\"\n        title=\"Add\"\n        onClick={() => {\n          switch (selected) {\n            case \"marriage\":\n              marriageDialog();\n              break;\n            case \"death\":\n              deathDialog();\n              break;\n            case \"post\":\n              postDialog();\n              break;\n            default:\n              marriageDialog();\n          }\n        }}\n      >\n        {addingRecord ? (\n          <MiniLoader />\n        ) : (\n          <img src={add} alt=\"add\" className=\"icon\" />\n        )}\n        <h4>Add Record</h4>\n      </span>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCollection } from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      console.log(\"fetch\");\n      setFetchingCollection(() => true);\n      setRecords(await fetchCollection(selected));\n      setFetchingCollection(() => false);\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, selected]);\n\n  function getMatches() {\n    let arr = [];\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.wifeName || record.husbandName || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id}\n        selected={selected}\n        requestRefresh={refreshList}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n      />\n      {selected === \"\" ? (\n        <h3 className=\"content-message\">Nothing Selected</h3>\n      ) : fetchingCollection ? (\n        <Loader />\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","export default function SidebarItem({ imagesrc, label, isSelected }) {\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\n\nexport default function SideBar({ selected, select }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => select(\"marriage\")}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Marriage\"\n          imagesrc={marriage}\n          isSelected={selected === \"marriage\"}\n        />\n      </span>\n      <span onClick={() => select(\"death\")} className=\"sidebar-item-container\">\n        <SidebarItem\n          label=\"Death\"\n          imagesrc={death}\n          isSelected={selected === \"death\"}\n        />\n      </span>\n      <span\n        onClick={() => select(\"donation\")}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Donation\"\n          imagesrc={donation}\n          isSelected={selected === \"donation\"}\n        />\n      </span>\n      <span onClick={() => select(\"post\")} className=\"sidebar-item-container\">\n        <SidebarItem\n          label=\"Post\"\n          imagesrc={post}\n          isSelected={selected === \"post\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\nimport { useEffect } from \"react\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  useEffect(\n    () =>\n      document\n        .querySelectorAll(\".sidebar-item-container\")\n        .forEach((element) => {\n          element.addEventListener(\"click\", () => {\n            hideSidebar();\n          });\n        }),\n    []\n  );\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}