{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","api/FirebaseHelper.js","helpers.js","components/misc/loader.jsx","components/content/content-item.jsx","assets/add.svg","components/content/action-bar.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/password.svg","assets/logout.svg","assets/post.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchCollection","collectionName","a","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","id","push","addRecord","record","addDoc","success","editRecord","docId","value","updateDoc","deleteRecord","deleteDoc","archiveRecord","currentCollectionName","targetCollectionName","login","username","password","admins","i","length","changePassword","oldPassword","newPassword","loggedIn","find","o","message","inputGetter","document","getElementById","getById","customAlert","icon","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","MiniLoader","className","Loader","ContentItem","selected","requestRefresh","useState","updating","setUpdating","archiving","setArchiving","submit","values","marriageDialog","html","didOpen","address","phone","preConfirm","newname","newaddress","newphone","noempty","innerHTML","nothingChanged","console","log","showCancelButton","then","isConfirmed","Object","keys","sort","b","map","key","recordDetail","src","print","alt","onClick","edit","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAddress","newAge","content","now","Date","date","getFullYear","getMonth","toString","padStart","getDate","archive","confirmButtonText","result","confirmArchive","ActionBar","search","show","addingRecord","setAddingRecord","type","add","Content","records","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","refreshList","fetchData","getMatches","arr","trim","toLowerCase","includes","createItem","useEffect","input","SidebarItem","imagesrc","label","isSelected","SideBar","select","marriage","death","donation","post","newPassword1","matched","changeResult","window","location","reload","logout","NavBar","hideSidebar","style","width","querySelectorAll","element","addEventListener","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","onChange","target","checked","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.275756bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","import {\n  collection,\n  doc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { firestore } from \"../App\";\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value) {\n  let success;\n  try {\n    await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport { archiveRecord, editRecord } from \"../../api/FirebaseHelper\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\nimport { useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\n\nexport default function ContentItem({ record, selected, requestRefresh }) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n\n  async function submit(values) {\n    setUpdating(() => true);\n    if (await editRecord(selected, record.id, values)) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(selected, `${selected}_archive`, record.id, record)\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    switch (key) {\n      case \"dateOfMass\":\n        key = \"Date Of Mass\";\n        break;\n      case \"dayOfDeath\":\n        key = \"Day Of Death\";\n        break;\n      case \"dayOfBirth\":\n        key = \"Day Of Birth\";\n        break;\n      default:\n    }\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\">',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"address\").value = record.address;\n        getById(\"phone\").value = record.phone;\n      },\n      preConfirm: () => {\n        let newname = inputGetter(\"fullname\");\n        let newaddress = inputGetter(\"address\");\n        let newphone = inputGetter(\"phone\");\n        let noempty =\n          newname.length > 0 && newaddress.length > 0 && newphone.length > 0;\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        let nothingChanged =\n          newname === record.name &&\n          newaddress === record.address &&\n          newphone === record.phone;\n        console.log(noempty);\n        console.log(nothingChanged);\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        return noempty && !nothingChanged;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newname = inputGetter(\"fullname\");\n        let newaddress = inputGetter(\"address\");\n        let newphone = inputGetter(\"phone\");\n\n        submit({\n          name: newname,\n          address: newaddress,\n          phone: newphone,\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n        getById(\"address\").value = record.address;\n      },\n      preConfirm: () => {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAddress = inputGetter(\"address\");\n        let newAge = inputGetter(\"age\");\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAddress.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAddress === record.address &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n\n        return noempty && !nothingChanged;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAddress = inputGetter(\"address\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n          address: newAddress,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Name\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let nothingChanged =\n          title === record.title && content === record.content;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"record-datas\">\n        {Object.keys(record)\n          .sort((a, b) => a < b)\n          .map((key) => {\n            if (key !== \"id\") return recordDetail(key, record[key]);\n            else return null;\n          })}\n      </div>\n      <span>\n        <div className=\"icons-container\">\n          <div className=\"icon-container\">\n            <img\n              src={print}\n              title=\"print\"\n              alt=\"\"\n              className=\"icon\"\n              onClick={() => Swal.fire({ title: \"print\" })}\n            />\n          </div>\n          <div className=\"icon-container\">\n            {updating ? (\n              <MiniLoader />\n            ) : (\n              <img\n                src={edit}\n                title=\"edit\"\n                alt=\"\"\n                className=\"icon\"\n                onClick={() => {\n                  switch (selected) {\n                    case \"marriage\":\n                      marriageDialog();\n                      break;\n                    case \"death\":\n                      deathDialog();\n                      break;\n                    case \"post\":\n                      postDialog();\n                      break;\n                    default:\n                      marriageDialog();\n                  }\n                }}\n              />\n            )}\n          </div>\n          <div className=\"icon-container\">\n            {archiving ? (\n              <MiniLoader />\n            ) : (\n              <img\n                src={archive}\n                title=\"archive\"\n                alt=\"archive\"\n                className=\"icon\"\n                onClick={() =>\n                  Swal.fire({\n                    title: \"Are you sure you want to archive this record?\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonText: \"archive\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      confirmArchive();\n                    }\n                  })\n                }\n              />\n            )}\n          </div>\n        </div>\n      </span>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import add from \"../../assets/add.svg\";\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\n\nexport default function ActionBar({ requestRefresh, search, show, selected }) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected, values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Name\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\">',\n      showCancelButton: true,\n      preConfirm: () => {\n        let newname = inputGetter(\"fullname\");\n        let newaddress = inputGetter(\"address\");\n        let newphone = inputGetter(\"phone\");\n\n        let noempty =\n          newname.length > 0 && newaddress.length > 0 && newphone.length > 0;\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          name: inputGetter(\"fullname\"),\n          address: inputGetter(\"address\"),\n          phone: inputGetter(\"phone\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAddress = inputGetter(\"address\");\n        let newAge = inputGetter(\"age\");\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAddress.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        return noempty;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAddress = inputGetter(\"address\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n          address: newAddress,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Name\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        console.log();\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      <span className=\"search-bar\">\n        <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n        <div\n          className=\"action-button\"\n          title=\"Search\"\n          onClick={() => search(document.getElementById(\"search-field\").value)}\n        >\n          <h4>Search</h4>\n        </div>\n      </span>\n      <span\n        className=\"action-button add-record\"\n        title=\"Add\"\n        onClick={() => {\n          switch (selected) {\n            case \"marriage\":\n              marriageDialog();\n              break;\n            case \"death\":\n              deathDialog();\n              break;\n            case \"post\":\n              postDialog();\n              break;\n            default:\n              marriageDialog();\n          }\n        }}\n      >\n        {addingRecord ? (\n          <MiniLoader />\n        ) : (\n          <img src={add} alt=\"add\" className=\"icon\" />\n        )}\n        <h4>Add Record</h4>\n      </span>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCollection } from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      console.log(\"fetch\");\n      setFetchingCollection(() => true);\n      setRecords(await fetchCollection(selected));\n      setFetchingCollection(() => false);\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, selected]);\n\n  function getMatches() {\n    let arr = [];\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id}\n        selected={selected}\n        requestRefresh={refreshList}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n      />\n      {selected === \"\" ? (\n        <h3 className=\"content-message\">Nothing Selected</h3>\n      ) : fetchingCollection ? (\n        <Loader />\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","export default function SidebarItem({ imagesrc, label, isSelected }) {\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\n\nexport default function SideBar({ selected, select }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => select(\"marriage\")}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Marriage\"\n          imagesrc={marriage}\n          isSelected={selected === \"marriage\"}\n        />\n      </span>\n      <span onClick={() => select(\"death\")} className=\"sidebar-item-container\">\n        <SidebarItem\n          label=\"Death\"\n          imagesrc={death}\n          isSelected={selected === \"death\"}\n        />\n      </span>\n      <span\n        onClick={() => select(\"donation\")}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Donation\"\n          imagesrc={donation}\n          isSelected={selected === \"donation\"}\n        />\n      </span>\n      <span onClick={() => select(\"post\")} className=\"sidebar-item-container\">\n        <SidebarItem\n          label=\"Post\"\n          imagesrc={post}\n          isSelected={selected === \"post\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\nimport { useEffect } from \"react\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  useEffect(\n    () =>\n      document\n        .querySelectorAll(\".sidebar-item-container\")\n        .forEach((element) => {\n          element.addEventListener(\"click\", () => {\n            hideSidebar();\n          });\n        }),\n    []\n  );\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}