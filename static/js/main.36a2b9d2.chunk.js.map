{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","assets/upload.svg","assets/confirm.svg","assets/email.svg","helpers.js","assets/loading.gif","api/FirebaseHelper.js","components/misc/loader.jsx","components/misc/content-table/content-table.jsx","components/misc/checkbox/checkbox.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/post.svg","assets/records.svg","assets/request.svg","assets/church.svg","components/content/count-content.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/password.svg","assets/logout.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["inputGetter","id","document","getElementById","value","getById","customAlert","message","icon","a","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","toDateTime","secs","t","Date","setSeconds","formatTime","timeStr","hours","mins","isTwelve","parseInt","isPM","attributeSorter","selected","obj","sortingArray","Object","keys","sort","b","convertCamelCase","word","toUpperCase","slice","match","join","showArchive","includes","getFile","directory","type","getDownloadURL","ref","storage","uploadFile","file","uploadBytes","hasCertificate","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","notificationCounter","countCallback","onSnapshot","query","where","recordCounter","addRecord","record","addDoc","success","editRecord","docId","override","setDoc","updateDoc","deleteRecord","deleteDoc","currentCollectionName","targetCollectionName","records","isArchive","onFinished","html","loading","allowOutsideClick","showConfirmButton","index","archiveRecord","undefined","referrence","login","username","password","admins","changePassword","oldPassword","newPassword","loggedIn","find","o","MiniLoader","className","Loader","ContentTable","columns","Table","onClick","event","stopPropagation","map","key","CheckBox","onChange","isChecked","e","target","checked","ContentItem","requestRefresh","isSelect","addToSelected","removeFromSelected","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","confirmingDonation","setConfirmingDonation","setIsChecked","hasCert","setHasCert","image","setImage","showOthers","setShowOthers","dontShow","showEdit","showPrint","showUpload","showConfirmDonation","showEmailRequest","showTable","form","useRef","submit","values","submitFile","scheduleDialog","showCancelButton","didOpen","onclick","timeInput","createElement","classList","add","appendChild","lastChild","remove","day","timeKeys","filter","time12h","time","modifier","minutes","convertTime12to24","preConfirm","noempty","querySelectorAll","element","innerHTML","then","isConfirmed","newRecord","useEffect","res","imgSrc","checkCert","toLowerCase","getImage","sendEmail","emailJS","sendForm","current","verified","error","showProperty","recordDetail","ActionButton","isShown","isLoading","email","window","open","emailAddress","requestedDocument","print","defaultValue","firstName","confirm","upload","input","confirmButtonText","showLoaderOnConfirm","backdrop","isValid","result","edit","console","log","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","marriageDate","replace","ageValid","nothingChanged","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","address","phone","fullname","phoneValid","content","date","archive","confirmArchive","toString","src","alt","ToggleSwitch","toggle","label","ActionBar","search","show","toggleArchive","toggleSelectMode","archiveSelected","addingRecord","setAddingRecord","marriageDialog","removeChild","CountContent","count","death","marriage","donation","post","requests","church","iconSwitch","Content","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","setIsSelect","recordCounts","setRecordCounts","selectedRecords","splice","findIndex","yearLastAdded","refreshList","fetchData","_recordCounts","countOfRecords","size","getMatches","arr","dateDocumentAdded","seconds","trim","createItem","archiveMultipleRecords","recordCount","dateAdded","props","getFullYear","SidebarItem","imagesrc","isSelected","notifCount","setNotifCount","countRecords","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","getDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.36a2b9d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","export default __webpack_public_path__ + \"static/media/confirm.8160dc89.svg\";","export default __webpack_public_path__ + \"static/media/email.f2182462.svg\";","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n\nexport function formatTime(timeStr) {\n  const hours = timeStr.substring(0, 2);\n  const mins = timeStr.substring(3, 5);\n\n  const isTwelve = parseInt(hours) === 0 || parseInt(hours) === 12;\n  const isPM = parseInt(hours) >= 12;\n\n  return `${\n    isTwelve ? \"12\" : isPM ? `0${parseInt(hours) % 12}` : hours\n  }:${mins} ${isPM ? \"PM\" : \"AM\"}`;\n}\n\nexport function convertTime12to24(time12h) {\n  const [time, modifier] = time12h.split(\" \");\n\n  let [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\") {\n    hours = \"00\";\n  }\n\n  if (modifier === \"PM\") {\n    hours = parseInt(hours, 10) + 12;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function attributeSorter(selected, obj) {\n  let sortingArray = [];\n\n  switch (selected) {\n    case \"marriage\":\n      sortingArray = [\n        \"wifeName\",\n        \"wifeAge\",\n        \"wifeBirthday\",\n        \"wifeReligion\",\n        \"wifePlaceOfBirth\",\n        \"husbandName\",\n        \"husbandAge\",\n        \"husbandBirthday\",\n        \"husbandReligion\",\n        \"husbandPlaceOfBirth\",\n        \"marriageDate\",\n      ];\n      break;\n    case \"death\":\n      sortingArray = [\"name\", \"dayOfBirth\", \"dayOfDeath\", \"dateOfMass\", \"age\"];\n      break;\n    case \"requests\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"address\",\n        \"requestedDocument\",\n        \"requestMethod\",\n        \"wifeName\",\n        \"husbandName\",\n        \"fullname\",\n      ];\n      break;\n    case \"donation\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"gender\",\n        \"address\",\n        \"city\",\n        \"country\",\n        \"phoneNumber\",\n        \"amount\",\n        \"gcashNumber\",\n        \"email\",\n      ];\n      break;\n\n    default:\n      return Object.keys(obj).sort((a, b) => {\n        if (a.length !== b.length) {\n          return a.length - b.length;\n        } else {\n          return a > b;\n        }\n      });\n  }\n\n  return Object.keys(obj).sort(\n    (a, b) => sortingArray.indexOf(a) - sortingArray.indexOf(b)\n  );\n}\n\nexport function chunkArray(inputArray) {\n  let perChunk = 5;\n\n  let result = inputArray.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / perChunk);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n\n  return result;\n}\n\nexport function convertCamelCase(word) {\n  try {\n    word = word.charAt(0).toUpperCase() + word.slice(1);\n    word = word.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    return word;\n  } catch {\n    return word;\n  }\n}\n\nexport const showArchive = (selected) =>\n  ![\"events\", \"donation\", \"\"].includes(selected);\n","export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","import {\n  collection,\n  doc,\n  getDocs,\n  setDoc,\n  query,\n  where,\n  addDoc,\n  updateDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport Swal from \"sweetalert2\";\nimport { firestore, storage } from \"../App\";\nimport { customAlert } from \"../helpers\";\n\nimport loading from \"../assets/loading.gif\";\n\nexport async function getFile(id, directory, type) {\n  try {\n    return await getDownloadURL(ref(storage, `${directory}/${id}.${type}`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function uploadFile(id, file, directory, type) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.${type}`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function notificationCounter(collectionName, countCallback) {\n  onSnapshot(\n    query(collection(firestore, collectionName), where(\"seen\", \"!=\", true)),\n    (data) => {\n      countCallback(data);\n    }\n  );\n}\n\nexport async function recordCounter(collectionName, countCallback) {\n  onSnapshot(collection(firestore, collectionName), (data) => {\n    countCallback(data);\n  });\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value, override) {\n  let success;\n  try {\n    if (override) {\n      value[\"dateDocumentAdded\"] = new Date();\n      await setDoc(doc(collection(firestore, collectionName), docId), value);\n    } else {\n      await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    }\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveMultipleRecords(\n  currentCollectionName,\n  targetCollectionName,\n  records,\n  isArchive,\n  onFinished\n) {\n  if (records.length > 0) {\n    Swal.fire({\n      title: `${\n        isArchive ? \"Un-Archiving\" : \"Archiving\"\n      } multiple records Please wait`,\n      html: `<img src=\"${loading}\"/>`,\n      allowOutsideClick: false,\n      showConfirmButton: false,\n    });\n    records.forEach(async (record, index) => {\n      await archiveRecord(\n        currentCollectionName,\n        targetCollectionName,\n        record.id,\n        record\n      );\n      if (index === records.length - 1) {\n        customAlert(\n          `Done ${isArchive ? \"Un-Archiving\" : \"Archiving\"}`,\n          \"success\"\n        );\n        onFinished();\n      }\n    });\n  } else {\n    customAlert(\"Nothing selected\", \"info\");\n  }\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  if (record.referrence === undefined) record[\"referrence\"] = record[\"id\"];\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import { convertCamelCase } from \"../../../helpers\";\nimport \"./content-table.scss\";\n\nexport default function ContentTable({ columns, data }) {\n  return (\n    <div className=\"table-container\">\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nfunction Table({ columns, data }) {\n  return (\n    <table onClick={(event) => event.stopPropagation()}>\n      <thead>\n        <tr>\n          {columns.map((key, index) => (\n            <th key={key + index}>{convertCamelCase(key)}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {columns.map((key, index) => (\n            <td key={data[key] + index}>{data[key]}</td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import \"./checkbox.scss\";\n\nexport default function CheckBox({ onChange, isChecked }) {\n  return (\n    <div className=\"checkbox-container\">\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        value={isChecked}\n        onChange={(e) => {\n          e.stopPropagation();\n          onChange(e.target.checked);\n        }}\n        onClick={(e) => e.stopPropagation()}\n      />\n    </div>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport confirm from \"../../assets/confirm.svg\";\nimport email from \"../../assets/email.svg\";\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  hasCertificate,\n  uploadFile,\n} from \"../../api/FirebaseHelper\";\nimport {\n  attributeSorter,\n  convertCamelCase,\n  convertTime12to24,\n  customAlert,\n  formatTime,\n  getById,\n  inputGetter,\n} from \"../../helpers\";\nimport emailJS from \"emailjs-com\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport ContentTable from \"../misc/content-table/content-table\";\nimport CheckBox from \"../misc/checkbox/checkbox\";\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n  isSelect,\n  addToSelected,\n  removeFromSelected,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [confirmingDonation, setConfirmingDonation] = useState(false);\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const [hasCert, setHasCert] = useState(false);\n  const [image, setImage] = useState(\"\");\n\n  const [showOthers, setShowOthers] = useState(false);\n\n  let dontShow = [\"id\", \"dateDocumentAdded\", \"seen\", \"referrence\", \"verified\"];\n\n  let showEdit = ![\"requests\", \"donation\", \"\"].includes(selected);\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showPrint = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showUpload = ![\"schedule\", \"donation\", \"requests\", \"\"].includes(selected);\n  let showConfirmDonation = selected === \"donation\";\n  let showEmailRequest = selected === \"requests\";\n\n  let showTable = ![\"events\", \"schedule\", \"\"].includes(selected);\n\n  const showProperty = (key) => {\n    if (!showTable) return !dontShow.includes(key);\n    else return key.toLowerCase().includes(\"name\");\n  };\n\n  function check(value) {\n    setIsChecked(() => value);\n    if (value) {\n      addToSelected(record);\n    } else {\n      removeFromSelected(record);\n    }\n  }\n\n  const form = useRef();\n\n  useEffect(() => {\n    async function checkCert() {\n      let res = await hasCertificate(\n        record.referrence !== undefined ? record.referrence : record.id,\n        selected\n      );\n      setHasCert(() => res);\n    }\n    checkCert();\n\n    function markSeen() {\n      record[\"seen\"] = true;\n      editRecord(selected, record.id, record);\n    }\n\n    if (\n      [\"requests\", \"donation\"].includes(selected.toLowerCase()) &&\n      record[\"seen\"] !== true\n    ) {\n      markSeen();\n    }\n\n    async function getImage() {\n      let imgSrc = await getFile(record.id, \"events\", \"jpg\");\n      setImage(() => imgSrc);\n    }\n\n    if (selected === \"events\") {\n      getImage();\n    }\n  }, [record.id, isArchive, selected, record]);\n\n  async function submit(values, override = false) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values,\n        override\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file, type) {\n    setUploading(() => true);\n    await uploadFile(\n      record.referrence !== undefined ? record.referrence : record.id,\n      file,\n      selected,\n      type\n    );\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(\n        isArchive ? `${selected}_archive` : selected,\n        isArchive ? selected : `${selected}_archive`,\n        record.id,\n        record\n      )\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    key = convertCamelCase(key);\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n        getById(\"marriageDate\").value = record.marriageDate;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion &&\n          marriageDate === record.marriageDate;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\" pattern=\"[+]{1}[0-9]{11,14}\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"address\").value = record.address;\n        getById(\"phone\").value = record.phone;\n      },\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \" \";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullname === record.name &&\n          address === record.address &&\n          phone === record.phone;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n        getById(\"date\").value = record.date;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title &&\n          content === record.content &&\n          date === record.date;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadDialog() {\n    Swal.fire({\n      title: \"Upload Certificate\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type === \"application/pdf\";\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose a pdf file\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"pdf\");\n      }\n    });\n  }\n\n  function uploadImage() {\n    Swal.fire({\n      title: \"Upload Image\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type.includes(\"image\");\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose an image\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"jpg\");\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Edit the Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () => {\n          let toRemove = getById(\"times\").lastChild;\n          toRemove.remove();\n        };\n\n        getById(\"day\").value = record.day;\n\n        let timeKeys = Object.keys(record).filter((key) =>\n          key.includes(\"time\")\n        );\n        timeKeys.sort((a, b) => {\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          } else {\n            return a > b;\n          }\n        });\n\n        timeKeys.forEach((key) => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          timeInput.value = convertTime12to24(record[key]);\n          getById(\"times\").appendChild(timeInput);\n        });\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newRecord = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          newRecord[`time${Object.keys(newRecord).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(newRecord, true);\n      }\n    });\n  }\n\n  const sendEmail = () => {\n    emailJS\n      .sendForm(\n        \"service_iredyvh\",\n        \"template_cf0wjy5\",\n        form.current,\n        \"user_NRZC9vjUaHFQ7n72dO765\"\n      )\n      .then(\n        () => {\n          customAlert(\"Email has been sent\", \"success\");\n          setVerified();\n          setConfirmingDonation(false);\n        },\n        (error) => {\n          customAlert(\"Something went wrong\", \"error\");\n          setConfirmingDonation(false);\n        }\n      );\n\n    emailJS.sendForm(\n      \"service_iredyvh\",\n      \"template_tpwuinn\",\n      form.current,\n      \"user_NRZC9vjUaHFQ7n72dO765\"\n    );\n  };\n\n  function setVerified() {\n    record.verified = true;\n    editRecord(\"donation\", record.id, record);\n  }\n\n  return (\n    <div\n      className=\"content-item\"\n      onClick={() => setShowOthers((current) => !current)}\n    >\n      <div className=\"content-details\">\n        <div className=\"record-datas\">\n          {attributeSorter(selected, record).map((key) => {\n            if (showProperty(key)) return recordDetail(key, record[key]);\n            else return null;\n          })}\n        </div>\n        <span>\n          <div className=\"icons-container\">\n            {isSelect ? (\n              <CheckBox isChecked={isChecked} onChange={check} />\n            ) : (\n              \"\"\n            )}\n            <ActionButton\n              isShown={showEmailRequest}\n              isLoading={false}\n              icon={email}\n              title=\"email\"\n              onClick={async (e) => {\n                window.open(\n                  `mailto:${record.emailAddress}?subject=${record.requestedDocument} request&body=`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showPrint && hasCert}\n              isLoading={false}\n              title={print}\n              icon={print}\n              onClick={async () => {\n                let file = await getFile(\n                  record.referrence !== undefined\n                    ? record.referrence\n                    : record.id,\n                  selected,\n                  \"pdf\"\n                );\n                window.open(file);\n              }}\n            />\n            <form ref={form} className=\"no-display\">\n              <input type=\"email\" name=\"user_email\" value={record.email} />\n              <input\n                type=\"email\"\n                name=\"admin_email\"\n                defaultValue={\"fdoreennicole@gmail.com\"}\n              />\n              <input type=\"text\" name=\"donor\" defaultValue={record.firstName} />\n            </form>\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={confirmingDonation}\n              icon={confirm}\n              title=\"confirm\"\n              onClick={async () => {\n                setConfirmingDonation(() => true);\n                sendEmail();\n              }}\n            />\n            <ActionButton\n              isShown={showUpload}\n              isLoading={uploading}\n              icon={upload}\n              title=\"upload\"\n              onClick={async () => {\n                if (selected === \"events\") {\n                  uploadImage();\n                } else {\n                  uploadDialog();\n                }\n              }}\n            />\n\n            <ActionButton\n              isShown={showEdit}\n              isLoading={updating}\n              icon={edit}\n              title=\"edit\"\n              onClick={(event) => {\n                console.log(event);\n                // e.stopPropagation();\n                switch (selected) {\n                  case \"marriage\":\n                    marriageDialog();\n                    break;\n                  case \"death\":\n                    deathDialog();\n                    break;\n                  case \"donation\":\n                    donationDialog();\n                    break;\n                  case \"events\":\n                    eventDialog();\n                    break;\n                  case \"schedule\":\n                    scheduleDialog();\n                    break;\n                  default:\n                }\n              }}\n            />\n            <ActionButton\n              isShown={showArchive}\n              isLoading={archiving}\n              icon={archive}\n              title=\"archive\"\n              onClick={() =>\n                Swal.fire({\n                  title: `Are you sure you want to ${\n                    isArchive ? \"un-archive\" : \"archive\"\n                  } this record?`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonText: isArchive ? \"un-archive\" : \"archive\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    confirmArchive();\n                  }\n                })\n              }\n            />\n          </div>\n        </span>\n      </div>\n      {showOthers && showTable ? (\n        <ContentTable\n          columns={attributeSorter(selected, record).filter(\n            (key) =>\n              ![...dontShow].includes(key) &&\n              !key.toString().toLowerCase().includes(\"name\")\n          )}\n          data={record}\n        />\n      ) : (\n        \"\"\n      )}\n      {selected === \"events\" && image !== null ? (\n        <img src={image} alt=\"\" className=\"event-image\" />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nfunction ActionButton({ isShown, isLoading, icon, onClick, title }) {\n  return isShown ? (\n    <div className=\"icon-container\">\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img\n          src={icon}\n          title={title}\n          alt={title}\n          className=\"icon\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClick();\n          }}\n        />\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggle, label }) {\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={(value) => {\n            toggle(value.target.checked);\n          }}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <h4>{label}</h4>\n    </div>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport archive from \"../../assets/archive.svg\";\n\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, formatTime, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  toggleSelectMode,\n  isArchive,\n  isSelect,\n  archiveSelected,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Create a Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        <input class=\"swal2-input\" type=\"time\">\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () =>\n          getById(\"times\").removeChild(getById(\"times\").lastChild);\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let record = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          record[`time${Object.keys(record).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(record);\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"events\" ? (\n        <span className=\"search-bar\">\n          <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"events\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggle={toggleArchive} label=\"Toggle Archive\" />\n          {showArchive ? (\n            <ToggleSwitch toggle={toggleSelectMode} label=\"Multi Select\" />\n          ) : (\n            \"\"\n          )}\n        </span>\n      ) : (\n        \"\"\n      )}\n      <div className=\"action-button-container\">\n        {showArchive && isSelect ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Archive selected\"\n            onClick={() => {\n              archiveSelected();\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={archive} alt=\"add\" className=\"icon\" />\n            )}\n            <h4> {isArchive ? \"Un-Archive\" : \"Archive\"}</h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n        {selected !== \"donation\" && selected !== \"requests\" ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Add\"\n            onClick={() => {\n              switch (selected) {\n                case \"marriage\":\n                  marriageDialog();\n                  break;\n                case \"death\":\n                  deathDialog();\n                  break;\n                case \"donation\":\n                  donationDialog();\n                  break;\n                case \"events\":\n                  eventDialog();\n                  break;\n                case \"schedule\":\n                  scheduleDialog();\n                  break;\n                default:\n                  marriageDialog();\n              }\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={add} alt=\"add\" className=\"icon\" />\n            )}\n            <h4>Add </h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","export default __webpack_public_path__ + \"static/media/church.ab21ef53.svg\";","import death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\n\nexport default function CountContent({ name, count }) {\n  function iconSwitch() {\n    switch (name) {\n      case \"death\":\n        return death;\n      case \"marriage\":\n        return marriage;\n      case \"donation\":\n        return donation;\n      case \"events\":\n        return post;\n      case \"requests\":\n        return requests;\n      case \"schedule\":\n        return church;\n      default:\n        return records;\n    }\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"count-icon-container\">\n        <img src={iconSwitch()} alt={name} className=\"icon count-icon\" />\n      </div>\n      <div className=\"count-item-container\">\n        <h3> {name}</h3>\n        <h1> {count}</h1>\n      </div>\n    </div>\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport {\n  archiveMultipleRecords,\n  fetchCollection,\n  recordCounter,\n} from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { showArchive, toDateTime } from \"../../helpers\";\nimport CountContent from \"./count-content\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n  const [isSelect, setIsSelect] = useState(false);\n  const [recordCounts, setRecordCounts] = useState([]);\n\n  const selectedRecords = [];\n\n  function addToSelected(record) {\n    selectedRecords.push(record);\n  }\n\n  function removeFromSelected(record) {\n    selectedRecords.splice(\n      selectedRecords.findIndex((element) => (record.id = element.id)),\n      1\n    );\n  }\n\n  function archiveSelected() {\n    archiveMultipleRecords(\n      isArchive ? `${selected}_archive` : selected,\n      isArchive ? selected : `${selected}_archive`,\n      selectedRecords,\n      isArchive,\n      () => refreshList()\n    );\n  }\n\n  let yearLastAdded = \"\";\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n  const toggleSelectMode = (value) => setIsSelect(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"events\") {\n        setIsArchive(() => false);\n      }\n      if (!showArchive(selected)) {\n        setIsSelect(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    } else {\n      setFetchingCollection(() => true);\n      let records = [\n        \"marriage\",\n        \"death\",\n        \"donation\",\n        \"events\",\n        \"requests\",\n        \"schedule\",\n      ];\n\n      let _recordCounts = [];\n      records.forEach(async (record, index) => {\n        await recordCounter(record, (data) => {\n          _recordCounts.push({\n            name: record,\n            countOfRecords: data.size,\n          });\n          if (index === records.length - 1) {\n            setRecordCounts(() => _recordCounts);\n            setFetchingCollection(() => false);\n          }\n        });\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort(\n      (a, b) =>\n        toDateTime(a.dateDocumentAdded.seconds) <\n        toDateTime(b.dateDocumentAdded.seconds)\n    );\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.wifeName || record.husbandName || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id + isArchive}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n        isSelect={isSelect}\n        addToSelected={addToSelected}\n        removeFromSelected={removeFromSelected}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n        toggleArchive={toggleArchive}\n        toggleSelectMode={toggleSelectMode}\n        isArchive={isArchive}\n        isSelect={isSelect}\n        archiveSelected={archiveSelected}\n      />\n      {fetchingCollection ? (\n        <Loader />\n      ) : selected === \"\" ? (\n        <div className=\"count-container\">\n          {recordCounts.map((recordCount) => {\n            recordCount.id = recordCount.name;\n            return (\n              <CountContent\n                key={recordCount.name}\n                name={recordCount.name}\n                count={recordCount.countOfRecords}\n              />\n            );\n          })}\n        </div>\n      ) : isArchive ? (\n        getMatches().map((record) => {\n          let dateAdded = toDateTime(\n            record.props.record.dateDocumentAdded.seconds\n          ).getFullYear();\n          let id = record.props.record.id;\n          if (yearLastAdded !== dateAdded) {\n            yearLastAdded = dateAdded;\n            return (\n              <div key={id + isArchive.toString()}>\n                <h3 className=\"content-message\">\n                  Records From year {yearLastAdded}\n                </h3>\n                <div className=\"content-container\">{record}</div>\n              </div>\n            );\n          } else {\n            return (\n              <div\n                key={id + isArchive.toString()}\n                className=\"content-container\"\n              >\n                {record}\n              </div>\n            );\n          }\n        })\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","import { useEffect, useState } from \"react\";\nimport { notificationCounter } from \"../../api/FirebaseHelper\";\n\nexport default function SidebarItem({ imagesrc, label, isSelected }) {\n  const [notifCount, setNotifCount] = useState(0);\n\n  useEffect(() => {\n    async function countRecords() {\n      notificationCounter(label.toLowerCase(), function (data) {\n        setNotifCount(() => data.size);\n      });\n    }\n\n    if ([\"requests\", \"donation\"].includes(label.toLowerCase())) {\n      countRecords();\n    }\n  }, [label]);\n\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      {notifCount > 0 ? <span className=\"badge\">{notifCount}</span> : \"\"}\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"events\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Events\"\n          imagesrc={post}\n          isSelected={selected === \"events\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"schedule\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Mass Schedule\"\n          imagesrc={church}\n          isSelected={selected === \"schedule\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  //comment\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}