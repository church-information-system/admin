{"version":3,"sources":["assets/loading.gif","assets/backup.svg","assets/upload.svg","assets/print.svg","assets/edit.svg","assets/archive.svg","assets/confirm.svg","assets/email.svg","assets/download.svg","documents/death_cert.docx","documents/marriage_cert.docx","documents/marriage_cert_empty.pdf","documents/death_cert_empty.pdf","helpers.js","api/FirebaseHelper.js","components/misc/loader.jsx","components/misc/content-table/content-table.jsx","components/misc/checkbox/checkbox.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/post.svg","assets/records.svg","assets/request.svg","assets/church.svg","components/content/count-content.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/password.svg","assets/logout.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["inputGetter","id","document","getElementById","value","getById","customAlert","message","icon","a","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","toDateTime","secs","t","Date","setSeconds","calculateAgeInYears","date","now","current_year","getFullYear","year_diff","getMonth","getDate","calculateAgeInYearsDeath","death","formatTime","timeStr","hours","mins","isTwelve","parseInt","isPM","attributeSorter","selected","obj","sortingArray","Object","keys","sort","b","convertCamelCase","word","toUpperCase","slice","match","join","showArchive","includes","getFile","directory","type","getDownloadURL","ref","storage","uploadFile","file","uploadBytes","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","notificationCounter","countCallback","onSnapshot","query","where","recordCounter","addRecord","record","addDoc","success","editRecord","docId","override","setDoc","updateDoc","deleteRecord","deleteDoc","currentCollectionName","targetCollectionName","records","isArchive","onFinished","html","loading","allowOutsideClick","showConfirmButton","index","archiveRecord","undefined","referrence","login","username","password","admins","changePassword","oldPassword","newPassword","loggedIn","find","o","backupOrRestore","isBackup","fetch","credentials","method","headers","Accept","then","response","json","catch","MiniLoader","className","Loader","ContentTable","columns","Table","onClick","event","stopPropagation","map","key","toString","CheckBox","onChange","isChecked","e","target","checked","loadFile","url","callback","PizZipUtils","getBinaryContent","ContentItem","requestRefresh","isSelect","addToSelected","removeFromSelected","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","confirmingDonation","setConfirmingDonation","setIsChecked","image","setImage","showOthers","setShowOthers","dontShow","showEdit","showPrint","showUpload","showConfirmDonation","showEmailRequest","showTable","useEffect","imgSrc","toLowerCase","getImage","generateDocument","console","log","husbandBirthday","marriageCert","deathCert","error","content","zip","PizZip","Docxtemplater","paragraphLoop","linebreaks","marriageDate","dateIssued","render","husbandName","husbandAge","husbandPlaceOfBirth","husbandReligion","husbandResidence","husbandFather","husbandMother","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","wifeResidence","wifeFather","wifeMother","md","mm","toLocaleDateString","month","my","priest","witness","residence","licenseNo","bookNo","pageNo","lineNo","dIssued","mIssued","yIssued","out","getZip","generate","mimeType","saveAs","dayOfDeath","dateOfBurial","dd","dm","dy","dayOfBirth","dateOfMass","age","address","father","mother","spouse","cemetery","cemeteryAddress","bd","bm","by","causeOfDeath","received","receivedSacrament","dateRecorded","openPdf","deathCertPdf","draw","x","y","firstPage","drawText","size","font","helveticaFont","color","rgb","PDFDocument","load","pdfDoc","embedFont","StandardFonts","Helvetica","pages","getPages","rec","outputBase64","saveAsBase64","pdfWindow","window","open","encodeURI","write","marriageCertPdf","submit","values","submitFile","scheduleDialog","showCancelButton","didOpen","onclick","timeInput","createElement","classList","add","appendChild","lastChild","remove","day","timeKeys","filter","time12h","time","modifier","minutes","convertTime12to24","preConfirm","noempty","querySelectorAll","element","innerHTML","isConfirmed","newRecord","current","showProperty","recordDetail","ActionButton","isShown","isLoading","email","emailAddress","requestedDocument","print","download","verified","confirm","confirmButtonColor","upload","input","confirmButtonText","showLoaderOnConfirm","backdrop","isValid","result","edit","nothingChanged","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","fullName","archive","confirmArchive","src","alt","ToggleSwitch","toggle","label","ActionBar","search","show","toggleArchive","toggleSelectMode","archiveSelected","addingRecord","setAddingRecord","marriageDialog","replace","fullname","phone","phoneValid","removeChild","CountContent","count","marriage","donation","post","requests","church","iconSwitch","Content","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","setIsSelect","recordCounts","setRecordCounts","selectedRecords","splice","findIndex","yearLastAdded","refreshList","fetchData","_recordCounts","countOfRecords","getMatches","arr","dateDocumentAdded","seconds","_seconds","JSON","stringify","trim","createItem","backup","archiveMultipleRecords","recordCount","dateAdded","props","SidebarItem","imagesrc","isSelected","notifCount","setNotifCount","countRecords","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5021a2bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","export default __webpack_public_path__ + \"static/media/backup.607152e5.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/confirm.8160dc89.svg\";","export default __webpack_public_path__ + \"static/media/email.f2182462.svg\";","export default __webpack_public_path__ + \"static/media/download.189b352b.svg\";","export default __webpack_public_path__ + \"static/media/death_cert.32c6fd3d.docx\";","export default __webpack_public_path__ + \"static/media/marriage_cert.ffad9b78.docx\";","export default __webpack_public_path__ + \"static/media/marriage_cert_empty.f98a0a05.pdf\";","export default __webpack_public_path__ + \"static/media/death_cert_empty.9ea6671e.pdf\";","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n\nexport function calculateAgeInYears(date) {\n  var now = new Date();\n  var current_year = now.getFullYear();\n  var year_diff = current_year - date.getFullYear();\n  var birthday_this_year = new Date(\n    current_year,\n    date.getMonth(),\n    date.getDate()\n  );\n  var has_had_birthday_this_year = now >= birthday_this_year;\n\n  return has_had_birthday_this_year ? year_diff : year_diff - 1;\n}\n\nexport function calculateAgeInYearsDeath(date, death) {\n  var now = new Date(death);\n  var current_year = now.getFullYear();\n  var year_diff = current_year - date.getFullYear();\n  var birthday_this_year = new Date(\n    current_year,\n    date.getMonth(),\n    date.getDate()\n  );\n  var has_had_birthday_this_year = now >= birthday_this_year;\n\n  return has_had_birthday_this_year ? year_diff : year_diff - 1;\n}\n\nexport function formatTime(timeStr) {\n  const hours = timeStr.substring(0, 2);\n  const mins = timeStr.substring(3, 5);\n\n  const isTwelve = parseInt(hours) === 0 || parseInt(hours) === 12;\n  const isPM = parseInt(hours) >= 12;\n\n  return `${\n    isTwelve ? \"12\" : isPM ? `0${parseInt(hours) % 12}` : hours\n  }:${mins} ${isPM ? \"PM\" : \"AM\"}`;\n}\n\nexport function convertTime12to24(time12h) {\n  const [time, modifier] = time12h.split(\" \");\n\n  let [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\") {\n    hours = \"00\";\n  }\n\n  if (modifier === \"PM\") {\n    hours = parseInt(hours, 10) + 12;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function attributeSorter(selected, obj) {\n  let sortingArray = [];\n\n  switch (selected) {\n    case \"marriage\":\n      sortingArray = [\n        \"wifeName\",\n        \"wifeAge\",\n        \"wifeBirthday\",\n        \"wifeReligion\",\n        \"wifePlaceOfBirth\",\n        \"husbandName\",\n        \"husbandAge\",\n        \"husbandBirthday\",\n        \"husbandReligion\",\n        \"husbandPlaceOfBirth\",\n        \"marriageDate\",\n        \"priest\",\n        \"witness\",\n        \"residence\",\n        \"licenseNo\",\n        \"bookNo\",\n        \"pageNo\",\n        \"lineNo\",\n        \"dateIssued\",\n      ];\n      break;\n    case \"death\":\n      sortingArray = [\n        \"name\",\n        \"dayOfBirth\",\n        \"dayOfDeath\",\n        \"dateOfMass\",\n        \"age\",\n        \"address\",\n        \"father\",\n        \"mother\",\n        \"spouse\",\n        \"cemetery\",\n        \"cemeteryAddress\",\n        \"receivedSacrament\",\n        \"address\",\n        \"bookNo\",\n        \"pageNo\",\n        \"lineNo\",\n        \"dateRecorded\",\n      ];\n      break;\n    case \"requests\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"address\",\n        \"requestedDocument\",\n        \"requestMethod\",\n        \"wifeName\",\n        \"husbandName\",\n        \"fullname\",\n      ];\n      break;\n    case \"donation\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"gender\",\n        \"address\",\n        \"city\",\n        \"country\",\n        \"phoneNumber\",\n        \"amount\",\n        \"gcashNumber\",\n        \"email\",\n      ];\n      break;\n\n    default:\n      return Object.keys(obj).sort((a, b) => {\n        if (a.length !== b.length) {\n          return a.length - b.length;\n        } else {\n          return a > b;\n        }\n      });\n  }\n\n  return Object.keys(obj).sort(\n    (a, b) => sortingArray.indexOf(a) - sortingArray.indexOf(b)\n  );\n}\n\nexport function chunkArray(inputArray) {\n  let perChunk = 5;\n\n  let result = inputArray.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / perChunk);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n\n  return result;\n}\n\nexport function convertCamelCase(word) {\n  try {\n    word = word.charAt(0).toUpperCase() + word.slice(1);\n    word = word.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    return word;\n  } catch {\n    return word;\n  }\n}\n\nexport const showArchive = (selected) =>\n  ![\"events\", \"donation\", \"\"].includes(selected);\n","import {\n  collection,\n  doc,\n  getDocs,\n  setDoc,\n  query,\n  where,\n  addDoc,\n  updateDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport Swal from \"sweetalert2\";\nimport { firestore, storage } from \"../App\";\nimport { customAlert } from \"../helpers\";\n\nimport loading from \"../assets/loading.gif\";\n\nexport async function getFile(id, directory, type) {\n  try {\n    return await getDownloadURL(ref(storage, `${directory}/${id}.${type}`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function deathCertificate() {\n  try {\n    return await getDownloadURL(ref(storage, `hello_world.docx`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function uploadFile(id, file, directory, type) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.${type}`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function notificationCounter(collectionName, countCallback) {\n  onSnapshot(\n    query(collection(firestore, collectionName), where(\"seen\", \"!=\", true)),\n    (data) => {\n      countCallback(data);\n    }\n  );\n}\n\nexport async function recordCounter(collectionName, countCallback) {\n  onSnapshot(collection(firestore, collectionName), (data) => {\n    countCallback(data);\n  });\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value, override) {\n  let success;\n  try {\n    if (override) {\n      value[\"dateDocumentAdded\"] = new Date();\n      await setDoc(doc(collection(firestore, collectionName), docId), value);\n    } else {\n      await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    }\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveMultipleRecords(\n  currentCollectionName,\n  targetCollectionName,\n  records,\n  isArchive,\n  onFinished\n) {\n  if (records.length > 0) {\n    Swal.fire({\n      title: `${\n        isArchive ? \"Un-Archiving\" : \"Archiving\"\n      } multiple records Please wait`,\n      html: `<img src=\"${loading}\"/>`,\n      allowOutsideClick: false,\n      showConfirmButton: false,\n    });\n    records.forEach(async (record, index) => {\n      await archiveRecord(\n        currentCollectionName,\n        targetCollectionName,\n        record.id,\n        record\n      );\n      if (index === records.length - 1) {\n        customAlert(\n          `Done ${isArchive ? \"Un-Archiving\" : \"Archiving\"}`,\n          \"success\"\n        );\n        onFinished();\n      }\n    });\n  } else {\n    customAlert(\"Nothing selected\", \"info\");\n  }\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  if (record.referrence === undefined) record[\"referrence\"] = record[\"id\"];\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n\n// not related to firebase but at this point I'm too tilted to even care\n\nexport function backupOrRestore(isBackup) {\n  fetch(`http://localhost:8080/${isBackup ? \"backupAll\" : \"restoreAll\"}`, {\n    credentials: \"same-origin\",\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.success) {\n        customAlert(\n          `Data ${isBackup ? \"Backed up\" : \"Restored\"} successfully`,\n          \"success\"\n        );\n      } else {\n        customAlert(\n          `Failed to ${\n            isBackup ? \"Back up\" : \"Restore\"\n          } Data , check your internet connection and make sure you are running the data backup server in port 8080`,\n          \"error\"\n        );\n      }\n    })\n    .catch(() => {\n      customAlert(\n        `Failed to ${\n          isBackup ? \"Back up\" : \"Restore\"\n        } Data , check your internet connection and make sure you are running the data backup server in port 8080`,\n        \"error\"\n      );\n    });\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import { convertCamelCase } from \"../../../helpers\";\nimport \"./content-table.scss\";\n\nexport default function ContentTable({ columns, data }) {\n  return (\n    <div className=\"table-container\">\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nfunction Table({ columns, data }) {\n  return (\n    <table onClick={(event) => event.stopPropagation()}>\n      <thead>\n        <tr>\n          {columns.map((key, index) => (\n            <th key={key + index}>{convertCamelCase(key)}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {columns.map((key, index) => (\n            <td key={data[key] + index}>{data[key].toString()}</td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import \"./checkbox.scss\";\n\nexport default function CheckBox({ onChange, isChecked }) {\n  return (\n    <div className=\"checkbox-container\">\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        value={isChecked}\n        onChange={(e) => {\n          e.stopPropagation();\n          onChange(e.target.checked);\n        }}\n        onClick={(e) => e.stopPropagation()}\n      />\n    </div>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport confirm from \"../../assets/confirm.svg\";\nimport email from \"../../assets/email.svg\";\nimport download from \"../../assets/download.svg\";\n\nimport deathCert from \"../../documents/death_cert.docx\";\nimport marriageCert from \"../../documents/marriage_cert.docx\";\nimport marriageCertPdf from \"../../documents/marriage_cert_empty.pdf\";\nimport deathCertPdf from \"../../documents/death_cert_empty.pdf\";\n\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  uploadFile,\n} from \"../../api/FirebaseHelper\";\nimport {\n  attributeSorter,\n  calculateAgeInYears,\n  calculateAgeInYearsDeath,\n  convertCamelCase,\n  convertTime12to24,\n  customAlert,\n  formatTime,\n  getById,\n  inputGetter,\n} from \"../../helpers\";\nimport { useEffect, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport ContentTable from \"../misc/content-table/content-table\";\nimport CheckBox from \"../misc/checkbox/checkbox\";\nimport Docxtemplater from \"docxtemplater\";\nimport PizZip from \"pizzip\";\nimport PizZipUtils from \"pizzip/utils/index.js\";\nimport { saveAs } from \"file-saver\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\n\nfunction loadFile(url, callback) {\n  PizZipUtils.getBinaryContent(url, callback);\n}\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n  isSelect,\n  addToSelected,\n  removeFromSelected,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [confirmingDonation, setConfirmingDonation] = useState(false);\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const [image, setImage] = useState(\"\");\n\n  const [showOthers, setShowOthers] = useState(false);\n\n  let dontShow = [\"id\", \"dateDocumentAdded\", \"seen\", \"referrence\", \"verified\"];\n\n  let showEdit = ![\"requests\", \"\"].includes(selected);\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showPrint = [\"death\", \"marriage\", \"\"].includes(selected);\n  let showUpload = [\"events\"].includes(selected);\n  let showConfirmDonation = selected === \"donation\";\n  let showEmailRequest = selected === \"requests\";\n\n  let showTable = ![\"events\", \"schedule\", \"\"].includes(selected);\n\n  const showProperty = (key) => {\n    if (!showTable) return !dontShow.includes(key);\n    else\n      return (\n        key.toLowerCase().includes(\"name\") ||\n        key.toLowerCase().includes(\"gcashnumber\")\n      );\n  };\n\n  function check(value) {\n    setIsChecked(() => value);\n    if (value) {\n      addToSelected(record);\n    } else {\n      removeFromSelected(record);\n    }\n  }\n\n  useEffect(() => {\n    function markSeen() {\n      record[\"seen\"] = true;\n      editRecord(selected, record.id, record);\n    }\n\n    if (\n      [\"requests\", \"donation\"].includes(selected.toLowerCase()) &&\n      record[\"seen\"] !== true\n    ) {\n      markSeen();\n    }\n\n    async function getImage() {\n      let imgSrc = await getFile(record.id, \"events\", \"jpg\");\n      setImage(() => imgSrc);\n    }\n\n    if (selected === \"events\") {\n      getImage();\n    }\n  }, [record.id, isArchive, selected, record]);\n\n  const generateDocument = async () => {\n    console.log(calculateAgeInYears(new Date(record.husbandBirthday)));\n    loadFile(\n      selected === \"marriage\" ? marriageCert : deathCert,\n      function (error, content) {\n        if (error) {\n          throw error;\n        }\n        const zip = new PizZip(content);\n        const doc = new Docxtemplater(zip, {\n          paragraphLoop: true,\n          linebreaks: true,\n        });\n\n        if (selected === \"marriage\") {\n          let marriageDate = new Date(record.marriageDate);\n          let dateIssued = new Date(record.dateIssued);\n\n          doc.render({\n            husbandName: record.husbandName,\n            husbandAge: calculateAgeInYears(new Date(record.husbandBirthday)),\n            husbandBirthday: record.husbandBirthday,\n            husbandPlaceOfBirth: record.husbandPlaceOfBirth,\n            husbandReligion: record.husbandReligion,\n            husbandResidence: record.husbandResidence,\n            husbandFather: record.husbandFather,\n            husbandMother: record.husbandMother,\n            wifeName: record.wifeName,\n            wifeAge: calculateAgeInYears(new Date(record.wifeBirthday)),\n            wifeBirthday: record.wifeBirthday,\n            wifePlaceOfBirth: record.wifePlaceOfBirth,\n            wifeReligion: record.wifeReligion,\n            wifeResidence: record.wifeResidence,\n            wifeFather: record.wifeFather,\n            wifeMother: record.wifeMother,\n            md: marriageDate.getDate(),\n            mm: marriageDate.toLocaleDateString(\"default\", { month: \"long\" }),\n            my: marriageDate.getFullYear(),\n            priest: record.priest,\n            witness: record.witness,\n            residence: record.residence,\n            licenseNo: record.licenseNo,\n            bookNo: record.bookNo,\n            pageNo: record.pageNo,\n            lineNo: record.lineNo,\n            dateIssued: record.dateIssued,\n            dIssued: dateIssued.getDate(),\n            mIssued: dateIssued.toLocaleDateString(\"default\", {\n              month: \"long\",\n            }),\n            yIssued: dateIssued.getFullYear(),\n          });\n          const out = doc.getZip().generate({\n            type: \"blob\",\n            mimeType:\n              \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n          });\n          saveAs(out, `${record.husbandName}_${record.wifeName}.docx`);\n        } else {\n          let dayOfDeath = new Date(record.dayOfDeath);\n          let dateOfBurial = new Date(record.dateOfBurial);\n\n          doc.render({\n            name: record.name,\n            dd: dayOfDeath.getDate(),\n            dm: dayOfDeath.toLocaleDateString(\"default\", { month: \"long\" }),\n            dy: dayOfDeath.getFullYear(),\n            dayOfBirth: record.dayOfBirth,\n            dateOfMass: record.dateOfMass,\n            age: calculateAgeInYearsDeath(\n              new Date(record.dayOfBirth),\n              record.dayOfDeath\n            ),\n            address: record.address,\n            father: record.father,\n            mother: record.mother,\n            spouse: record.spouse,\n            cemetery: record.cemetery,\n            cemeteryAddress: record.cemeteryAddress,\n            dateOfBurial: record.dateOfBurial,\n            bd: dateOfBurial.getDate(),\n            bm: dateOfBurial.toLocaleDateString(\"default\", { month: \"long\" }),\n            by: dateOfBurial.getFullYear(),\n            causeOfDeath: record.causeOfDeath,\n            received: record.receivedSacrament ? \"was\" : \"was not\",\n            bookNo: record.bookNo,\n            pageNo: record.pageNo,\n            lineNo: record.lineNo,\n            dateRecorded: record.dateRecorded,\n          });\n          const out = doc.getZip().generate({\n            type: \"blob\",\n            mimeType:\n              \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n          });\n          saveAs(out, `${record.name}.docx`);\n        }\n      }\n    );\n  };\n\n  async function openPdf() {\n    if (selected === \"death\") {\n      loadFile(deathCertPdf, async (error, content) => {\n        if (error) {\n          return;\n        }\n        const pdfDoc = await PDFDocument.load(content);\n        const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n        const pages = pdfDoc.getPages();\n        const firstPage = pages[0];\n\n        let dayOfDeath = new Date(record.dayOfDeath);\n        let dateOfBurial = new Date(record.dateOfBurial);\n        function draw(value, x, y) {\n          if (value === undefined || value === null) value = \"\";\n          firstPage.drawText(value.toString(), {\n            x: x,\n            y: y,\n            size: 11,\n            font: helveticaFont,\n            color: rgb(0, 0, 0),\n          });\n        }\n\n        let records = [\n          { value: record.name, x: 260, y: 570 },\n          { value: dayOfDeath.getDate(), x: 122, y: 453 },\n          {\n            value: dayOfDeath.toLocaleDateString(\"default\", { month: \"long\" }),\n            x: 230,\n            y: 453,\n          },\n          { value: dayOfDeath.getFullYear(), x: 356, y: 453 },\n          {\n            value: calculateAgeInYearsDeath(\n              new Date(record.dayOfBirth),\n              record.dayOfDeath\n            ),\n            x: 479,\n            y: 453,\n          },\n          { value: record.address, x: 175, y: 540 },\n          { value: record.mother, x: 398, y: 510 },\n          { value: record.father, x: 189, y: 510 },\n          { value: record.spouse, x: 261, y: 481 },\n          { value: record.cemetery, x: 180, y: 425 },\n          { value: record.cemeteryAddress, x: 67, y: 395 },\n          { value: dateOfBurial.getDate(), x: 402, y: 395 },\n          {\n            value: dateOfBurial.toLocaleDateString(\"default\", {\n              month: \"long\",\n            }),\n            x: 462,\n            y: 395,\n          },\n          { value: dateOfBurial.getFullYear(), x: 535, y: 395 },\n          { value: record.causeOfDeath, x: 191, y: 376 },\n          {\n            value: record.receivedSacrament ? \"was\" : \"was not\",\n            x: 178,\n            y: 315,\n          },\n          { value: record.bookNo, x: 231, y: 256 },\n          { value: record.pageNo, x: 312, y: 256 },\n          { value: record.lineNo, x: 391, y: 256 },\n          { value: record.dateRecorded, x: 354, y: 228 },\n        ];\n\n        records.forEach((rec) => {\n          draw(rec.value, rec.x, rec.y);\n        });\n\n        const outputBase64 = pdfDoc.saveAsBase64();\n\n        let pdfWindow = window.open(\"\");\n        pdfWindow.document.write(\n          \"<style>body{margin:0; padding:0}iframe{border:none;margin:0;padding:0}</style><iframe width='100%' height='100%' border=none src='data:application/pdf;base64, \" +\n            encodeURI(await outputBase64) +\n            \"'></iframe>\"\n        );\n      });\n    } else if (selected === \"marriage\") {\n      loadFile(marriageCertPdf, async (error, content) => {\n        if (error) {\n          return;\n        }\n        const pdfDoc = await PDFDocument.load(content);\n        const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n        const pages = pdfDoc.getPages();\n        const firstPage = pages[0];\n\n        let marriageDate = new Date(record.marriageDate);\n        let dateIssued = new Date(record.dateIssued);\n        function draw(value, x, y) {\n          firstPage.drawText(value.toString(), {\n            x: x,\n            y: y,\n            size: 11,\n            font: helveticaFont,\n            color: rgb(0, 0, 0),\n          });\n        }\n\n        let records = [\n          { value: record.husbandName, x: 75, y: 574 },\n          {\n            value: calculateAgeInYears(new Date(record.husbandBirthday)),\n            x: 90,\n            y: 549,\n          },\n          { value: record.husbandPlaceOfBirth, x: 106, y: 524 },\n          { value: record.husbandResidence, x: 112, y: 499 },\n          { value: record.husbandFather, x: 106, y: 476 },\n          { value: record.husbandMother, x: 105, y: 452 },\n          { value: record.wifeName, x: 329, y: 574 },\n          {\n            value: calculateAgeInYears(new Date(record.wifeBirthday)),\n            x: 329,\n            y: 549,\n          },\n          { value: record.wifePlaceOfBirth, x: 329, y: 524 },\n          { value: record.wifeResidence, x: 329, y: 501 },\n          { value: record.wifeFather, x: 329, y: 476 },\n          { value: record.wifeMother, x: 329, y: 452 },\n          { value: marriageDate.getDate(), x: 105, y: 350 },\n          {\n            value: marriageDate.toLocaleDateString(\"default\", {\n              month: \"long\",\n            }),\n            x: 253,\n            y: 349,\n          },\n          { value: marriageDate.getFullYear(), x: 461, y: 350 },\n          { value: record.priest, x: 256, y: 325 },\n          { value: record.witness, x: 171, y: 300 },\n          { value: record.residence, x: 165, y: 277 },\n          { value: record.licenseNo, x: 359, y: 202 },\n          { value: record.bookNo, x: 217, y: 226 },\n          { value: record.pageNo, x: 315, y: 226 },\n          { value: record.lineNo, x: 401, y: 226 },\n          { value: dateIssued.getDate(), x: 181, y: 177 },\n          {\n            value: dateIssued.toLocaleDateString(\"default\", {\n              month: \"long\",\n            }),\n            x: 324,\n            y: 177,\n          },\n          { value: dateIssued.getFullYear(), x: 441, y: 177 },\n        ];\n\n        records.forEach((rec) => {\n          draw(rec.value, rec.x, rec.y);\n        });\n\n        const outputBase64 = pdfDoc.saveAsBase64();\n\n        let pdfWindow = window.open(\"\");\n        pdfWindow.document.write(\n          \"<style>body{margin:0; padding:0}iframe{border:none;margin:0;padding:0}</style><iframe width='100%' height='100%' border=none src='data:application/pdf;base64, \" +\n            encodeURI(await outputBase64) +\n            \"'></iframe>\"\n        );\n      });\n    }\n  }\n\n  async function submit(values, override = false) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values,\n        override\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file, type) {\n    setUploading(() => true);\n    await uploadFile(\n      record.referrence !== undefined ? record.referrence : record.id,\n      file,\n      selected,\n      type\n    );\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(\n        isArchive ? `${selected}_archive` : selected,\n        isArchive ? selected : `${selected}_archive`,\n        record.id,\n        record\n      )\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    key = convertCamelCase(key);\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key.toString()}:</span>\n        <span className=\"value\">{value.toString()}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"wifeResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"wifeFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"wifeMother\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"husbandResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"husbandFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"husbandMother\" class=\"swal2-input\">' +\n        \"<h3>Marriage Details</h3>\" +\n        '<span class=\"swal2-input-label\">Date Of marriage</span>' +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Priest </span>' +\n        '<input id=\"priest\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Witness </span>' +\n        '<input id=\"witness\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence </span>' +\n        '<input id=\"residence\" class=\"swal2-input\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">license No</span>' +\n        '<input id=\"licenseNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Marriage License Issued Date</span>' +\n        '<input id=\"dateIssued\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n        getById(\"marriageDate\").value = record.marriageDate;\n        getById(\"husbandResidence\").value = record.husbandResidence;\n        getById(\"husbandFather\").value = record.husbandFather;\n        getById(\"husbandMother\").value = record.husbandMother;\n        getById(\"wifeResidence\").value = record.wifeResidence;\n        getById(\"wifeFather\").value = record.wifeFather;\n        getById(\"wifeMother\").value = record.wifeMother;\n        getById(\"priest\").value = record.priest;\n        getById(\"witness\").value = record.witness;\n        getById(\"residence\").value = record.residence;\n        getById(\"licenseNo\").value = record.licenseNo;\n        getById(\"bookNo\").value = record.bookNo;\n        getById(\"pageNo\").value = record.pageNo;\n        getById(\"lineNo\").value = record.lineNo;\n        getById(\"dateIssued\").value = record.dateIssued;\n      },\n      preConfirm: () => {\n        // TO ADD\n        // birthPlace, address, father, mother, priest, presenceOf, residence,\n        // churchRecord{bookNo, pageNo, line}\n        // licenseNo\n        // dateIssued\n\n        //TODO: add more fields in the actionbar as well\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n        let husbandResidence = inputGetter(\"husbandResidence\");\n        let husbandFather = inputGetter(\"husbandFather\");\n        let husbandMother = inputGetter(\"husbandMother\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n        let wifeResidence = inputGetter(\"wifeResidence\");\n        let wifeFather = inputGetter(\"wifeFather\");\n        let wifeMother = inputGetter(\"wifeMother\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let priest = inputGetter(\"priest\");\n        let witness = inputGetter(\"witness\");\n        let residence = inputGetter(\"residence\");\n\n        let licenseNo = inputGetter(\"licenseNo\");\n\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateIssued = inputGetter(\"dateIssued\");\n\n        // let husbandResidence = inputGetter(\"husbandResidence\");\n        // let husbandFather = inputGetter(\"husbandFather\");\n        // let husbandMother = inputGetter(\"husbandMother\");\n        // let wifeResidence = inputGetter(\"wifeResidence\");\n        // let wifeFather = inputGetter(\"wifeFather\");\n        // let wifeMother = inputGetter(\"wifeMother\");\n        // let priest = inputGetter(\"priest\");\n        // let witness = inputGetter(\"witness\");\n        // let residence = inputGetter(\"residence\");\n        // let bookNo = inputGetter(\"bookNo\");\n        // let pageNo = inputGetter(\"pageNo\");\n        // let lineNo = inputGetter(\"lineNo\");\n        // let dateRecorded = inputGetter(\"dateRecorded\");\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0 &&\n          husbandResidence.length > 0 &&\n          husbandFather.length > 0 &&\n          husbandMother.length > 0 &&\n          wifeResidence.length > 0 &&\n          wifeFather.length > 0 &&\n          wifeMother.length > 0 &&\n          priest.length > 0 &&\n          witness.length > 0 &&\n          residence.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateIssued.length > 0 &&\n          licenseNo.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion &&\n          marriageDate === record.marriageDate &&\n          husbandResidence === record.husbandResidence &&\n          husbandFather === record.husbandFather &&\n          husbandMother === record.husbandMother &&\n          wifeResidence === record.wifeResidence &&\n          wifeFather === record.wifeFather &&\n          wifeMother === record.wifeMother &&\n          priest === record.priest &&\n          witness === record.witness &&\n          residence === record.residence &&\n          bookNo === record.bookNo &&\n          pageNo === record.pageNo &&\n          lineNo === record.lineNo &&\n          licenseNo === record.licenseNo &&\n          dateIssued === record.dateIssued;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n          husbandResidence: inputGetter(\"husbandResidence\"),\n          husbandFather: inputGetter(\"husbandFather\"),\n          husbandMother: inputGetter(\"husbandMother\"),\n          wifeResidence: inputGetter(\"wifeResidence\"),\n          wifeFather: inputGetter(\"wifeFather\"),\n          wifeMother: inputGetter(\"wifeMother\"),\n          priest: inputGetter(\"priest\"),\n          witness: inputGetter(\"witness\"),\n          residence: inputGetter(\"residence\"),\n          licenseNo: inputGetter(\"licenseNo\"),\n          bookNo: inputGetter(\"bookNo\"),\n          pageNo: inputGetter(\"pageNo\"),\n          lineNo: inputGetter(\"lineNo\"),\n          dateIssued: inputGetter(\"dateIssued\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Burial</span>' +\n        '<input id=\"dateOfBurial\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father\\'s name</span>' +\n        '<input id=\"father\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother\\'s name</span>' +\n        '<input id=\"mother\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Spouse\\' Name</span>' +\n        '<input id=\"spouse\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cemetery</span>' +\n        '<input id=\"cemetery\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cemetery Address</span>' +\n        '<input id=\"cemeteryAddress\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cause Of Death</span>' +\n        '<input id=\"causeOfDeath\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Has Received Sacrament</span>' +\n        '<input id=\"receivedSacrament\" class=\"swal2-input\" type=\"checkbox\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Date Recorded</span>' +\n        '<input id=\"dateRecorded\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"address\").value = record.address;\n        getById(\"father\").value = record.father;\n        getById(\"mother\").value = record.mother;\n        getById(\"spouse\").value = record.spouse;\n        getById(\"cemetery\").value = record.cemetery;\n        getById(\"cemeteryAddress\").value = record.cemeteryAddress;\n        getById(\"dateOfBurial\").value = record.dateOfBurial;\n        getById(\"causeOfDeath\").value = record.causeOfDeath;\n        getById(\"receivedSacrament\").checked = record.receivedSacrament;\n        getById(\"bookNo\").value = record.bookNo;\n        getById(\"pageNo\").value = record.pageNo;\n        getById(\"lineNo\").value = record.lineNo;\n        getById(\"dateRecorded\").value = record.dateRecorded;\n      },\n      preConfirm: () => {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let cemeteryAddress = inputGetter(\"cemeteryAddress\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let receivedSacrament = getById(\"receivedSacrament\").checked;\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        // TO ADD\n        // address, father, mother, spouse, cemetery, dateOfBurial, causeOfDeath, receivedSacrament\n        // churchRecord{bookNo, pageNo, line, date}\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          address.length > 0 &&\n          father.length > 0 &&\n          mother.length > 0 &&\n          spouse.length > 0 &&\n          cemetery.length > 0 &&\n          cemeteryAddress.length > 0 &&\n          dateOfBurial.length > 0 &&\n          causeOfDeath.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateRecorded.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          address === record.address &&\n          father === record.father &&\n          mother === record.mother &&\n          spouse === record.spouse &&\n          cemetery === record.cemetery &&\n          cemeteryAddress === record.cemeteryAddress &&\n          dateOfBurial === record.dateOfBurial &&\n          causeOfDeath === record.causeOfDeath &&\n          receivedSacrament === record.receivedSacrament &&\n          bookNo === record.bookNo &&\n          pageNo === record.pageNo &&\n          lineNo === record.lineNo &&\n          dateRecorded === record.dateRecorded;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let cemeteryAddress = inputGetter(\"cemeteryAddress\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let receivedSacrament = getById(\"receivedSacrament\").checked;\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          address: address,\n          father: father,\n          mother: mother,\n          spouse: spouse,\n          cemetery: cemetery,\n          cemeteryAddress: cemeteryAddress,\n          dateOfBurial: dateOfBurial,\n          causeOfDeath: causeOfDeath,\n          receivedSacrament: receivedSacrament,\n          bookNo: bookNo,\n          pageNo: pageNo,\n          lineNo: lineNo,\n          dateRecorded: dateRecorded,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">First Name</span>' +\n        '<input id=\"fullName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Verified</span>' +\n        '<input id=\"verified\" class=\"swal2-input\" type=\"checkbox\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullName\").value = record.fullName;\n        getById(\"verified\").checked = record.verified;\n      },\n      preConfirm: () => {\n        let fullName = inputGetter(\"fullName\");\n        let verified = getById(\"verified\").checked;\n\n        let noempty = fullName.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullName === record.fullName && verified === record.verified;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullName = inputGetter(\"fullName\");\n        let verified = getById(\"verified\").checked;\n\n        submit({\n          fullName: fullName,\n          verified: verified,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n        getById(\"date\").value = record.date;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title &&\n          content === record.content &&\n          date === record.date;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadImage() {\n    Swal.fire({\n      title: \"Upload Image\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type.includes(\"image\");\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose an image\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"jpg\");\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Edit the Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () => {\n          let toRemove = getById(\"times\").lastChild;\n          toRemove.remove();\n        };\n\n        getById(\"day\").value = record.day;\n\n        let timeKeys = Object.keys(record).filter((key) =>\n          key.includes(\"time\")\n        );\n        timeKeys.sort((a, b) => {\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          } else {\n            return a > b;\n          }\n        });\n\n        timeKeys.forEach((key) => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          timeInput.value = convertTime12to24(record[key]);\n          getById(\"times\").appendChild(timeInput);\n        });\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newRecord = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          newRecord[`time${Object.keys(newRecord).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(newRecord, true);\n      }\n    });\n  }\n\n  return (\n    <div\n      className=\"content-item\"\n      onClick={() => setShowOthers((current) => !current)}\n    >\n      <div className=\"content-details\">\n        <div className=\"record-datas\">\n          {attributeSorter(selected, record).map((key) => {\n            if (showProperty(key)) return recordDetail(key, record[key]);\n            else return null;\n          })}\n        </div>\n        <span>\n          <div className=\"icons-container\">\n            {isSelect ? (\n              <CheckBox isChecked={isChecked} onChange={check} />\n            ) : (\n              \"\"\n            )}\n            <ActionButton\n              isShown={showEmailRequest}\n              isLoading={false}\n              icon={email}\n              title=\"email\"\n              onClick={async (e) => {\n                window.open(\n                  `mailto:${record.emailAddress}?subject=${record.requestedDocument} request&body=Your request has been confirmed`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showPrint}\n              isLoading={false}\n              title=\"print\"\n              icon={print}\n              onClick={async () => {\n                openPdf();\n              }}\n            />\n            <ActionButton\n              isShown={showPrint}\n              isLoading={false}\n              title=\"download\"\n              icon={download}\n              onClick={async () => {\n                generateDocument();\n              }}\n            />\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={false}\n              icon={email}\n              title=\"send email\"\n              onClick={async () => {\n                window.open(\n                  `mailto:${record.email}?subject=Donation Confirmation&body=Your Donation has been confirmed, thank you for your support`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={confirmingDonation}\n              icon={confirm}\n              title=\"confirm\"\n              onClick={() => {\n                Swal.fire({\n                  icon: \"question\",\n                  title: \"Do you want to mark this donation as verified?\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"red\",\n                }).then(async (value) => {\n                  if (value.isConfirmed) {\n                    setConfirmingDonation(() => true);\n                    record.verified = true;\n                    if (await editRecord(\"donation\", record.id, record)) {\n                      customAlert(\"Donation verified!\", \"success\");\n                    }\n                    setConfirmingDonation(() => false);\n                  }\n                });\n              }}\n            />\n            <ActionButton\n              isShown={showUpload}\n              isLoading={uploading}\n              icon={upload}\n              title=\"upload\"\n              onClick={async () => {\n                if (selected === \"events\") {\n                  uploadImage();\n                }\n              }}\n            />\n\n            <ActionButton\n              isShown={showEdit}\n              isLoading={updating}\n              icon={edit}\n              title=\"edit\"\n              onClick={(event) => {\n                switch (selected) {\n                  case \"marriage\":\n                    marriageDialog();\n                    break;\n                  case \"death\":\n                    deathDialog();\n                    break;\n                  case \"donation\":\n                    donationDialog();\n                    break;\n                  case \"events\":\n                    eventDialog();\n                    break;\n                  case \"schedule\":\n                    scheduleDialog();\n                    break;\n                  default:\n                }\n              }}\n            />\n            <ActionButton\n              isShown={showArchive}\n              isLoading={archiving}\n              icon={archive}\n              title=\"archive\"\n              onClick={() =>\n                Swal.fire({\n                  title: `Are you sure you want to ${\n                    isArchive ? \"un-archive\" : \"archive\"\n                  } this record?`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonText: isArchive ? \"un-archive\" : \"archive\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    confirmArchive();\n                  }\n                })\n              }\n            />\n          </div>\n        </span>\n      </div>\n      {showOthers && showTable ? (\n        <ContentTable\n          columns={attributeSorter(selected, record).filter(\n            (key) =>\n              ![...dontShow].includes(key) &&\n              !key.toString().toLowerCase().includes(\"name\")\n          )}\n          data={record}\n        />\n      ) : (\n        \"\"\n      )}\n      {selected === \"events\" && image !== null ? (\n        <img src={image} alt=\"\" className=\"event-image\" />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport function ActionButton({ isShown, isLoading, icon, onClick, title }) {\n  return isShown ? (\n    <div className=\"icon-container\">\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img\n          src={icon}\n          title={title}\n          alt={title}\n          className=\"icon\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClick();\n          }}\n        />\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggle, label }) {\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={(value) => {\n            toggle(value.target.checked);\n          }}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <h4>{label}</h4>\n    </div>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport archive from \"../../assets/archive.svg\";\n\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, formatTime, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  toggleSelectMode,\n  isArchive,\n  isSelect,\n  archiveSelected,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"wifeResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"wifeFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"wifeMother\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"husbandResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"husbandFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"husbandMother\" class=\"swal2-input\">' +\n        \"<h3>Marriage Details</h3>\" +\n        '<span class=\"swal2-input-label\">Date Of marriage</span>' +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Priest </span>' +\n        '<input id=\"priest\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Witness </span>' +\n        '<input id=\"witness\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence </span>' +\n        '<input id=\"residence\" class=\"swal2-input\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">License No</span>' +\n        '<input id=\"licenseNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Marriage License Issued Date</span>' +\n        '<input id=\"dateIssued\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n        let husbandResidence = inputGetter(\"husbandResidence\");\n        let husbandFather = inputGetter(\"husbandFather\");\n        let husbandMother = inputGetter(\"husbandMother\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n        let wifeResidence = inputGetter(\"wifeResidence\");\n        let wifeFather = inputGetter(\"wifeFather\");\n        let wifeMother = inputGetter(\"wifeMother\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let priest = inputGetter(\"priest\");\n        let witness = inputGetter(\"witness\");\n        let residence = inputGetter(\"residence\");\n\n        let licenseNo = inputGetter(\"licenseNo\");\n\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateIssued = inputGetter(\"dateIssued\");\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0 &&\n          husbandResidence.length > 0 &&\n          husbandFather.length > 0 &&\n          husbandMother.length > 0 &&\n          wifeResidence.length > 0 &&\n          wifeFather.length > 0 &&\n          wifeMother.length > 0 &&\n          priest.length > 0 &&\n          witness.length > 0 &&\n          residence.length > 0 &&\n          licenseNo.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateIssued.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n          husbandResidence: inputGetter(\"husbandResidence\"),\n          husbandFather: inputGetter(\"husbandFather\"),\n          husbandMother: inputGetter(\"husbandMother\"),\n          wifeResidence: inputGetter(\"wifeResidence\"),\n          wifeFather: inputGetter(\"wifeFather\"),\n          wifeMother: inputGetter(\"wifeMother\"),\n          priest: inputGetter(\"priest\"),\n          witness: inputGetter(\"witness\"),\n          residence: inputGetter(\"residence\"),\n          licenseNo: inputGetter(\"licenseNo\"),\n          bookNo: inputGetter(\"bookNo\"),\n          pageNo: inputGetter(\"pageNo\"),\n          lineNo: inputGetter(\"lineNo\"),\n          dateIssued: inputGetter(\"dateIssued\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Burial</span>' +\n        '<input id=\"dateOfBurial\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father\\'s name</span>' +\n        '<input id=\"father\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother\\'s name</span>' +\n        '<input id=\"mother\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Spouse\\' Name</span>' +\n        '<input id=\"spouse\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cemetery</span>' +\n        '<input id=\"cemetery\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cemetery Address</span>' +\n        '<input id=\"cemeteryAddress\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cause Of Death</span>' +\n        '<input id=\"causeOfDeath\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Has Received Sacrament</span>' +\n        '<input id=\"receivedSacrament\" class=\"swal2-input\" type=\"checkbox\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Date Recorded</span>' +\n        '<input id=\"dateRecorded\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let cemeteryAddress = inputGetter(\"cemeteryAddress\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          address.length > 0 &&\n          father.length > 0 &&\n          mother.length > 0 &&\n          spouse.length > 0 &&\n          cemetery.length > 0 &&\n          cemeteryAddress.length > 0 &&\n          dateOfBurial.length > 0 &&\n          causeOfDeath.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateRecorded.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let cemeteryAddress = inputGetter(\"cemeteryAddress\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let receivedSacrament = inputGetter(\"receivedSacrament\");\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          address: address,\n          father: father,\n          mother: mother,\n          spouse: spouse,\n          cemetery: cemetery,\n          cemeteryAddress: cemeteryAddress,\n          dateOfBurial: dateOfBurial,\n          causeOfDeath: causeOfDeath,\n          receivedSacrament: receivedSacrament,\n          bookNo: bookNo,\n          pageNo: pageNo,\n          lineNo: lineNo,\n          dateRecorded: dateRecorded,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Create a Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        <input class=\"swal2-input\" type=\"time\">\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () =>\n          getById(\"times\").removeChild(getById(\"times\").lastChild);\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let record = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          record[`time${Object.keys(record).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(record);\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"events\" ? (\n        <span className=\"search-bar\">\n          <input\n            type=\"text\"\n            className=\"search-field\"\n            id=\"search-field\"\n            onChange={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"events\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggle={toggleArchive} label=\"Toggle Archive\" />\n          {showArchive ? (\n            <ToggleSwitch toggle={toggleSelectMode} label=\"Multi Select\" />\n          ) : (\n            \"\"\n          )}\n        </span>\n      ) : (\n        \"\"\n      )}\n      <div className=\"action-button-container\">\n        {showArchive && isSelect ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Archive selected\"\n            onClick={() => {\n              archiveSelected();\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={archive} alt=\"add\" className=\"icon\" />\n            )}\n            <h4> {isArchive ? \"Un-Archive\" : \"Archive\"}</h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n        {selected !== \"donation\" && selected !== \"requests\" ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Add\"\n            onClick={() => {\n              switch (selected) {\n                case \"marriage\":\n                  marriageDialog();\n                  break;\n                case \"death\":\n                  deathDialog();\n                  break;\n                case \"donation\":\n                  donationDialog();\n                  break;\n                case \"events\":\n                  eventDialog();\n                  break;\n                case \"schedule\":\n                  scheduleDialog();\n                  break;\n                default:\n                  marriageDialog();\n              }\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={add} alt=\"add\" className=\"icon\" />\n            )}\n            <h4>Add </h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","export default __webpack_public_path__ + \"static/media/church.ab21ef53.svg\";","import death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\n\nexport default function CountContent({ name, count }) {\n  function iconSwitch() {\n    switch (name) {\n      case \"death\":\n        return death;\n      case \"marriage\":\n        return marriage;\n      case \"donation\":\n        return donation;\n      case \"events\":\n        return post;\n      case \"requests\":\n        return requests;\n      case \"schedule\":\n        return church;\n      default:\n        return records;\n    }\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"count-icon-container\">\n        <img src={iconSwitch()} alt={name} className=\"icon count-icon\" />\n      </div>\n      <div className=\"count-item-container\">\n        <h3> {name}</h3>\n        <h1> {count}</h1>\n      </div>\n    </div>\n  );\n}\n","import \"./content.scss\";\nimport loading from \"../../assets/loading.gif\";\n\nimport backup from \"../../assets/backup.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport {\n  archiveMultipleRecords,\n  backupOrRestore,\n  fetchCollection,\n  recordCounter,\n} from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { showArchive, toDateTime } from \"../../helpers\";\nimport CountContent from \"./count-content\";\nimport Swal from \"sweetalert2\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n  const [isSelect, setIsSelect] = useState(false);\n  const [recordCounts, setRecordCounts] = useState([]);\n\n  const selectedRecords = [];\n\n  function addToSelected(record) {\n    selectedRecords.push(record);\n  }\n\n  function removeFromSelected(record) {\n    selectedRecords.splice(\n      selectedRecords.findIndex((element) => (record.id = element.id)),\n      1\n    );\n  }\n\n  function archiveSelected() {\n    archiveMultipleRecords(\n      isArchive ? `${selected}_archive` : selected,\n      isArchive ? selected : `${selected}_archive`,\n      selectedRecords,\n      isArchive,\n      () => refreshList()\n    );\n  }\n\n  let yearLastAdded = \"\";\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n  const toggleSelectMode = (value) => setIsSelect(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"events\") {\n        setIsArchive(() => false);\n      }\n      if (!showArchive(selected)) {\n        setIsSelect(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    } else {\n      setFetchingCollection(() => true);\n      let records = [\n        \"marriage\",\n        \"death\",\n        \"donation\",\n        \"events\",\n        \"requests\",\n        \"schedule\",\n      ];\n\n      let _recordCounts = [];\n      records.forEach(async (record, index) => {\n        await recordCounter(record, (data) => {\n          _recordCounts.push({\n            name: record,\n            countOfRecords: data.size,\n          });\n          if (index === records.length - 1) {\n            setRecordCounts(() => _recordCounts);\n            setFetchingCollection(() => false);\n          }\n        });\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort((a, b) => {\n      return (\n        toDateTime(\n          b.dateDocumentAdded.seconds !== undefined\n            ? b.dateDocumentAdded.seconds\n            : b.dateDocumentAdded._seconds\n        ) -\n        toDateTime(\n          a.dateDocumentAdded.seconds !== undefined\n            ? a.dateDocumentAdded.seconds\n            : a.dateDocumentAdded._seconds\n        )\n      );\n    });\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          JSON.stringify(record)\n            // record.name +\n            // (record.wifeName !== null\n            //   ? record.wifeName + \" \" + record.husbandName\n            //   : \"\") +\n            // (record.title !== null ? record.title : \"\") +\n            // (record.nameOfDeceased !== null ? record.nameOfDeceased : \"\") +\n            // (record.fullName !== null ? record.fullName : \"\") +\n            // (record.gcashNumber !== null ? record.gcashNumber : \"\") +\n            // (record.firstName !== null\n            //   ? record.firstName + record.lastName\n            //   : \"\")\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id + isArchive}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n        isSelect={isSelect}\n        addToSelected={addToSelected}\n        removeFromSelected={removeFromSelected}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      {selected === \"backup\" ? (\n        // another DRY violation but I couldn't care less\n        <div className=\"backup-card\">\n          <div\n            className=\"backup-button\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Backing up your data don't refresh or leave the page\",\n                html: `<img src=\"${loading}\"/>`,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n              });\n              backupOrRestore(true);\n            }}\n          >\n            <span className=\"backup-label\">backup data</span>\n            <img className=\"backup-icon icon\" src={backup} alt=\"backup\" />\n          </div>\n          <div\n            className=\"backup-button\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Restoring your data don't refresh or leave the page\",\n                html: `<img src=\"${loading}\"/>`,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n              });\n              backupOrRestore(false);\n            }}\n          >\n            <span className=\"backup-label\">restore data</span>\n            <img className=\"backup-icon icon\" src={upload} alt=\"backup\" />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <ActionBar\n            search={search}\n            requestRefresh={refreshList}\n            show={selected !== \"\"}\n            selected={selected}\n            toggleArchive={toggleArchive}\n            toggleSelectMode={toggleSelectMode}\n            isArchive={isArchive}\n            isSelect={isSelect}\n            archiveSelected={archiveSelected}\n          />\n          {fetchingCollection ? (\n            <Loader />\n          ) : selected === \"\" ? (\n            <div className=\"count-container\">\n              {recordCounts.map((recordCount) => {\n                recordCount.id = recordCount.name;\n                return (\n                  <CountContent\n                    key={recordCount.name}\n                    name={recordCount.name}\n                    count={recordCount.countOfRecords}\n                  />\n                );\n              })}\n            </div>\n          ) : isArchive ? (\n            getMatches().map((record) => {\n              let dateAdded =\n                record.props.record.dateDocumentAdded.seconds !== undefined\n                  ? toDateTime(\n                      record.props.record.dateDocumentAdded.seconds\n                    ).getFullYear()\n                  : toDateTime(\n                      record.props.record.dateDocumentAdded._seconds\n                    ).getFullYear();\n\n              let id = record.props.record.id;\n              if (yearLastAdded !== dateAdded) {\n                yearLastAdded = dateAdded;\n                return (\n                  <div key={id + isArchive.toString()}>\n                    <h3 className=\"content-message\">\n                      Records From year {yearLastAdded}\n                    </h3>\n                    <div className=\"content-container\">{record}</div>\n                  </div>\n                );\n              } else {\n                return (\n                  <div\n                    key={id + isArchive.toString()}\n                    className=\"content-container\"\n                  >\n                    {record}\n                  </div>\n                );\n              }\n            })\n          ) : (\n            <div className=\"content-container\">\n              {getMatches()[0] ? (\n                getMatches()\n              ) : (\n                <h3 className=\"content-message\">No Records found</h3>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","import { useEffect, useState } from \"react\";\nimport { notificationCounter } from \"../../api/FirebaseHelper\";\n\nexport default function SidebarItem({ imagesrc, label, isSelected }) {\n  const [notifCount, setNotifCount] = useState(0);\n\n  useEffect(() => {\n    async function countRecords() {\n      notificationCounter(label.toLowerCase(), function (data) {\n        setNotifCount(() => data.size);\n      });\n    }\n\n    if ([\"requests\", \"donation\"].includes(label.toLowerCase())) {\n      countRecords();\n    }\n  }, [label]);\n\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      {notifCount > 0 ? <span className=\"badge\">{notifCount}</span> : \"\"}\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\nimport backup from \"../../assets/backup.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"events\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Events\"\n          imagesrc={post}\n          isSelected={selected === \"events\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"schedule\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Mass Schedule\"\n          imagesrc={church}\n          isSelected={selected === \"schedule\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n      <span\n        onClick={() => {\n          select(\"backup\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Backup & Restore\"\n          imagesrc={backup}\n          isSelected={selected === \"backup\"}\n        />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2 className=\"clickable\" onClick={() => select(\"\")}>\n        National Shrine of Our Lady of sorrows\n      </h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 300);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  //comment\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}