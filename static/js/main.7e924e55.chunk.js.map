{"version":3,"sources":["assets/loading.gif","assets/backup.svg","assets/upload.svg","assets/print.svg","assets/edit.svg","assets/archive.svg","assets/confirm.svg","assets/email.svg","documents/death_cert.docx","documents/marriage_cert.docx","helpers.js","api/FirebaseHelper.js","components/misc/loader.jsx","components/misc/content-table/content-table.jsx","components/misc/checkbox/checkbox.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/post.svg","assets/records.svg","assets/request.svg","assets/church.svg","components/content/count-content.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/password.svg","assets/logout.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["inputGetter","id","document","getElementById","value","getById","customAlert","message","icon","a","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","toDateTime","secs","t","Date","setSeconds","formatTime","timeStr","hours","mins","isTwelve","parseInt","isPM","attributeSorter","selected","obj","sortingArray","Object","keys","sort","b","convertCamelCase","word","toUpperCase","slice","match","join","showArchive","includes","getFile","directory","type","getDownloadURL","ref","storage","uploadFile","file","uploadBytes","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","notificationCounter","countCallback","onSnapshot","query","where","recordCounter","addRecord","record","addDoc","success","editRecord","docId","override","setDoc","updateDoc","deleteRecord","deleteDoc","currentCollectionName","targetCollectionName","records","isArchive","onFinished","html","loading","allowOutsideClick","showConfirmButton","index","archiveRecord","undefined","referrence","login","username","password","admins","changePassword","oldPassword","newPassword","loggedIn","find","o","backupOrRestore","isBackup","fetch","credentials","method","headers","Accept","then","response","json","catch","MiniLoader","className","Loader","ContentTable","columns","Table","onClick","event","stopPropagation","map","key","toString","CheckBox","onChange","isChecked","e","target","checked","ContentItem","requestRefresh","isSelect","addToSelected","removeFromSelected","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","confirmingDonation","setConfirmingDonation","setIsChecked","image","setImage","showOthers","setShowOthers","dontShow","showEdit","showPrint","showUpload","showConfirmDonation","showEmailRequest","showTable","useEffect","imgSrc","toLowerCase","getImage","generateDocument","url","marriageCert","deathCert","callback","error","content","zip","PizZip","Docxtemplater","paragraphLoop","linebreaks","marriageDate","dateIssued","render","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","husbandResidence","husbandFather","husbandMother","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","wifeResidence","wifeFather","wifeMother","md","getDay","mm","toLocaleDateString","month","my","getFullYear","priest","witness","residence","licenseNo","bookNo","pageNo","lineNo","dIssued","mIssued","yIssued","out","getZip","generate","mimeType","saveAs","dayOfDeath","dateOfBurial","dd","dm","dy","dayOfBirth","dateOfMass","age","address","father","mother","spouse","cemetery","cemeteryAddress","bd","bm","by","causeOfDeath","received","receivedSacrament","dateRecorded","PizZipUtils","getBinaryContent","submit","values","submitFile","scheduleDialog","showCancelButton","didOpen","onclick","timeInput","createElement","classList","add","appendChild","lastChild","remove","day","timeKeys","filter","time12h","time","modifier","minutes","convertTime12to24","preConfirm","noempty","querySelectorAll","element","innerHTML","isConfirmed","newRecord","current","showProperty","recordDetail","ActionButton","isShown","isLoading","email","window","open","emailAddress","requestedDocument","print","verified","confirm","confirmButtonColor","upload","input","confirmButtonText","showLoaderOnConfirm","backdrop","isValid","result","edit","replace","ageValid","nothingChanged","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","fullName","date","archive","confirmArchive","src","alt","ToggleSwitch","toggle","label","ActionBar","search","show","toggleArchive","toggleSelectMode","archiveSelected","addingRecord","setAddingRecord","marriageDialog","fullname","phone","phoneValid","removeChild","CountContent","count","death","marriage","donation","post","requests","church","iconSwitch","Content","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","setIsSelect","recordCounts","setRecordCounts","selectedRecords","splice","findIndex","yearLastAdded","refreshList","fetchData","_recordCounts","countOfRecords","size","getMatches","arr","dateDocumentAdded","seconds","_seconds","JSON","stringify","trim","createItem","backup","archiveMultipleRecords","recordCount","dateAdded","props","SidebarItem","imagesrc","isSelected","notifCount","setNotifCount","countRecords","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","getDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7e924e55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","export default __webpack_public_path__ + \"static/media/backup.607152e5.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/confirm.8160dc89.svg\";","export default __webpack_public_path__ + \"static/media/email.f2182462.svg\";","export default __webpack_public_path__ + \"static/media/death_cert.7a6ef10b.docx\";","export default __webpack_public_path__ + \"static/media/marriage_cert.da95d243.docx\";","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n\nexport function formatTime(timeStr) {\n  const hours = timeStr.substring(0, 2);\n  const mins = timeStr.substring(3, 5);\n\n  const isTwelve = parseInt(hours) === 0 || parseInt(hours) === 12;\n  const isPM = parseInt(hours) >= 12;\n\n  return `${\n    isTwelve ? \"12\" : isPM ? `0${parseInt(hours) % 12}` : hours\n  }:${mins} ${isPM ? \"PM\" : \"AM\"}`;\n}\n\nexport function convertTime12to24(time12h) {\n  const [time, modifier] = time12h.split(\" \");\n\n  let [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\") {\n    hours = \"00\";\n  }\n\n  if (modifier === \"PM\") {\n    hours = parseInt(hours, 10) + 12;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function attributeSorter(selected, obj) {\n  let sortingArray = [];\n\n  switch (selected) {\n    case \"marriage\":\n      sortingArray = [\n        \"wifeName\",\n        \"wifeAge\",\n        \"wifeBirthday\",\n        \"wifeReligion\",\n        \"wifePlaceOfBirth\",\n        \"husbandName\",\n        \"husbandAge\",\n        \"husbandBirthday\",\n        \"husbandReligion\",\n        \"husbandPlaceOfBirth\",\n        \"marriageDate\",\n        \"priest\",\n        \"witness\",\n        \"residence\",\n        \"licenseNo\",\n        \"bookNo\",\n        \"pageNo\",\n        \"lineNo\",\n        \"dateIssued\",\n      ];\n      break;\n    case \"death\":\n      sortingArray = [\n        \"name\",\n        \"dayOfBirth\",\n        \"dayOfDeath\",\n        \"dateOfMass\",\n        \"age\",\n        \"address\",\n        \"father\",\n        \"mother\",\n        \"spouse\",\n        \"cemetery\",\n        \"cemeteryAddress\",\n        \"receivedSacrament\",\n        \"address\",\n        \"bookNo\",\n        \"pageNo\",\n        \"lineNo\",\n        \"dateRecorded\",\n      ];\n      break;\n    case \"requests\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"address\",\n        \"requestedDocument\",\n        \"requestMethod\",\n        \"wifeName\",\n        \"husbandName\",\n        \"fullname\",\n      ];\n      break;\n    case \"donation\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"gender\",\n        \"address\",\n        \"city\",\n        \"country\",\n        \"phoneNumber\",\n        \"amount\",\n        \"gcashNumber\",\n        \"email\",\n      ];\n      break;\n\n    default:\n      return Object.keys(obj).sort((a, b) => {\n        if (a.length !== b.length) {\n          return a.length - b.length;\n        } else {\n          return a > b;\n        }\n      });\n  }\n\n  return Object.keys(obj).sort(\n    (a, b) => sortingArray.indexOf(a) - sortingArray.indexOf(b)\n  );\n}\n\nexport function chunkArray(inputArray) {\n  let perChunk = 5;\n\n  let result = inputArray.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / perChunk);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n\n  return result;\n}\n\nexport function convertCamelCase(word) {\n  try {\n    word = word.charAt(0).toUpperCase() + word.slice(1);\n    word = word.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    return word;\n  } catch {\n    return word;\n  }\n}\n\nexport const showArchive = (selected) =>\n  ![\"events\", \"donation\", \"\"].includes(selected);\n","import {\n  collection,\n  doc,\n  getDocs,\n  setDoc,\n  query,\n  where,\n  addDoc,\n  updateDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport Swal from \"sweetalert2\";\nimport { firestore, storage } from \"../App\";\nimport { customAlert } from \"../helpers\";\n\nimport loading from \"../assets/loading.gif\";\n\nexport async function getFile(id, directory, type) {\n  try {\n    return await getDownloadURL(ref(storage, `${directory}/${id}.${type}`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function deathCertificate() {\n  try {\n    return await getDownloadURL(ref(storage, `hello_world.docx`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function uploadFile(id, file, directory, type) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.${type}`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function notificationCounter(collectionName, countCallback) {\n  onSnapshot(\n    query(collection(firestore, collectionName), where(\"seen\", \"!=\", true)),\n    (data) => {\n      countCallback(data);\n    }\n  );\n}\n\nexport async function recordCounter(collectionName, countCallback) {\n  onSnapshot(collection(firestore, collectionName), (data) => {\n    countCallback(data);\n  });\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value, override) {\n  let success;\n  try {\n    if (override) {\n      value[\"dateDocumentAdded\"] = new Date();\n      await setDoc(doc(collection(firestore, collectionName), docId), value);\n    } else {\n      await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    }\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveMultipleRecords(\n  currentCollectionName,\n  targetCollectionName,\n  records,\n  isArchive,\n  onFinished\n) {\n  if (records.length > 0) {\n    Swal.fire({\n      title: `${\n        isArchive ? \"Un-Archiving\" : \"Archiving\"\n      } multiple records Please wait`,\n      html: `<img src=\"${loading}\"/>`,\n      allowOutsideClick: false,\n      showConfirmButton: false,\n    });\n    records.forEach(async (record, index) => {\n      await archiveRecord(\n        currentCollectionName,\n        targetCollectionName,\n        record.id,\n        record\n      );\n      if (index === records.length - 1) {\n        customAlert(\n          `Done ${isArchive ? \"Un-Archiving\" : \"Archiving\"}`,\n          \"success\"\n        );\n        onFinished();\n      }\n    });\n  } else {\n    customAlert(\"Nothing selected\", \"info\");\n  }\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  if (record.referrence === undefined) record[\"referrence\"] = record[\"id\"];\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n\n// not related to firebase but at this point I'm too tilted to even care\n\nexport function backupOrRestore(isBackup) {\n  fetch(`http://localhost:8080/${isBackup ? \"backupAll\" : \"restoreAll\"}`, {\n    credentials: \"same-origin\",\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.success) {\n        customAlert(\n          `Data ${isBackup ? \"Backed up\" : \"Restored\"} successfully`,\n          \"success\"\n        );\n      } else {\n        customAlert(\n          `Failed to ${\n            isBackup ? \"Back up\" : \"Restore\"\n          } Data , check your internet connection and make sure you are running the data backup server in port 8080`,\n          \"error\"\n        );\n      }\n    })\n    .catch(() => {\n      customAlert(\n        `Failed to ${\n          isBackup ? \"Back up\" : \"Restore\"\n        } Data , check your internet connection and make sure you are running the data backup server in port 8080`,\n        \"error\"\n      );\n    });\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import { convertCamelCase } from \"../../../helpers\";\nimport \"./content-table.scss\";\n\nexport default function ContentTable({ columns, data }) {\n  return (\n    <div className=\"table-container\">\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nfunction Table({ columns, data }) {\n  return (\n    <table onClick={(event) => event.stopPropagation()}>\n      <thead>\n        <tr>\n          {columns.map((key, index) => (\n            <th key={key + index}>{convertCamelCase(key)}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {columns.map((key, index) => (\n            <td key={data[key] + index}>{data[key].toString()}</td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import \"./checkbox.scss\";\n\nexport default function CheckBox({ onChange, isChecked }) {\n  return (\n    <div className=\"checkbox-container\">\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        value={isChecked}\n        onChange={(e) => {\n          e.stopPropagation();\n          onChange(e.target.checked);\n        }}\n        onClick={(e) => e.stopPropagation()}\n      />\n    </div>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport confirm from \"../../assets/confirm.svg\";\nimport email from \"../../assets/email.svg\";\n\nimport deathCert from \"../../documents/death_cert.docx\";\nimport marriageCert from \"../../documents/marriage_cert.docx\";\n\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  uploadFile,\n} from \"../../api/FirebaseHelper\";\nimport {\n  attributeSorter,\n  convertCamelCase,\n  convertTime12to24,\n  customAlert,\n  formatTime,\n  getById,\n  inputGetter,\n} from \"../../helpers\";\nimport { useEffect, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport ContentTable from \"../misc/content-table/content-table\";\nimport CheckBox from \"../misc/checkbox/checkbox\";\nimport Docxtemplater from \"docxtemplater\";\nimport PizZip from \"pizzip\";\nimport PizZipUtils from \"pizzip/utils/index.js\";\nimport { saveAs } from \"file-saver\";\n\nfunction loadFile(url, callback) {\n  PizZipUtils.getBinaryContent(url, callback);\n}\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n  isSelect,\n  addToSelected,\n  removeFromSelected,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [confirmingDonation, setConfirmingDonation] = useState(false);\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const [image, setImage] = useState(\"\");\n\n  const [showOthers, setShowOthers] = useState(false);\n\n  let dontShow = [\"id\", \"dateDocumentAdded\", \"seen\", \"referrence\", \"verified\"];\n\n  let showEdit = ![\"requests\", \"\"].includes(selected);\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showPrint = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showUpload = [\"events\"].includes(selected);\n  let showConfirmDonation = selected === \"donation\";\n  let showEmailRequest = selected === \"requests\";\n\n  let showTable = ![\"events\", \"schedule\", \"\"].includes(selected);\n\n  const showProperty = (key) => {\n    if (!showTable) return !dontShow.includes(key);\n    else\n      return (\n        key.toLowerCase().includes(\"name\") ||\n        key.toLowerCase().includes(\"gcashnumber\")\n      );\n  };\n\n  function check(value) {\n    setIsChecked(() => value);\n    if (value) {\n      addToSelected(record);\n    } else {\n      removeFromSelected(record);\n    }\n  }\n\n  useEffect(() => {\n    function markSeen() {\n      record[\"seen\"] = true;\n      editRecord(selected, record.id, record);\n    }\n\n    if (\n      [\"requests\", \"donation\"].includes(selected.toLowerCase()) &&\n      record[\"seen\"] !== true\n    ) {\n      markSeen();\n    }\n\n    async function getImage() {\n      let imgSrc = await getFile(record.id, \"events\", \"jpg\");\n      setImage(() => imgSrc);\n    }\n\n    if (selected === \"events\") {\n      getImage();\n    }\n  }, [record.id, isArchive, selected, record]);\n\n  const generateDocument = async () => {\n    loadFile(\n      selected === \"marriage\" ? marriageCert : deathCert,\n      function (error, content) {\n        if (error) {\n          throw error;\n        }\n        const zip = new PizZip(content);\n        const doc = new Docxtemplater(zip, {\n          paragraphLoop: true,\n          linebreaks: true,\n        });\n\n        if (selected === \"marriage\") {\n          let marriageDate = new Date(record.marriageDate);\n          let dateIssued = new Date(record.dateIssued);\n\n          doc.render({\n            husbandName: record.husbandName,\n            husbandAge: record.husbandAge,\n            husbandBirthday: record.husbandBirthday,\n            husbandPlaceOfBirth: record.husbandPlaceOfBirth,\n            husbandReligion: record.husbandReligion,\n            husbandResidence: record.husbandResidence,\n            husbandFather: record.husbandFather,\n            husbandMother: record.husbandMother,\n            wifeName: record.wifeName,\n            wifeAge: record.wifeAge,\n            wifeBirthday: record.wifeBirthday,\n            wifePlaceOfBirth: record.wifePlaceOfBirth,\n            wifeReligion: record.wifeReligion,\n            wifeResidence: record.wifeResidence,\n            wifeFather: record.wifeFather,\n            wifeMother: record.wifeMother,\n            md: marriageDate.getDay(),\n            mm: marriageDate.toLocaleDateString(\"default\", { month: \"long\" }),\n            my: marriageDate.getFullYear(),\n            priest: record.priest,\n            witness: record.witness,\n            residence: record.residence,\n            licenseNo: record.licenseNo,\n            bookNo: record.bookNo,\n            pageNo: record.pageNo,\n            lineNo: record.lineNo,\n            dateIssued: record.dateIssued,\n            dIssued: dateIssued.getDay(),\n            mIssued: dateIssued.toLocaleDateString(\"default\", {\n              month: \"long\",\n            }),\n            yIssued: dateIssued.getFullYear(),\n          });\n          const out = doc.getZip().generate({\n            type: \"blob\",\n            mimeType:\n              \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n          });\n          saveAs(out, `${record.husbandName}_${record.wifeName}.docx`);\n        } else {\n          let dayOfDeath = new Date(record.dayOfDeath);\n          let dateOfBurial = new Date(record.dateOfBurial);\n\n          doc.render({\n            name: record.name,\n            dd: dayOfDeath.getDay(),\n            dm: dayOfDeath.toLocaleDateString(\"default\", { month: \"long\" }),\n            dy: dayOfDeath.getFullYear(),\n            dayOfBirth: record.dayOfBirth,\n            dateOfMass: record.dateOfMass,\n            age: record.age,\n            address: record.address,\n            father: record.father,\n            mother: record.mother,\n            spouse: record.spouse,\n            cemetery: record.cemetery,\n            cemeteryAddress: record.cemeteryAddress,\n            dateOfBurial: record.dateOfBurial,\n            bd: dateOfBurial.getDay(),\n            bm: dateOfBurial.toLocaleDateString(\"default\", { month: \"long\" }),\n            by: dateOfBurial.getFullYear(),\n            causeOfDeath: record.causeOfDeath,\n            received: record.receivedSacrament ? \"was\" : \"was not\",\n            bookNo: record.bookNo,\n            pageNo: record.pageNo,\n            lineNo: record.lineNo,\n            dateRecorded: record.dateRecorded,\n          });\n          const out = doc.getZip().generate({\n            type: \"blob\",\n            mimeType:\n              \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n          });\n          saveAs(out, `${record.name}.docx`);\n        }\n      }\n    );\n  };\n\n  async function submit(values, override = false) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values,\n        override\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file, type) {\n    setUploading(() => true);\n    await uploadFile(\n      record.referrence !== undefined ? record.referrence : record.id,\n      file,\n      selected,\n      type\n    );\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(\n        isArchive ? `${selected}_archive` : selected,\n        isArchive ? selected : `${selected}_archive`,\n        record.id,\n        record\n      )\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    key = convertCamelCase(key);\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key.toString()}:</span>\n        <span className=\"value\">{value.toString()}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"wifeResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"wifeFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"wifeMother\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"husbandResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"husbandFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"husbandMother\" class=\"swal2-input\">' +\n        \"<h3>Marriage Details</h3>\" +\n        '<span class=\"swal2-input-label\">Date Of marriage</span>' +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Priest </span>' +\n        '<input id=\"priest\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Witness </span>' +\n        '<input id=\"witness\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence </span>' +\n        '<input id=\"residence\" class=\"swal2-input\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">license No</span>' +\n        '<input id=\"licenseNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Marriage License Issued Date</span>' +\n        '<input id=\"dateIssued\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n        getById(\"marriageDate\").value = record.marriageDate;\n        getById(\"husbandResidence\").value = record.husbandResidence;\n        getById(\"husbandFather\").value = record.husbandFather;\n        getById(\"husbandMother\").value = record.husbandMother;\n        getById(\"wifeResidence\").value = record.wifeResidence;\n        getById(\"wifeFather\").value = record.wifeFather;\n        getById(\"wifeMother\").value = record.wifeMother;\n        getById(\"priest\").value = record.priest;\n        getById(\"witness\").value = record.witness;\n        getById(\"residence\").value = record.residence;\n        getById(\"licenseNo\").value = record.licenseNo;\n        getById(\"bookNo\").value = record.bookNo;\n        getById(\"pageNo\").value = record.pageNo;\n        getById(\"lineNo\").value = record.lineNo;\n        getById(\"dateIssued\").value = record.dateIssued;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        // TO ADD\n        // birthPlace, address, father, mother, priest, presenceOf, residence,\n        // churchRecord{bookNo, pageNo, line}\n        // licenseNo\n        // dateIssued\n\n        //TODO: add more fields in the actionbar as well\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n        let husbandResidence = inputGetter(\"husbandResidence\");\n        let husbandFather = inputGetter(\"husbandFather\");\n        let husbandMother = inputGetter(\"husbandMother\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n        let wifeResidence = inputGetter(\"wifeResidence\");\n        let wifeFather = inputGetter(\"wifeFather\");\n        let wifeMother = inputGetter(\"wifeMother\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let priest = inputGetter(\"priest\");\n        let witness = inputGetter(\"witness\");\n        let residence = inputGetter(\"residence\");\n\n        let licenseNo = inputGetter(\"licenseNo\");\n\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateIssued = inputGetter(\"dateIssued\");\n\n        // let husbandResidence = inputGetter(\"husbandResidence\");\n        // let husbandFather = inputGetter(\"husbandFather\");\n        // let husbandMother = inputGetter(\"husbandMother\");\n        // let wifeResidence = inputGetter(\"wifeResidence\");\n        // let wifeFather = inputGetter(\"wifeFather\");\n        // let wifeMother = inputGetter(\"wifeMother\");\n        // let priest = inputGetter(\"priest\");\n        // let witness = inputGetter(\"witness\");\n        // let residence = inputGetter(\"residence\");\n        // let bookNo = inputGetter(\"bookNo\");\n        // let pageNo = inputGetter(\"pageNo\");\n        // let lineNo = inputGetter(\"lineNo\");\n        // let dateRecorded = inputGetter(\"dateRecorded\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0 &&\n          husbandResidence.length > 0 &&\n          husbandFather.length > 0 &&\n          husbandMother.length > 0 &&\n          wifeResidence.length > 0 &&\n          wifeFather.length > 0 &&\n          wifeMother.length > 0 &&\n          priest.length > 0 &&\n          witness.length > 0 &&\n          residence.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateIssued.length > 0 &&\n          licenseNo.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion &&\n          marriageDate === record.marriageDate &&\n          husbandResidence === record.husbandResidence &&\n          husbandFather === record.husbandFather &&\n          husbandMother === record.husbandMother &&\n          wifeResidence === record.wifeResidence &&\n          wifeFather === record.wifeFather &&\n          wifeMother === record.wifeMother &&\n          priest === record.priest &&\n          witness === record.witness &&\n          residence === record.residence &&\n          bookNo === record.bookNo &&\n          pageNo === record.pageNo &&\n          lineNo === record.lineNo &&\n          licenseNo === record.licenseNo &&\n          dateIssued === record.dateIssued;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n          husbandResidence: inputGetter(\"husbandResidence\"),\n          husbandFather: inputGetter(\"husbandFather\"),\n          husbandMother: inputGetter(\"husbandMother\"),\n          wifeResidence: inputGetter(\"wifeResidence\"),\n          wifeFather: inputGetter(\"wifeFather\"),\n          wifeMother: inputGetter(\"wifeMother\"),\n          priest: inputGetter(\"priest\"),\n          witness: inputGetter(\"witness\"),\n          residence: inputGetter(\"residence\"),\n          licenseNo: inputGetter(\"licenseNo\"),\n          bookNo: inputGetter(\"bookNo\"),\n          pageNo: inputGetter(\"pageNo\"),\n          lineNo: inputGetter(\"lineNo\"),\n          dateIssued: inputGetter(\"dateIssued\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Burial</span>' +\n        '<input id=\"dateOfBurial\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father\\'s name</span>' +\n        '<input id=\"father\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother\\'s name</span>' +\n        '<input id=\"mother\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Spouse\\' Name</span>' +\n        '<input id=\"spouse\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cemetery</span>' +\n        '<input id=\"cemetery\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cemetery Address</span>' +\n        '<input id=\"cemeteryAddress\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cause Of Death</span>' +\n        '<input id=\"causeOfDeath\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Has Received Sacrament</span>' +\n        '<input id=\"receivedSacrament\" class=\"swal2-input\" type=\"checkbox\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Date Recorded</span>' +\n        '<input id=\"dateRecorded\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n        getById(\"address\").value = record.address;\n        getById(\"father\").value = record.father;\n        getById(\"mother\").value = record.mother;\n        getById(\"spouse\").value = record.spouse;\n        getById(\"cemetery\").value = record.cemetery;\n        getById(\"cemeteryAddress\").value = record.cemeteryAddress;\n        getById(\"dateOfBurial\").value = record.dateOfBurial;\n        getById(\"causeOfDeath\").value = record.causeOfDeath;\n        getById(\"receivedSacrament\").checked = record.receivedSacrament;\n        getById(\"bookNo\").value = record.bookNo;\n        getById(\"pageNo\").value = record.pageNo;\n        getById(\"lineNo\").value = record.lineNo;\n        getById(\"dateRecorded\").value = record.dateRecorded;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let cemeteryAddress = inputGetter(\"cemeteryAddress\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let receivedSacrament = getById(\"receivedSacrament\").checked;\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        // TO ADD\n        // address, father, mother, spouse, cemetery, dateOfBurial, causeOfDeath, receivedSacrament\n        // churchRecord{bookNo, pageNo, line, date}\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0 &&\n          address.length > 0 &&\n          father.length > 0 &&\n          mother.length > 0 &&\n          spouse.length > 0 &&\n          cemetery.length > 0 &&\n          cemeteryAddress.length > 0 &&\n          dateOfBurial.length > 0 &&\n          causeOfDeath.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateRecorded.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age &&\n          address === record.address &&\n          father === record.father &&\n          mother === record.mother &&\n          spouse === record.spouse &&\n          cemetery === record.cemetery &&\n          cemeteryAddress === record.cemeteryAddress &&\n          dateOfBurial === record.dateOfBurial &&\n          causeOfDeath === record.causeOfDeath &&\n          receivedSacrament === record.receivedSacrament &&\n          bookNo === record.bookNo &&\n          pageNo === record.pageNo &&\n          lineNo === record.lineNo &&\n          dateRecorded === record.dateRecorded;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let cemeteryAddress = inputGetter(\"cemeteryAddress\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let receivedSacrament = getById(\"receivedSacrament\").checked;\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n          address: address,\n          father: father,\n          mother: mother,\n          spouse: spouse,\n          cemetery: cemetery,\n          cemeteryAddress: cemeteryAddress,\n          dateOfBurial: dateOfBurial,\n          causeOfDeath: causeOfDeath,\n          receivedSacrament: receivedSacrament,\n          bookNo: bookNo,\n          pageNo: pageNo,\n          lineNo: lineNo,\n          dateRecorded: dateRecorded,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">First Name</span>' +\n        '<input id=\"fullName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Verified</span>' +\n        '<input id=\"verified\" class=\"swal2-input\" type=\"checkbox\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullName\").value = record.fullName;\n        getById(\"verified\").checked = record.verified;\n      },\n      preConfirm: () => {\n        let fullName = inputGetter(\"fullName\");\n        let verified = getById(\"verified\").checked;\n\n        let noempty = fullName.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullName === record.fullName && verified === record.verified;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullName = inputGetter(\"fullName\");\n        let verified = getById(\"verified\").checked;\n\n        submit({\n          fullName: fullName,\n          verified: verified,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n        getById(\"date\").value = record.date;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title &&\n          content === record.content &&\n          date === record.date;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadImage() {\n    Swal.fire({\n      title: \"Upload Image\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type.includes(\"image\");\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose an image\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"jpg\");\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Edit the Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () => {\n          let toRemove = getById(\"times\").lastChild;\n          toRemove.remove();\n        };\n\n        getById(\"day\").value = record.day;\n\n        let timeKeys = Object.keys(record).filter((key) =>\n          key.includes(\"time\")\n        );\n        timeKeys.sort((a, b) => {\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          } else {\n            return a > b;\n          }\n        });\n\n        timeKeys.forEach((key) => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          timeInput.value = convertTime12to24(record[key]);\n          getById(\"times\").appendChild(timeInput);\n        });\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newRecord = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          newRecord[`time${Object.keys(newRecord).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(newRecord, true);\n      }\n    });\n  }\n\n  return (\n    <div\n      className=\"content-item\"\n      onClick={() => setShowOthers((current) => !current)}\n    >\n      <div className=\"content-details\">\n        <div className=\"record-datas\">\n          {attributeSorter(selected, record).map((key) => {\n            if (showProperty(key)) return recordDetail(key, record[key]);\n            else return null;\n          })}\n        </div>\n        <span>\n          <div className=\"icons-container\">\n            {isSelect ? (\n              <CheckBox isChecked={isChecked} onChange={check} />\n            ) : (\n              \"\"\n            )}\n            <ActionButton\n              isShown={showEmailRequest}\n              isLoading={false}\n              icon={email}\n              title=\"email\"\n              onClick={async (e) => {\n                window.open(\n                  `mailto:${record.emailAddress}?subject=${record.requestedDocument} request&body=Your request has been confirmed`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showPrint}\n              isLoading={false}\n              title={print}\n              icon={print}\n              onClick={async () => {\n                generateDocument();\n              }}\n            />\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={false}\n              icon={email}\n              title=\"send email\"\n              onClick={async () => {\n                window.open(\n                  `mailto:${record.email}?subject=Donation Confirmation&body=Your Donation has been confirmed, thank you for your support`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={confirmingDonation}\n              icon={confirm}\n              title=\"confirm\"\n              onClick={() => {\n                Swal.fire({\n                  icon: \"question\",\n                  title: \"Do you want to mark this donation as verified?\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"red\",\n                }).then(async (value) => {\n                  if (value.isConfirmed) {\n                    setConfirmingDonation(() => true);\n                    record.verified = true;\n                    if (await editRecord(\"donation\", record.id, record)) {\n                      customAlert(\"Donation verified!\", \"success\");\n                    }\n                    setConfirmingDonation(() => false);\n                  }\n                });\n              }}\n            />\n            <ActionButton\n              isShown={showUpload}\n              isLoading={uploading}\n              icon={upload}\n              title=\"upload\"\n              onClick={async () => {\n                if (selected === \"events\") {\n                  uploadImage();\n                }\n              }}\n            />\n\n            <ActionButton\n              isShown={showEdit}\n              isLoading={updating}\n              icon={edit}\n              title=\"edit\"\n              onClick={(event) => {\n                switch (selected) {\n                  case \"marriage\":\n                    marriageDialog();\n                    break;\n                  case \"death\":\n                    deathDialog();\n                    break;\n                  case \"donation\":\n                    donationDialog();\n                    break;\n                  case \"events\":\n                    eventDialog();\n                    break;\n                  case \"schedule\":\n                    scheduleDialog();\n                    break;\n                  default:\n                }\n              }}\n            />\n            <ActionButton\n              isShown={showArchive}\n              isLoading={archiving}\n              icon={archive}\n              title=\"archive\"\n              onClick={() =>\n                Swal.fire({\n                  title: `Are you sure you want to ${\n                    isArchive ? \"un-archive\" : \"archive\"\n                  } this record?`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonText: isArchive ? \"un-archive\" : \"archive\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    confirmArchive();\n                  }\n                })\n              }\n            />\n          </div>\n        </span>\n      </div>\n      {showOthers && showTable ? (\n        <ContentTable\n          columns={attributeSorter(selected, record).filter(\n            (key) =>\n              ![...dontShow].includes(key) &&\n              !key.toString().toLowerCase().includes(\"name\")\n          )}\n          data={record}\n        />\n      ) : (\n        \"\"\n      )}\n      {selected === \"events\" && image !== null ? (\n        <img src={image} alt=\"\" className=\"event-image\" />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport function ActionButton({ isShown, isLoading, icon, onClick, title }) {\n  return isShown ? (\n    <div className=\"icon-container\">\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img\n          src={icon}\n          title={title}\n          alt={title}\n          className=\"icon\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClick();\n          }}\n        />\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggle, label }) {\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={(value) => {\n            toggle(value.target.checked);\n          }}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <h4>{label}</h4>\n    </div>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport archive from \"../../assets/archive.svg\";\n\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, formatTime, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  toggleSelectMode,\n  isArchive,\n  isSelect,\n  archiveSelected,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"wifeResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"wifeFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"wifeMother\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence</span>' +\n        '<input id=\"husbandResidence\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father</span>' +\n        '<input id=\"husbandFather\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother</span>' +\n        '<input id=\"husbandMother\" class=\"swal2-input\">' +\n        \"<h3>Marriage Details</h3>\" +\n        '<span class=\"swal2-input-label\">Date Of marriage</span>' +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Priest </span>' +\n        '<input id=\"priest\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Witness </span>' +\n        '<input id=\"witness\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Residence </span>' +\n        '<input id=\"residence\" class=\"swal2-input\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">License No</span>' +\n        '<input id=\"licenseNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Marriage License Issued Date</span>' +\n        '<input id=\"dateIssued\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n        let husbandResidence = inputGetter(\"husbandResidence\");\n        let husbandFather = inputGetter(\"husbandFather\");\n        let husbandMother = inputGetter(\"husbandMother\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n        let wifeResidence = inputGetter(\"wifeResidence\");\n        let wifeFather = inputGetter(\"wifeFather\");\n        let wifeMother = inputGetter(\"wifeMother\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let priest = inputGetter(\"priest\");\n        let witness = inputGetter(\"witness\");\n        let residence = inputGetter(\"residence\");\n\n        let licenseNo = inputGetter(\"licenseNo\");\n\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateIssued = inputGetter(\"dateIssued\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0 &&\n          husbandResidence.length > 0 &&\n          husbandFather.length > 0 &&\n          husbandMother.length > 0 &&\n          wifeResidence.length > 0 &&\n          wifeFather.length > 0 &&\n          wifeMother.length > 0 &&\n          priest.length > 0 &&\n          witness.length > 0 &&\n          residence.length > 0 &&\n          licenseNo.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateIssued.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n          husbandResidence: inputGetter(\"husbandResidence\"),\n          husbandFather: inputGetter(\"husbandFather\"),\n          husbandMother: inputGetter(\"husbandMother\"),\n          wifeResidence: inputGetter(\"wifeResidence\"),\n          wifeFather: inputGetter(\"wifeFather\"),\n          wifeMother: inputGetter(\"wifeMother\"),\n          priest: inputGetter(\"priest\"),\n          witness: inputGetter(\"witness\"),\n          residence: inputGetter(\"residence\"),\n          licenseNo: inputGetter(\"licenseNo\"),\n          bookNo: inputGetter(\"bookNo\"),\n          pageNo: inputGetter(\"pageNo\"),\n          lineNo: inputGetter(\"lineNo\"),\n          dateIssued: inputGetter(\"dateIssued\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Burial</span>' +\n        '<input id=\"dateOfBurial\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Father\\'s name</span>' +\n        '<input id=\"father\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Mother\\'s name</span>' +\n        '<input id=\"mother\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Spouse\\' Name</span>' +\n        '<input id=\"spouse\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cemetery</span>' +\n        '<input id=\"cemetery\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Cause Of Death</span>' +\n        '<input id=\"causeOfDeath\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Has Received Sacrament</span>' +\n        '<input id=\"receivedSacrament\" class=\"swal2-input\" type=\"checkbox\">' +\n        \"<h3>Church Record</h3>\" +\n        '<span class=\"swal2-input-label\">Book No</span>' +\n        '<input id=\"bookNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Page No</span>' +\n        '<input id=\"pageNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Line No</span>' +\n        '<input id=\"lineNo\" class=\"swal2-input\" type=\"number\">' +\n        '<span class=\"swal2-input-label\">Date Recorded</span>' +\n        '<input id=\"dateRecorded\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0 &&\n          address.length > 0 &&\n          father.length > 0 &&\n          mother.length > 0 &&\n          spouse.length > 0 &&\n          cemetery.length > 0 &&\n          dateOfBurial.length > 0 &&\n          causeOfDeath.length > 0 &&\n          bookNo.length > 0 &&\n          pageNo.length > 0 &&\n          lineNo.length > 0 &&\n          dateRecorded.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let address = inputGetter(\"address\");\n        let father = inputGetter(\"father\");\n        let mother = inputGetter(\"mother\");\n        let spouse = inputGetter(\"spouse\");\n        let cemetery = inputGetter(\"cemetery\");\n        let dateOfBurial = inputGetter(\"dateOfBurial\");\n        let causeOfDeath = inputGetter(\"causeOfDeath\");\n        let receivedSacrament = inputGetter(\"receivedSacrament\");\n        let bookNo = inputGetter(\"bookNo\");\n        let pageNo = inputGetter(\"pageNo\");\n        let lineNo = inputGetter(\"lineNo\");\n        let dateRecorded = inputGetter(\"dateRecorded\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n          address: address,\n          father: father,\n          mother: mother,\n          spouse: spouse,\n          cemetery: cemetery,\n          dateOfBurial: dateOfBurial,\n          causeOfDeath: causeOfDeath,\n          receivedSacrament: receivedSacrament,\n          bookNo: bookNo,\n          pageNo: pageNo,\n          lineNo: lineNo,\n          dateRecorded: dateRecorded,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Create a Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        <input class=\"swal2-input\" type=\"time\">\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () =>\n          getById(\"times\").removeChild(getById(\"times\").lastChild);\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let record = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          record[`time${Object.keys(record).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(record);\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"events\" ? (\n        <span className=\"search-bar\">\n          <input\n            type=\"text\"\n            className=\"search-field\"\n            id=\"search-field\"\n            onChange={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"events\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggle={toggleArchive} label=\"Toggle Archive\" />\n          {showArchive ? (\n            <ToggleSwitch toggle={toggleSelectMode} label=\"Multi Select\" />\n          ) : (\n            \"\"\n          )}\n        </span>\n      ) : (\n        \"\"\n      )}\n      <div className=\"action-button-container\">\n        {showArchive && isSelect ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Archive selected\"\n            onClick={() => {\n              archiveSelected();\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={archive} alt=\"add\" className=\"icon\" />\n            )}\n            <h4> {isArchive ? \"Un-Archive\" : \"Archive\"}</h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n        {selected !== \"donation\" && selected !== \"requests\" ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Add\"\n            onClick={() => {\n              switch (selected) {\n                case \"marriage\":\n                  marriageDialog();\n                  break;\n                case \"death\":\n                  deathDialog();\n                  break;\n                case \"donation\":\n                  donationDialog();\n                  break;\n                case \"events\":\n                  eventDialog();\n                  break;\n                case \"schedule\":\n                  scheduleDialog();\n                  break;\n                default:\n                  marriageDialog();\n              }\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={add} alt=\"add\" className=\"icon\" />\n            )}\n            <h4>Add </h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","export default __webpack_public_path__ + \"static/media/church.ab21ef53.svg\";","import death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\n\nexport default function CountContent({ name, count }) {\n  function iconSwitch() {\n    switch (name) {\n      case \"death\":\n        return death;\n      case \"marriage\":\n        return marriage;\n      case \"donation\":\n        return donation;\n      case \"events\":\n        return post;\n      case \"requests\":\n        return requests;\n      case \"schedule\":\n        return church;\n      default:\n        return records;\n    }\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"count-icon-container\">\n        <img src={iconSwitch()} alt={name} className=\"icon count-icon\" />\n      </div>\n      <div className=\"count-item-container\">\n        <h3> {name}</h3>\n        <h1> {count}</h1>\n      </div>\n    </div>\n  );\n}\n","import \"./content.scss\";\nimport loading from \"../../assets/loading.gif\";\n\nimport backup from \"../../assets/backup.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport {\n  archiveMultipleRecords,\n  backupOrRestore,\n  fetchCollection,\n  recordCounter,\n} from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { showArchive, toDateTime } from \"../../helpers\";\nimport CountContent from \"./count-content\";\nimport Swal from \"sweetalert2\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n  const [isSelect, setIsSelect] = useState(false);\n  const [recordCounts, setRecordCounts] = useState([]);\n\n  const selectedRecords = [];\n\n  function addToSelected(record) {\n    selectedRecords.push(record);\n  }\n\n  function removeFromSelected(record) {\n    selectedRecords.splice(\n      selectedRecords.findIndex((element) => (record.id = element.id)),\n      1\n    );\n  }\n\n  function archiveSelected() {\n    archiveMultipleRecords(\n      isArchive ? `${selected}_archive` : selected,\n      isArchive ? selected : `${selected}_archive`,\n      selectedRecords,\n      isArchive,\n      () => refreshList()\n    );\n  }\n\n  let yearLastAdded = \"\";\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n  const toggleSelectMode = (value) => setIsSelect(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"events\") {\n        setIsArchive(() => false);\n      }\n      if (!showArchive(selected)) {\n        setIsSelect(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    } else {\n      setFetchingCollection(() => true);\n      let records = [\n        \"marriage\",\n        \"death\",\n        \"donation\",\n        \"events\",\n        \"requests\",\n        \"schedule\",\n      ];\n\n      let _recordCounts = [];\n      records.forEach(async (record, index) => {\n        await recordCounter(record, (data) => {\n          _recordCounts.push({\n            name: record,\n            countOfRecords: data.size,\n          });\n          if (index === records.length - 1) {\n            setRecordCounts(() => _recordCounts);\n            setFetchingCollection(() => false);\n          }\n        });\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort((a, b) => {\n      return (\n        toDateTime(\n          b.dateDocumentAdded.seconds !== undefined\n            ? b.dateDocumentAdded.seconds\n            : b.dateDocumentAdded._seconds\n        ) -\n        toDateTime(\n          a.dateDocumentAdded.seconds !== undefined\n            ? a.dateDocumentAdded.seconds\n            : a.dateDocumentAdded._seconds\n        )\n      );\n    });\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          JSON.stringify(record)\n            // record.name +\n            // (record.wifeName !== null\n            //   ? record.wifeName + \" \" + record.husbandName\n            //   : \"\") +\n            // (record.title !== null ? record.title : \"\") +\n            // (record.nameOfDeceased !== null ? record.nameOfDeceased : \"\") +\n            // (record.fullName !== null ? record.fullName : \"\") +\n            // (record.gcashNumber !== null ? record.gcashNumber : \"\") +\n            // (record.firstName !== null\n            //   ? record.firstName + record.lastName\n            //   : \"\")\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id + isArchive}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n        isSelect={isSelect}\n        addToSelected={addToSelected}\n        removeFromSelected={removeFromSelected}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      {selected === \"backup\" ? (\n        // another DRY violation but I couldn't care less\n        <div className=\"backup-card\">\n          <div\n            className=\"backup-button\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Backing up your data don't refresh or leave the page\",\n                html: `<img src=\"${loading}\"/>`,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n              });\n              backupOrRestore(true);\n            }}\n          >\n            <span className=\"backup-label\">backup data</span>\n            <img className=\"backup-icon icon\" src={backup} alt=\"backup\" />\n          </div>\n          <div\n            className=\"backup-button\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Restoring your data don't refresh or leave the page\",\n                html: `<img src=\"${loading}\"/>`,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n              });\n              backupOrRestore(false);\n            }}\n          >\n            <span className=\"backup-label\">restore data</span>\n            <img className=\"backup-icon icon\" src={upload} alt=\"backup\" />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <ActionBar\n            search={search}\n            requestRefresh={refreshList}\n            show={selected !== \"\"}\n            selected={selected}\n            toggleArchive={toggleArchive}\n            toggleSelectMode={toggleSelectMode}\n            isArchive={isArchive}\n            isSelect={isSelect}\n            archiveSelected={archiveSelected}\n          />\n          {fetchingCollection ? (\n            <Loader />\n          ) : selected === \"\" ? (\n            <div className=\"count-container\">\n              {recordCounts.map((recordCount) => {\n                recordCount.id = recordCount.name;\n                return (\n                  <CountContent\n                    key={recordCount.name}\n                    name={recordCount.name}\n                    count={recordCount.countOfRecords}\n                  />\n                );\n              })}\n            </div>\n          ) : isArchive ? (\n            getMatches().map((record) => {\n              let dateAdded =\n                record.props.record.dateDocumentAdded.seconds !== undefined\n                  ? toDateTime(\n                      record.props.record.dateDocumentAdded.seconds\n                    ).getFullYear()\n                  : toDateTime(\n                      record.props.record.dateDocumentAdded._seconds\n                    ).getFullYear();\n\n              let id = record.props.record.id;\n              if (yearLastAdded !== dateAdded) {\n                yearLastAdded = dateAdded;\n                return (\n                  <div key={id + isArchive.toString()}>\n                    <h3 className=\"content-message\">\n                      Records From year {yearLastAdded}\n                    </h3>\n                    <div className=\"content-container\">{record}</div>\n                  </div>\n                );\n              } else {\n                return (\n                  <div\n                    key={id + isArchive.toString()}\n                    className=\"content-container\"\n                  >\n                    {record}\n                  </div>\n                );\n              }\n            })\n          ) : (\n            <div className=\"content-container\">\n              {getMatches()[0] ? (\n                getMatches()\n              ) : (\n                <h3 className=\"content-message\">No Records found</h3>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","import { useEffect, useState } from \"react\";\nimport { notificationCounter } from \"../../api/FirebaseHelper\";\n\nexport default function SidebarItem({ imagesrc, label, isSelected }) {\n  const [notifCount, setNotifCount] = useState(0);\n\n  useEffect(() => {\n    async function countRecords() {\n      notificationCounter(label.toLowerCase(), function (data) {\n        setNotifCount(() => data.size);\n      });\n    }\n\n    if ([\"requests\", \"donation\"].includes(label.toLowerCase())) {\n      countRecords();\n    }\n  }, [label]);\n\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      {notifCount > 0 ? <span className=\"badge\">{notifCount}</span> : \"\"}\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\nimport backup from \"../../assets/backup.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"events\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Events\"\n          imagesrc={post}\n          isSelected={selected === \"events\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"schedule\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Mass Schedule\"\n          imagesrc={church}\n          isSelected={selected === \"schedule\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n      <span\n        onClick={() => {\n          select(\"backup\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Backup & Restore\"\n          imagesrc={backup}\n          isSelected={selected === \"backup\"}\n        />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2 className=\"clickable\" onClick={() => select(\"\")}>\n        National Shrine of Our Lady of sorrows\n      </h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  //comment\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}