{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","assets/upload.svg","api/FirebaseHelper.js","helpers.js","components/misc/loader.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/password.svg","assets/logout.svg","assets/post.svg","assets/records.svg","assets/request.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["getFile","id","directory","a","getDownloadURL","ref","storage","uploadCert","file","uploadBytes","hasCertificate","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","addRecord","record","Date","addDoc","success","editRecord","docId","value","updateDoc","deleteRecord","deleteDoc","archiveRecord","currentCollectionName","targetCollectionName","login","username","password","admins","i","length","changePassword","oldPassword","newPassword","loggedIn","find","o","message","inputGetter","document","getElementById","getById","customAlert","icon","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","toDateTime","secs","t","setSeconds","MiniLoader","className","Loader","ContentItem","selected","requestRefresh","isArchive","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","hasCert","setHasCert","submit","values","submitFile","marriageDialog","html","didOpen","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","preConfirm","replace","ageValid","innerHTML","noempty","nothingChanged","showCancelButton","then","isConfirmed","useEffect","res","checkCert","Object","keys","sort","b","map","key","toUpperCase","slice","match","join","recordDetail","src","print","alt","onClick","window","open","upload","input","confirmButtonText","showLoaderOnConfirm","allowOutsideClick","isLoading","isValid","type","result","edit","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","address","phone","fullname","phoneValid","content","now","date","getFullYear","getMonth","toString","padStart","getDate","archive","confirmArchive","ToggleSwitch","toggleArchive","onChange","target","checked","ActionBar","search","show","addingRecord","setAddingRecord","add","Content","records","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","refreshList","fetchData","getMatches","arr","dateDocumentAdded","seconds","trim","toLowerCase","includes","createItem","SidebarItem","imagesrc","label","isSelected","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","marriage","death","donation","post","requests","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8YAAe,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,oCCA1B,MAA0B,mC,gBCWlC,SAAeA,EAAtB,oC,4CAAO,WAAuBC,EAAIC,GAA3B,SAAAC,EAAA,sEACQC,YAAeC,YAAIC,GAAD,UAAaJ,EAAb,YAA0BD,EAA1B,UAD1B,oF,sBAIA,SAAeM,EAAtB,sC,4CAAO,WAA0BN,EAAIO,EAAMN,GAApC,SAAAC,EAAA,sEACQM,YAAYJ,YAAIC,GAAD,UAAaJ,EAAb,YAA0BD,EAA1B,SAAqCO,GAD5D,oF,sBAIA,SAAeE,EAAtB,oC,4CAAO,WAA8BT,EAAIC,GAAlC,SAAAC,EAAA,+EAEGC,YAAeC,YAAIC,GAAD,UAAaJ,EAAb,YAA0BD,EAA1B,UAFrB,iCAGI,GAHJ,0DAKI,GALJ,yD,sBASA,SAAeU,EAAtB,kC,4CAAO,WAA+BC,GAA/B,iBAAAT,EAAA,sEACuBU,YAAQC,YAAWC,GAAWH,IADrD,cACCI,EADD,OAEDC,EAAQ,GACZD,EAAcE,SAAQ,SAACC,GACrB,IAAIC,EAAOD,EAAIC,OACfA,EAAI,GAASD,EAAIlB,GACjBgB,EAAMI,KAAKD,MANR,kBAQEH,GARF,4C,sBAWA,SAAeK,EAAtB,oC,4CAAO,WAAyBV,EAAgBW,GAAzC,eAAApB,EAAA,6DAELoB,EAAM,kBAAwB,IAAIC,KAF7B,kBAIGC,YAAOX,YAAWC,GAAWH,GAAiBW,GAJjD,OAKHG,GAAU,EALP,gDAOHA,GAAU,EAPP,iCASEA,GATF,0D,sBAYA,SAAeC,EAAtB,sC,4CAAO,WAA0Bf,EAAgBgB,EAAOC,GAAjD,eAAA1B,EAAA,+EAGG2B,YAAUX,YAAIL,YAAWC,GAAWH,GAAiBgB,GAAQC,GAHhE,OAIHH,GAAU,EAJP,+CAMHA,GAAU,EANP,gCAQEA,GARF,0D,sBAWA,SAAeK,EAAtB,oC,4CAAO,WAA4BnB,EAAgBgB,GAA5C,eAAAzB,EAAA,+EAGG6B,YAAUb,YAAIL,YAAWC,GAAWH,GAAiBgB,IAHxD,OAIHF,GAAU,EAJP,+CAMHA,GAAU,EANP,gCAQEA,GARF,0D,sBAWA,SAAeO,EAAtB,wC,4CAAO,WACLC,EACAC,EACAP,EACAL,GAJK,eAAApB,EAAA,6DAMDuB,GAAU,EANT,kBAQOJ,EAAUa,EAAsBZ,GARvC,kDASSQ,EAAaG,EAAuBN,GAT7C,kCAUCF,GAAU,EAVX,yDAcHA,GAAU,EAdP,iCAgBEA,GAhBF,2D,sBAmBA,SAAeU,EAAtB,oC,4CAAO,WAAqBC,EAAUC,GAA/B,iBAAAnC,EAAA,sEACcQ,EAAgB,UAD9B,OACD4B,EADC,OAEIC,EAAI,EAFR,YAEWA,EAAID,EAAOE,QAFtB,oBAGCF,EAAOC,GAAGH,WAAaA,GAAYE,EAAOC,GAAGF,WAAaA,EAH3D,yCAIMC,EAAOC,GAAGvC,IAJhB,OAE8BuC,IAF9B,iDAOE,GAPF,6C,sBAUA,SAAeE,EAAtB,sC,4CAAO,WAA8BzC,EAAI0C,EAAaC,GAA/C,iBAAAzC,EAAA,sEACcQ,EAAgB,UAD9B,UACD4B,EADC,QAEDM,EAAWN,EAAOO,MAAK,SAACC,GAAD,OAAQA,EAAE9C,GAAKA,MAE7BqC,WAAaK,EAJrB,wBAKHE,EAASP,SAAWM,EALjB,SAMOjB,EAAW,SAAU1B,EAAI4C,GANhC,4DAOM,CAAEnB,SAAS,EAAMsB,QAAS,yCAPhC,iCASM,CAAEtB,SAAS,EAAOsB,QAAS,8BATjC,yDAYI,CAAEtB,SAAS,EAAOsB,QAAS,8BAZ/B,6C,sBCpGA,SAASC,EAAYhD,GAC1B,OAAOiD,SAASC,eAAelD,GAAI4B,MAG9B,SAASuB,EAAQnD,GACtB,OAAOiD,SAASC,eAAelD,GAG1B,SAAeoD,EAAtB,oC,4CAAO,WAA2BL,EAASM,GAApC,SAAAnD,EAAA,sEACCoD,IAAKC,KAAK,CACdC,MAAOT,EACPM,KAAMA,IAHH,4C,sBAOA,SAASI,EAAUC,GAIxB,IAHA,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmBZ,SAASa,QACzBC,MAAM,KACpBxB,EAAI,EAAGA,EAAIqB,EAAGpB,OAAQD,IAAK,CAElC,IADA,IAAIyB,EAAIJ,EAAGrB,GACY,MAAhByB,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAElB,GAAwB,IAApBF,EAAEG,QAAQR,GACZ,OAAOK,EAAEE,UAAUP,EAAKnB,OAAQwB,EAAExB,QAGtC,MAAO,GAGF,SAAS4B,EAAWC,GACzB,IAAIC,EAAI,IAAI/C,KAAK,KAAM,EAAG,GAE1B,OADA+C,EAAEC,WAAWF,GACNC,E,iBClCF,SAASE,IACd,OACE,qBAAKC,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAKd,SAASC,IACd,OAAO,qBAAKD,UAAU,WCMT,SAASE,EAAT,GAKX,IAJFrD,EAIC,EAJDA,OACAsD,EAGC,EAHDA,SACAC,EAEC,EAFDA,eACAC,EACC,EADDA,UAEA,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAJC,SAoBcC,EApBd,8EAoBD,WAAsBC,GAAtB,SAAAvF,EAAA,6DACE+E,GAAY,kBAAM,KADpB,SAGUvD,EACJkD,GAAYE,EAAY,WAAa,IACrCxD,EAAOtB,GACPyF,GANN,kCASIrC,EAAY,kBAAmB,WAC/ByB,IAVJ,sBAYIzB,EAAY,0BAA2B,SAZ3C,OAcE6B,GAAY,GAdd,6CApBC,+BAqCcS,EArCd,8EAqCD,WAA0BnF,GAA1B,SAAAL,EAAA,6DACEmF,GAAa,kBAAM,KADrB,SAEQ/E,EAAWgB,EAAOtB,GAAIO,EAAMqE,GAAYE,EAAY,WAAa,KAFzE,OAGEO,GAAa,kBAAM,KACnBR,IAJF,4CArCC,kEA4CD,sBAAA3E,EAAA,6DACEiF,GAAa,kBAAM,KADrB,SAGUnD,EAAc4C,EAAD,UAAcA,EAAd,YAAkCtD,EAAOtB,GAAIsB,GAHpE,kCAKI8B,EAAY,mBAAoB,WAChCyB,IANJ,sBAQIzB,EAAY,2BAA4B,SAR5C,OAUE+B,GAAa,kBAAM,KAVrB,6CA5CC,sBAuED,SAASQ,IACPrC,IAAKC,KAAK,CACRC,MAAO,gBACPoC,KACE,8qCA0BFC,QAAS,WACP1C,EAAQ,eAAevB,MAAQN,EAAOwE,YACtC3C,EAAQ,cAAcvB,MAAQN,EAAOyE,WACrC5C,EAAQ,mBAAmBvB,MAAQN,EAAO0E,gBAC1C7C,EAAQ,uBAAuBvB,MAAQN,EAAO2E,oBAC9C9C,EAAQ,mBAAmBvB,MAAQN,EAAO4E,gBAC1C/C,EAAQ,YAAYvB,MAAQN,EAAO6E,SACnChD,EAAQ,WAAWvB,MAAQN,EAAO8E,QAClCjD,EAAQ,gBAAgBvB,MAAQN,EAAO+E,aACvClD,EAAQ,oBAAoBvB,MAAQN,EAAOgF,iBAC3CnD,EAAQ,gBAAgBvB,MAAQN,EAAOiF,cAEzCC,WAAY,WACVrD,EAAQ,cAAcvB,MAAQuB,EAAQ,cAAcvB,MAAM6E,QACxD,UACA,IAEFtD,EAAQ,WAAWvB,MAAQuB,EAAQ,WAAWvB,MAAM6E,QAClD,UACA,IAGF,IAAIX,EAAc9C,EAAY,eAC1B+C,EAAa/C,EAAY,cACzBgD,EAAkBhD,EAAY,mBAC9BiD,EAAsBjD,EAAY,uBAClCkD,EAAkBlD,EAAY,mBAE9BmD,EAAWnD,EAAY,YACvBoD,EAAUpD,EAAY,WACtBqD,EAAerD,EAAY,gBAC3BsD,EAAmBtD,EAAY,oBAC/BuD,EAAevD,EAAY,gBAE3B0D,EACFX,EAAWvD,OAAS,GACpB4D,EAAQ5D,OAAS,GACjBuD,EAAa,GACbK,EAAU,EAIPjD,EAAQ,cAAcwD,UAHtBD,EAGkC,IADnC,8DAGJ,IAAIE,EACFd,EAAYtD,OAAS,GACrBuD,EAAWvD,OAAS,GACpBwD,EAAgBxD,OAAS,GACzByD,EAAoBzD,OAAS,GAC7B0D,EAAgB1D,OAAS,GACzB2D,EAAS3D,OAAS,GAClB4D,EAAQ5D,OAAS,GACjB6D,EAAa7D,OAAS,GACtB8D,EAAiB9D,OAAS,GAC1B+D,EAAa/D,OAAS,EAGnBW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAG3C,IAAIC,EACFf,IAAgBxE,EAAOwE,aACvBC,IAAezE,EAAOyE,YACtBC,IAAoB1E,EAAO0E,iBAC3BC,IAAwB3E,EAAO2E,qBAC/BC,IAAoB5E,EAAO4E,iBAC3BC,IAAa7E,EAAO6E,UACpBC,IAAY9E,EAAO8E,SACnBC,IAAiB/E,EAAO+E,cACxBC,IAAqBhF,EAAOgF,kBAC5BC,IAAiBjF,EAAOiF,aAM1B,OAHEpD,EAAQ,kBAAkBwD,UADxBE,EACoC,2BACG,IAEpCD,IAAYC,GAAkBH,GAEvCI,kBAAkB,IACjBC,MAAK,SAACnF,GACHA,EAAMoF,aACRxB,EAAO,CACLM,YAAa9C,EAAY,eACzB+C,WAAY/C,EAAY,cACxBgD,gBAAiBhD,EAAY,mBAC7BiD,oBAAqBjD,EAAY,uBACjCkD,gBAAiBlD,EAAY,mBAC7BmD,SAAUnD,EAAY,YACtBoD,QAASpD,EAAY,WACrBqD,aAAcrD,EAAY,gBAC1BsD,iBAAkBtD,EAAY,oBAC9BuD,aAAcvD,EAAY,qBA6NlC,OAtZAiE,qBAAU,WAAM,4CACd,4BAAA/G,EAAA,sEACkBO,EACda,EAAOtB,GACP4E,GAAYE,EAAY,WAAa,KAHzC,OACMoC,EADN,OAKE3B,GAAW,kBAAM2B,KALnB,4CADc,uBAAC,WAAD,wBAQdC,KACC,CAAC7F,EAAOtB,GAAI8E,EAAWF,IA8YxB,sBAAKH,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SACG2C,OAAOC,KAAK/F,GACVgG,MAAK,SAACpH,EAAGqH,GAAJ,OAAUrH,EAAIqH,KACnBC,KAAI,SAACC,GACJ,MAAY,OAARA,GAAwB,sBAARA,EAzW9B,SAAsBA,EAAK7F,GACzB,IAEE6F,GADAA,EAAMA,EAAIxD,OAAO,GAAGyD,cAAgBD,EAAIE,MAAM,IACpCC,MAAM,uBAAuBC,KAAK,KAC5C,UAEF,OACE,sBAAKpD,UAAU,iBAAf,UACE,uBAAMA,UAAU,MAAhB,UAAuBgD,EAAvB,OACA,sBAAMhD,UAAU,QAAhB,SAAyB7C,MAFU6F,GAmWtBK,CAAaL,EAAKnG,EAAOmG,IACtB,UAGlB,+BACE,sBAAKhD,UAAU,kBAAf,UACgB,SAAbG,GAAoC,aAAbA,EACtB,qBAAKH,UAAU,iBAAf,SACGa,EACC,qBACEyC,IAAKC,EACLxE,MAAM,QACNyE,IAAI,GACJxD,UAAU,OACVyD,QAAO,sBAAE,4BAAAhI,EAAA,sEACUH,EACfuB,EAAOtB,GACP4E,GAAYE,EAAY,WAAa,KAHhC,OACHvE,EADG,OAKP4H,OAAOC,KAAK7H,GALL,6CASX,KAIJ,GAEY,SAAbqE,GACY,aAAbA,GACa,aAAbA,EACE,qBAAKH,UAAU,iBAAf,SACGW,EACC,cAACZ,EAAD,IAEA,qBACEuD,IAAKM,EACL7E,MAAM,SACNyE,IAAI,SACJxD,UAAU,OACVyD,QAAO,sBAAE,sBAAAhI,EAAA,sDApEvBoD,IAAKC,KAAK,CACRC,MAAO,qBACP8E,MAAO,OACP1C,KAAM,gDACNkB,kBAAkB,EAClByB,kBAAmB,SACnBC,qBAAqB,EACrBC,kBAAmB,kBAAOnF,IAAKoF,aAC/BlC,WAAY,SAAC5E,GACX,IAAI+G,EAAyB,oBAAf/G,EAAMgH,KAEpB,OADKD,IAASxF,EAAQ,WAAWwD,UAAY,uBACtCgC,GAAU/G,KAElBmF,KAbH,uCAaQ,WAAO8B,GAAP,SAAA3I,EAAA,sDACF2I,EAAO7B,aACTtB,EAAWmD,EAAOjH,OAFd,2CAbR,uDAoEuB,+CAOf,GAEY,aAAbgD,GAAwC,aAAbA,EAC1B,qBAAKH,UAAU,iBAAf,SACGO,EACC,cAACR,EAAD,IAEA,qBACEuD,IAAKe,EACLtF,MAAM,OACNyE,IAAI,GACJxD,UAAU,OACVyD,QAAS,WACP,OAAQtD,GAaN,QACEe,UAVF,IAAK,QA9RvBrC,IAAKC,KAAK,CACRC,MAAO,eACPoC,KACE,qpBAaFC,QAAS,WACP1C,EAAQ,YAAYvB,MAAQN,EAAOqC,KACnCR,EAAQ,cAAcvB,MAAQN,EAAOyH,WACrC5F,EAAQ,cAAcvB,MAAQN,EAAO0H,WACrC7F,EAAQ,cAAcvB,MAAQN,EAAO2H,WACrC9F,EAAQ,OAAOvB,MAAQN,EAAO4H,KAEhC1C,WAAY,WACVrD,EAAQ,OAAOvB,MAAQuB,EAAQ,OAAOvB,MAAM6E,QAAQ,UAAW,IAE/D,IAAI0C,EAAUnG,EAAY,YACtBoG,EAAgBpG,EAAY,cAC5BqG,EAAgBrG,EAAY,cAC5BsG,EAAgBtG,EAAY,cAC5BuG,EAASvG,EAAY,OAErB0D,EAAW6C,EAAO/G,OAAS,GAAK+G,EAAS,EAIxCpG,EAAQ,cAAcwD,UAHtBD,EAGkC,IADnC,8DAGJ,IAAIE,EACFuC,EAAQ3G,OAAS,GACjB4G,EAAc5G,OAAS,GACvB6G,EAAc7G,OAAS,GACvB8G,EAAc9G,OAAS,GACvB+G,EAAO/G,OAAS,EAGbW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAG3C,IAAIC,EACFsC,IAAY7H,EAAOqC,MACnByF,IAAkB9H,EAAO0H,YACzBK,IAAkB/H,EAAOyH,YACzBO,IAAkBhI,EAAO2H,YACzBM,IAAWjI,EAAO4H,IAMpB,OAHE/F,EAAQ,kBAAkBwD,UADxBE,EACoC,2BACG,IAEpCD,IAAYC,GAAkBH,GAEvCI,kBAAkB,IACjBC,MAAK,SAACnF,GACP,GAAIA,EAAMoF,YAAa,CACrB,IAAImC,EAAUnG,EAAY,YACtBoG,EAAgBpG,EAAY,cAKhCwC,EAAO,CACL7B,KAAMwF,EACNJ,WANkB/F,EAAY,cAO9BgG,WAAYI,EACZH,WAPkBjG,EAAY,cAQ9BkG,IAPWlG,EAAY,aA4NT,MACF,IAAK,WA/MvBM,IAAKC,KAAK,CACRC,MAAO,eACPoC,KACE,ybASFC,QAAS,WACP1C,EAAQ,YAAYvB,MAAQN,EAAOqC,KACnCR,EAAQ,WAAWvB,MAAQN,EAAOkI,QAClCrG,EAAQ,SAASvB,MAAQN,EAAOmI,OAElCjD,WAAY,WACVrD,EAAQ,SAASvB,MAAQuB,EAAQ,SAASvB,MAAM6E,QAAQ,UAAW,IAEnE,IAAIiD,EAAW1G,EAAY,YACvBwG,EAAUxG,EAAY,WACtByG,EAAQzG,EAAY,SAEpB2G,EAA8B,KAAjBF,EAAMjH,OAIlBW,EAAQ,gBAAgBwD,UAHxBgD,EAGoC,IADrC,kGAGJ,IAAI/C,EACF8C,EAASlH,OAAS,GAAKgH,EAAQhH,OAAS,GAAKiH,EAAMjH,OAAS,EAGzDW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAG3C,IAAIC,EACF6C,IAAapI,EAAOqC,MACpB6F,IAAYlI,EAAOkI,SACnBC,IAAUnI,EAAOmI,MAMnB,OAHEtG,EAAQ,kBAAkBwD,UADxBE,EACoC,2BACG,IAEpCD,IAAYC,GAAkB8C,GAEvC7C,kBAAkB,IACjBC,MAAK,SAACnF,GACHA,EAAMoF,aAKRxB,EAAO,CACL7B,KALaX,EAAY,YAMzBwG,QALYxG,EAAY,WAMxByG,MALUzG,EAAY,cA6JR,MACF,IAAK,OAlJvBM,IAAKC,KAAK,CACRC,MAAO,gBACPoC,KACE,2RAMFkB,kBAAkB,EAClBjB,QAAS,WACP1C,EAAQ,SAASvB,MAAQN,EAAOkC,MAChCL,EAAQ,gBAAgBvB,MAAQN,EAAOsI,SAEzCpD,WAAY,WACV,IAAIhD,EAAQR,EAAY,SACpB4G,EAAU5G,EAAY,gBAEtB4D,EAAUpD,EAAMhB,OAAS,GAAKoH,EAAQpH,OAAS,EAG9CW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAG3C,IAAIC,EACFrD,IAAUlC,EAAOkC,OAASoG,IAAYtI,EAAOsI,QAM/C,OAHEzG,EAAQ,kBAAkBwD,UADxBE,EACoC,2BACG,IAEpCD,IAAYC,KAEpBE,MAAK,SAACnF,GACP,GAAIA,EAAMoF,YAAa,CACrB,IAAI6C,EAAM,IAAItI,KACdiE,EAAO,CACLhC,MAAOR,EAAY,SACnB8G,KAAK,GAAD,OAAKD,EAAIE,cAAT,YAA0BF,EAC3BG,WACAC,WACAC,SAAS,EAAG,GAHX,YAGiBL,EAAIM,WACzBP,QAAS5G,EAAY,4BAoHnB,GAEY,SAAb4B,GAAoC,aAAbA,GAA4BE,EA0BlD,GAzBA,qBAAKL,UAAU,iBAAf,SACGS,EACC,cAACV,EAAD,IAEA,qBACEuD,IAAKqC,EACL5G,MAAM,UACNyE,IAAI,UACJxD,UAAU,OACVyD,QAAS,kBACP5E,IAAKC,KAAK,CACRC,MAAO,gDACPH,KAAM,UACNyD,kBAAkB,EAClByB,kBAAmB,YAClBxB,MAAK,SAAC8B,GACHA,EAAO7B,aAxgB9B,mCAygBqBqD,mBC/hBT,UAA0B,gC,MCE1B,SAASC,EAAT,GAA0C,IAAlBC,EAAiB,EAAjBA,cACrC,OACE,wBAAO9F,UAAU,SAAjB,UACE,uBACEmE,KAAK,WACL4B,SAAU,SAAC5I,GACT2I,EAAc3I,EAAM6I,OAAOC,YAG/B,sBAAMjG,UAAU,oBCHP,SAASkG,EAAT,GAOX,IANF9F,EAMC,EANDA,eACA+F,EAKC,EALDA,OACAC,EAIC,EAJDA,KACAjG,EAGC,EAHDA,SACA2F,EAEC,EAFDA,cACAzF,EACC,EADDA,UAEA,EAAwCC,oBAAS,GAAjD,mBAAO+F,EAAP,KAAqBC,EAArB,KADC,SAGcvF,EAHd,8EAGD,WAAsBC,GAAtB,SAAAvF,EAAA,6DACE6K,GAAgB,kBAAM,KADxB,SAEY1J,EAAUuD,GAAYE,EAAY,WAAa,IAAKW,GAFhE,kCAGIrC,EAAY,gBAAiB,WAC7ByB,IAJJ,sBAMIzB,EAAY,uBAAwB,SANxC,OAQE2H,GAAgB,kBAAM,KARxB,6CAHC,sBAcD,SAASpF,IACPrC,IAAKC,KAAK,CACRC,MAAO,gBACPoC,KACE,2nCAyBFkB,kBAAkB,EAClBN,WAAY,WACVrD,EAAQ,cAAcvB,MAAQuB,EAAQ,cAAcvB,MAAM6E,QACxD,UACA,IAEFtD,EAAQ,WAAWvB,MAAQuB,EAAQ,WAAWvB,MAAM6E,QAClD,UACA,IAGF,IAAIX,EAAc9C,EAAY,eAC1B+C,EAAa/C,EAAY,cACzBgD,EAAkBhD,EAAY,mBAC9BiD,EAAsBjD,EAAY,uBAClCkD,EAAkBlD,EAAY,mBAE9BmD,EAAWnD,EAAY,YACvBoD,EAAUpD,EAAY,WACtBqD,EAAerD,EAAY,gBAC3BsD,EAAmBtD,EAAY,oBAC/BuD,EAAevD,EAAY,gBAE3B0D,EACFX,EAAWvD,OAAS,GACpB4D,EAAQ5D,OAAS,GACjBuD,EAAa,GACbK,EAAU,EAIPjD,EAAQ,cAAcwD,UAHtBD,EAGkC,IADnC,8DAGJ,IAAIE,EACFd,EAAYtD,OAAS,GACrBuD,EAAWvD,OAAS,GACpBwD,EAAgBxD,OAAS,GACzByD,EAAoBzD,OAAS,GAC7B0D,EAAgB1D,OAAS,GACzB2D,EAAS3D,OAAS,GAClB4D,EAAQ5D,OAAS,GACjB6D,EAAa7D,OAAS,GACtB8D,EAAiB9D,OAAS,GAC1B+D,EAAa/D,OAAS,EAKxB,OAFKW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAGpCA,GAAWF,KAEnBK,MAAK,SAACnF,GACHA,EAAMoF,aACRxB,EAAO,CACLM,YAAa9C,EAAY,eACzB+C,WAAY/C,EAAY,cACxBgD,gBAAiBhD,EAAY,mBAC7BiD,oBAAqBjD,EAAY,uBACjCkD,gBAAiBlD,EAAY,mBAC7BmD,SAAUnD,EAAY,YACtBoD,QAASpD,EAAY,WACrBqD,aAAcrD,EAAY,gBAC1BsD,iBAAkBtD,EAAY,oBAC9BuD,aAAcvD,EAAY,qBA4JlC,OAAO6H,EACL,sBAAKpG,UAAU,aAAf,UACgB,SAAbG,EACC,uBAAMH,UAAU,aAAhB,UACE,uBAAOmE,KAAK,OAAOnE,UAAU,eAAezE,GAAG,iBAC/C,qBACEyE,UAAU,gBACVjB,MAAM,SACN0E,QAAS,kBACP0C,EAAO3H,SAASC,eAAe,gBAAgBtB,QAJnD,SAOE,6CAIJ,GAEY,SAAbgD,GAAoC,aAAbA,EACtB,uBAAMH,UAAU,cAAhB,UACE,cAAC6F,EAAD,CAAcC,cAAeA,IAC7B,mDAGF,GAEY,aAAb3F,GAAwC,aAAbA,EAC1B,uBACEH,UAAU,2BACVjB,MAAM,MACN0E,QAAS,WACP,OAAQtD,GAaN,QACEe,UAVF,IAAK,QAxLfrC,IAAKC,KAAK,CACRC,MAAO,cACPoC,KACE,yoBAaFY,WAAY,WACVrD,EAAQ,OAAOvB,MAAQuB,EAAQ,OAAOvB,MAAM6E,QAAQ,UAAW,IAE/D,IAAI0C,EAAUnG,EAAY,YACtBoG,EAAgBpG,EAAY,cAC5BqG,EAAgBrG,EAAY,cAC5BsG,EAAgBtG,EAAY,cAC5BuG,EAASvG,EAAY,OAErB0D,EAAW6C,EAAO/G,OAAS,GAAK+G,EAAS,EAIxCpG,EAAQ,cAAcwD,UAHtBD,EAGkC,IADnC,8DAGJ,IAAIE,EACFuC,EAAQ3G,OAAS,GACjB4G,EAAc5G,OAAS,GACvB6G,EAAc7G,OAAS,GACvB8G,EAAc9G,OAAS,GACvB+G,EAAO/G,OAAS,EAKlB,OAFKW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAGpCA,GAAWF,GAEpBI,kBAAkB,IACjBC,MAAK,SAACnF,GACP,GAAIA,EAAMoF,YAAa,CACrB,IAAImC,EAAUnG,EAAY,YACtBoG,EAAgBpG,EAAY,cAKhCwC,EAAO,CACL7B,KAAMwF,EACNJ,WANkB/F,EAAY,cAO9BgG,WAAYI,EACZH,WAPkBjG,EAAY,cAQ9BkG,IAPWlG,EAAY,aAwIjB,MACF,IAAK,WA3HfM,IAAKC,KAAK,CACRC,MAAO,eACPoC,KACE,4ZASFY,WAAY,WACVrD,EAAQ,SAASvB,MAAQuB,EAAQ,SAASvB,MAAM6E,QAAQ,UAAW,IAEnE,IAAIiD,EAAW1G,EAAY,YACvBwG,EAAUxG,EAAY,WACtByG,EAAQzG,EAAY,SAEpB2G,EAA8B,KAAjBF,EAAMjH,OAIlBW,EAAQ,gBAAgBwD,UAHxBgD,EAGoC,GADrC,kGAGJ,IAAI/C,EACF8C,EAASlH,OAAS,GAAKgH,EAAQhH,OAAS,GAAKiH,EAAMjH,OAAS,EAK9D,OAFKW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAGpCA,GAAW+C,GAEpB7C,kBAAkB,IACjBC,MAAK,SAACnF,GACHA,EAAMoF,aAKRxB,EAAO,CACL7B,KALaX,EAAY,YAMzBwG,QALYxG,EAAY,WAMxByG,MALUzG,EAAY,cAuFhB,MACF,IAAK,OA5EfM,IAAKC,KAAK,CACRC,MAAO,gBACPoC,KACE,wOAKFkB,kBAAkB,EAClBN,WAAY,WACV,IAAIhD,EAAQR,EAAY,SACpB4G,EAAU5G,EAAY,gBAEtB4D,EAAUpD,EAAMhB,OAAS,GAAKoH,EAAQpH,OAAS,EAKnD,OAFKW,EAAQ,SAASwD,UADjBC,EAC6B,IADS,sBAGpCA,KAERG,MAAK,SAACnF,GACP,GAAIA,EAAMoF,YAAa,CACrB,IAAI6C,EAAM,IAAItI,KACdiE,EAAO,CACLhC,MAAOR,EAAY,SACnB8G,KAAK,GAAD,OAAKD,EAAIE,cAAT,YAA0BF,EAC3BG,WACAC,WACAC,SAAS,EAAG,GAHX,YAGiBL,EAAIM,WACzBP,QAAS5G,EAAY,wBAiCvB,UAsBG8H,EACC,cAACtG,EAAD,IAEA,qBAAKuD,IAAKiD,EAAK/C,IAAI,MAAMxD,UAAU,SAErC,yCAGF,4BAIJ,GCxUW,SAASwG,EAAT,GAAgC,IAAbrG,EAAY,EAAZA,SAChC,EAA8BG,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KACA,EAAwCpG,mBAAS,IAAjD,mBAAOqG,EAAP,KAAqBC,EAArB,KACA,EAAoDtG,oBAAS,GAA7D,mBAAOuG,EAAP,KAA2BC,EAA3B,KACA,EAAmCxG,mBAAS,GAA5C,mBAAOyG,EAAP,KAAmBC,EAAnB,KACA,EAAkC1G,oBAAS,GAA3C,mBAAOD,EAAP,KAAkB4G,EAAlB,KAIMC,EAAc,kBAAMF,GAAa,SAAC7J,GAAD,OAAWA,EAAQ,MAIpDgK,EAAS,uCAAG,sBAAA1L,EAAA,yDACC,KAAb0E,EADY,uBAEd2G,GAAsB,kBAAM,KACX,aAAb3G,GAAwC,SAAbA,GAC7B8G,GAAa,kBAAM,KAJP,KAMdP,EANc,SAONzK,EAAgBkE,GAAYE,EAAY,WAAa,KAP/C,kCASdyG,GAAsB,kBAAM,KATd,2CAAH,qDAgBf,SAASM,IACP,IAAIC,EAAM,GAoBV,OAnBAZ,EAAQ5D,MACN,SAACpH,EAAGqH,GAAJ,OACEnD,EAAWlE,EAAE6L,kBAAkBC,SAC/B5H,EAAWmD,EAAEwE,kBAAkBC,YAEd,KAAjBZ,EACFF,EAAQjK,SAAQ,SAACK,IAEZA,EAAOqC,MAAQrC,EAAO6E,UAAY7E,EAAOwE,aAAexE,EAAOkC,OAC7DyI,OACAC,cACAC,SAASf,EAAaa,OAAOC,gBAEhCJ,EAAI1K,KAAKgL,EAAW9K,OAIxBwK,EAAMZ,EAAQ1D,KAAI,SAAClG,GAAD,OAAY8K,EAAW9K,MAEpCwK,EAGT,SAASM,EAAW9K,GAClB,OACE,cAACqD,EAAD,CACErD,OAAQA,EAERsD,SAAUA,EACVC,eAAgB8G,EAChB7G,UAAWA,GAHNxD,EAAOtB,IAQlB,OAtCAiH,qBAAU,kBAAM2E,MAAa,CAACJ,EAAY1G,EAAWF,IAuCnD,sBAAK5E,GAAG,UAAR,UACE,cAAC2K,EAAD,CACEC,OAzDS,SAACtC,GAAD,OAAW+C,GAAgB,kBAAM/C,MA0D1CzD,eAAgB8G,EAChBd,KAAmB,KAAbjG,EACNA,SAAUA,EACV2F,cAjEgB,SAAC3I,GAAD,OAAW8J,GAAa,kBAAM9J,MAkE9CkD,UAAWA,IAEC,KAAbF,EACC,oBAAIH,UAAU,kBAAd,8BACE6G,EACF,cAAC5G,EAAD,IAEA,qBAAKD,UAAU,oBAAf,SACGoH,IAAa,GACZA,IAEA,oBAAIpH,UAAU,kBAAd,gCAIN,qBAAKA,UAAU,kB,UCjGN,MAA0B,sCCA1B,SAAS4H,GAAT,GAAuD,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACrD,OACE,sBAAK/H,UAAS,uBAAkB+H,EAAa,SAAW,IAAxD,UACE,qBAAKzE,IAAKuE,EAAUrE,IAAI,OAAOxD,UAAU,SACzC,8BAAM8H,O,UCJG,OAA0B,kCCA1B,OAA0B,qCCA1B,OAA0B,qCCA1B,OAA0B,qCCA1B,OAA0B,mCCA1B,OAA0B,iCCA1B,OAA0B,oCCA1B,OAA0B,oCCe1B,SAASE,GAAT,GAAqD,IAAlC7H,EAAiC,EAAjCA,SAAU8H,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YAgElD,SAASC,IACP,IACED,IACA,WAEJ,MAAwC5H,oBAAS,GAAjD,mBAAO8H,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAK9M,GAAG,UAAR,UACE,sBACEkI,QAAS,kBAAM4E,GAAgB,SAACC,GAAD,OAAmBA,MAClDtI,UAAU,yBAFZ,SAIE,cAAC4H,GAAD,CACEE,MAAM,iBACND,SAAUpB,GACVsB,WAAYK,MAGfA,EACC,sBAAKpI,UAAU,oBAAf,UACE,sBACEyD,QAAS,WACPwE,EAAO,YACPE,KAEFnI,UAAU,yBALZ,SAOE,cAAC4H,GAAD,CACEE,MAAM,WACND,SAAUU,GACVR,WAAyB,aAAb5H,MAGhB,sBACEsD,QAAS,WACPwE,EAAO,SACPE,KAEFnI,UAAU,yBALZ,SAOE,cAAC4H,GAAD,CACEE,MAAM,QACND,SAAUW,GACVT,WAAyB,UAAb5H,MAGhB,sBACEsD,QAAS,WACPwE,EAAO,YACPE,KAEFnI,UAAU,yBALZ,SAOE,cAAC4H,GAAD,CACEE,MAAM,WACND,SAAUY,GACVV,WAAyB,aAAb5H,SAKlB,GAEF,sBACEsD,QAAS,WACPwE,EAAO,QACPE,KAEFnI,UAAU,yBALZ,SAOE,cAAC4H,GAAD,CACEE,MAAM,OACND,SAAUa,GACVX,WAAyB,SAAb5H,MAGhB,sBACEsD,QAAS,WACPwE,EAAO,YACPE,KAEFnI,UAAU,yBALZ,SAOE,cAAC4H,GAAD,CACEE,MAAM,WACND,SAAUc,GACVZ,WAAyB,aAAb5H,MAGhB,sBAAMsD,QAAS,WA3IjB5E,IAAKC,KAAK,CACRC,MAAO,uBACPsD,kBAAkB,EAClBlB,KACE,mbAQFY,WAAY,WACV,IAAI9D,EAAcM,EAAY,eAC1BL,EAAcK,EAAY,eAC1BqK,EAAerK,EAAY,gBAE3B4D,EACFlE,EAAYF,OAAS,GACrBG,EAAYH,OAAS,GACrB6K,EAAa7K,OAAS,EAEnBoE,IAASzD,EAAQ,SAASwD,UAAY,uBAE3C,IAAI2G,EAAU3K,IAAgB0K,EAK9B,OAHKC,IACHnK,EAAQ,cAAcwD,UAAY,8BAE7BC,GAAW0G,KAEnBvG,KA/BH,uCA+BQ,WAAOnF,GAAP,eAAA1B,EAAA,0DACF0B,EAAMoF,YADJ,iCAEqBvE,EACvBgB,EAAU,SACVT,EAAY,eACZA,EAAY,gBALV,YAEAuK,EAFA,QAOa9L,QAPb,iCAQI2B,EAAYmK,EAAaxK,QAAS,WARtC,OASFE,SAASa,OAAT,0BAAqC,IAAIvC,MACzC4G,OAAOqF,SAASC,SAVd,wBAYFrK,EAAYmK,EAAaxK,QAAS,SAZhC,4CA/BR,wDA2IE,SACE,cAACsJ,GAAD,CAAaE,MAAM,kBAAkBD,SAAUjK,OAEjD,sBAAM6F,QAAS,WA3JjB5E,IAAKC,KAAK,CACRC,MAAO,mCACPH,KAAM,WACNyD,kBAAkB,IACjBC,MAAK,SAACnF,GACHA,EAAMoF,cACR/D,SAASa,OAAT,0BAAqC,IAAIvC,MACzC4G,OAAOqF,SAASC,cAoJlB,SACE,cAACpB,GAAD,CAAaE,MAAM,SAASD,SAAUoB,UCxK/B,SAASC,GAAT,GAAuC,IAArBjB,EAAoB,EAApBA,OAAQ9H,EAAY,EAAZA,SAMvC,SAAS+H,IACPxJ,EAAQ,WAAWyK,MAAMC,MAAQ,MACjC1K,EAAQ,WAAWyK,MAAMC,MAAQ,MAGnC,OACE,sBAAK7N,GAAG,SAAR,UACE,wEACA,qBACE+H,IAAK+F,EACLtK,MAAM,MACNyE,IAAI,MACJxD,UAAU,2BAEVyD,QAAS,kBAlBb/E,EAAQ,WAAWyK,MAAMC,MAAQ,YACjC1K,EAAQ,WAAWyK,MAAMC,MAAQ,YAmB/B,qBAAK7N,GAAG,UAAUkI,QAAS,kBAAMyE,OACjC,cAACF,GAAD,CAAS7H,SAAUA,EAAU8H,OAAQA,EAAQC,YAAaA,O,aCtBjD,SAASoB,GAAT,GAAkC,IAAjBC,EAAgB,EAAhBA,aAC9B,EAAwCjJ,oBAAS,GAAjD,mBAAOkJ,EAAP,KAAqBC,EAArB,KACA,EAAoCnJ,oBAAS,GAA7C,mBAAOoJ,EAAP,KAAmBC,EAAnB,KACA,EAAoCrJ,oBAAS,GAA7C,mBAAOsJ,EAAP,KAAmBC,EAAnB,KAH8C,4CAK9C,kCAAApO,EAAA,yDACEoO,GAAc,kBAAM,KAChBlM,EAAWY,EAAY,YACvBX,EAAWW,EAAY,cAEbZ,EAASI,OAAS,GAAKH,EAASG,OAAS,GALzD,iCAQ4BL,EAAMC,EAAUC,GAR5C,QAQQkM,EARR,SAUMD,GAAc,kBAAM,KACpBlL,EAAY,UAAW,WACnB+K,KACEK,EAAS,IAAIjN,MACVkN,QAAQD,EAAOrE,UAAY,GAClClH,SAASa,OAAT,gBAA2ByK,EAA3B,qBAAmDC,EAAnD,mBAEFR,MAEA5K,EAAY,oBAAqB,SACjCkL,GAAc,kBAAM,MApB1B,wBAuBIlL,EAAY,yBAA0B,QACtCkL,GAAc,kBAAM,KAxBxB,6CAL8C,sBAiC9C,OACE,qBAAKtO,GAAG,QAAR,SACE,sBAAKyE,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,yBACA,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,sBACA,uBAAOzE,GAAG,WAAW4I,KAAK,OAAOnE,UAAU,sBAC3C,oBAAIA,UAAU,QAAd,sBACA,uBACEzE,GAAG,WACHyE,UAAU,oBACVmE,KAAMqF,EAAe,OAAS,aAGhC,sBAAKxJ,UAAU,WAAf,UACE,wBAAQA,UAAU,QAAlB,2BACA,uBACEA,UAAU,QACVmE,KAAK,WACL4B,SAAU,SAAC5I,GACTsM,GAAgB,kBAAMtM,EAAM6I,OAAOC,iBAKzC,sBAAKjG,UAAU,WAAf,UACE,wBAAQA,UAAU,QAAlB,yBACA,uBACEA,UAAU,QACVmE,KAAK,WACL4B,SAAU,SAAC5I,GAAD,OAAWwM,GAAc,kBAAMxM,EAAM6I,OAAOC,iBAI1D,qBAAKjG,UAAU,eAAeyD,QAAS,kBAnED,0CAmEOwG,IAA7C,SACGL,EACC,6BACE,cAAC7J,EAAD,MAGF,iD,aCnEdmK,aAAc,CACZC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGV,IAAMpO,GAAYqO,cACZ9O,GAAU+O,eAER,SAASC,KACtB,MAAgCtK,mBAAS,IAAzC,mBAAOH,EAAP,KAAiB0K,EAAjB,KACA,EAA0CvK,mBACxCtB,EAAU,SAASjB,OAAS,GAD9B,mBAAO+M,EAAP,KAAsBC,EAAtB,KAKM9C,EAAS,SAAC+C,GAAD,OAAUH,GAAY,kBAAMG,MAE3C,OAAOF,EACL,sBAAKvP,GAAG,MAAR,UACE,cAAC2N,GAAD,CAAQ/I,SAAUA,EAAU8H,OAAQA,IACpC,iCACE,cAACD,GAAD,CAAS7H,SAAUA,EAAU8H,OAAQA,IACrC,cAACzB,EAAD,CAASrG,SAAUA,UAIvB,cAACmJ,GAAD,CAAOC,aAZK,kBAAMwB,GAAiB,kBAAM,QC/B7C,IAYeE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7I,MAAK,YAAkD,IAA/C8I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnN,SAASC,eAAe,SAM1BwM,O","file":"static/js/main.f43c41ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","import {\n  collection,\n  doc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { firestore, storage } from \"../App\";\n\nexport async function getFile(id, directory) {\n  return await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n}\n\nexport async function uploadCert(id, file, directory) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.pdf`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value) {\n  let success;\n  try {\n    await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  hasCertificate,\n  uploadCert,\n} from \"../../api/FirebaseHelper\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\nimport { useEffect, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [hasCert, setHasCert] = useState(false);\n\n  useEffect(() => {\n    async function checkCert() {\n      let res = await hasCertificate(\n        record.id,\n        selected + (isArchive ? \"_archive\" : \"\")\n      );\n      setHasCert(() => res);\n    }\n    checkCert();\n  }, [record.id, isArchive, selected]);\n\n  // useEffect(() => {\n  //   console.log(record.id);\n  // }, []);\n  async function submit(values) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file) {\n    setUploading(() => true);\n    await uploadCert(record.id, file, selected + (isArchive ? \"_archive\" : \"\"));\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(selected, `${selected}_archive`, record.id, record)\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    try {\n      key = key.charAt(0).toUpperCase() + key.slice(1);\n      key = key.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    } catch {}\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\" pattern=\"[+]{1}[0-9]{11,14}\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"address\").value = record.address;\n        getById(\"phone\").value = record.phone;\n      },\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \" \";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullname === record.name &&\n          address === record.address &&\n          phone === record.phone;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title && content === record.content;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadDialog() {\n    Swal.fire({\n      title: \"Upload Certificate\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value.type === \"application/pdf\";\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose a pdf file\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value);\n      }\n    });\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"record-datas\">\n        {Object.keys(record)\n          .sort((a, b) => a > b)\n          .map((key) => {\n            if (key !== \"id\" && key !== \"dateDocumentAdded\")\n              return recordDetail(key, record[key]);\n            else return null;\n          })}\n      </div>\n      <span>\n        <div className=\"icons-container\">\n          {selected !== \"post\" && selected !== \"donation\" ? (\n            <div className=\"icon-container\">\n              {hasCert ? (\n                <img\n                  src={print}\n                  title=\"print\"\n                  alt=\"\"\n                  className=\"icon\"\n                  onClick={async () => {\n                    let file = await getFile(\n                      record.id,\n                      selected + (isArchive ? \"_archive\" : \"\")\n                    );\n                    window.open(file);\n                  }}\n                />\n              ) : (\n                \"\"\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n          {selected !== \"post\" &&\n          selected !== \"donation\" &&\n          selected !== \"requests\" ? (\n            <div className=\"icon-container\">\n              {uploading ? (\n                <MiniLoader />\n              ) : (\n                <img\n                  src={upload}\n                  title=\"upload\"\n                  alt=\"upload\"\n                  className=\"icon\"\n                  onClick={async () => {\n                    uploadDialog();\n                  }}\n                />\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n          {selected !== \"requests\" && selected !== \"donation\" ? (\n            <div className=\"icon-container\">\n              {updating ? (\n                <MiniLoader />\n              ) : (\n                <img\n                  src={edit}\n                  title=\"edit\"\n                  alt=\"\"\n                  className=\"icon\"\n                  onClick={() => {\n                    switch (selected) {\n                      case \"marriage\":\n                        marriageDialog();\n                        break;\n                      case \"death\":\n                        deathDialog();\n                        break;\n                      case \"donation\":\n                        donationDialog();\n                        break;\n                      case \"post\":\n                        postDialog();\n                        break;\n                      default:\n                        marriageDialog();\n                    }\n                  }}\n                />\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n          {selected !== \"post\" && selected !== \"donation\" && !isArchive ? (\n            <div className=\"icon-container\">\n              {archiving ? (\n                <MiniLoader />\n              ) : (\n                <img\n                  src={archive}\n                  title=\"archive\"\n                  alt=\"archive\"\n                  className=\"icon\"\n                  onClick={() =>\n                    Swal.fire({\n                      title: \"Are you sure you want to archive this record?\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonText: \"archive\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        confirmArchive();\n                      }\n                    })\n                  }\n                />\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </span>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggleArchive }) {\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        onChange={(value) => {\n          toggleArchive(value.target.checked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  isArchive,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function postDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n\n        let noempty = title.length > 0 && content.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let now = new Date();\n        submit({\n          title: inputGetter(\"title\"),\n          date: `${now.getFullYear()}-${now\n            .getMonth()\n            .toString()\n            .padStart(2, 0)}-${now.getDate()}`,\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"post\" ? (\n        <span className=\"search-bar\">\n          <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"post\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggleArchive={toggleArchive} />\n          <h4>Toggle Archive</h4>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"donation\" && selected !== \"requests\" ? (\n        <span\n          className=\"action-button add-record\"\n          title=\"Add\"\n          onClick={() => {\n            switch (selected) {\n              case \"marriage\":\n                marriageDialog();\n                break;\n              case \"death\":\n                deathDialog();\n                break;\n              case \"donation\":\n                donationDialog();\n                break;\n              case \"post\":\n                postDialog();\n                break;\n              default:\n                marriageDialog();\n            }\n          }}\n        >\n          {addingRecord ? (\n            <MiniLoader />\n          ) : (\n            <img src={add} alt=\"add\" className=\"icon\" />\n          )}\n          <h4>Add </h4>\n        </span>\n      ) : (\n        <span></span>\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCollection } from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { toDateTime } from \"../../helpers\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"post\") {\n        setIsArchive(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort(\n      (a, b) =>\n        toDateTime(a.dateDocumentAdded.seconds) <\n        toDateTime(b.dateDocumentAdded.seconds)\n    );\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.wifeName || record.husbandName || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n        toggleArchive={toggleArchive}\n        isArchive={isArchive}\n      />\n      {selected === \"\" ? (\n        <h3 className=\"content-message\">Nothing Selected</h3>\n      ) : fetchingCollection ? (\n        <Loader />\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","export default function SidebarItem({ imagesrc, label, isSelected }) {\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"post\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Post\"\n          imagesrc={post}\n          isSelected={selected === \"post\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}