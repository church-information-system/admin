{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","assets/upload.svg","assets/confirm.svg","assets/email.svg","api/FirebaseHelper.js","helpers.js","components/misc/loader.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/password.svg","assets/logout.svg","assets/post.svg","assets/records.svg","assets/request.svg","assets/church.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["getFile","id","directory","type","a","getDownloadURL","ref","storage","uploadFile","file","uploadBytes","hasCertificate","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","notificationCounter","countCallback","onSnapshot","query","where","recordCounter","addRecord","record","Date","addDoc","success","editRecord","docId","value","override","setDoc","updateDoc","deleteRecord","deleteDoc","archiveRecord","currentCollectionName","targetCollectionName","undefined","referrence","login","username","password","admins","i","length","changePassword","oldPassword","newPassword","loggedIn","find","o","message","inputGetter","document","getElementById","getById","customAlert","icon","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","toDateTime","secs","t","setSeconds","formatTime","timeStr","hours","mins","isTwelve","parseInt","isPM","attributeSorter","selected","obj","sortingArray","Object","keys","sort","b","MiniLoader","className","Loader","ContentItem","requestRefresh","isArchive","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","confirmingDonation","setConfirmingDonation","hasCert","setHasCert","image","setImage","showEdit","includes","showAchive","showPrint","showUpload","showConfirmDonation","showEmailRequest","form","useRef","submit","values","submitFile","scheduleDialog","html","showCancelButton","didOpen","onclick","timeInput","createElement","classList","add","appendChild","lastChild","remove","day","timeKeys","filter","key","time12h","time","modifier","minutes","convertTime12to24","preConfirm","noempty","querySelectorAll","element","innerHTML","then","isConfirmed","newRecord","useEffect","res","imgSrc","checkCert","toLowerCase","getImage","sendEmail","emailJS","sendForm","current","setVerified","error","console","log","text","verified","map","showProperty","toUpperCase","slice","match","join","recordDetail","ActionButton","isShown","isLoading","email","onClick","window","open","emailAddress","requestedDocument","print","firstName","confirm","upload","input","confirmButtonText","showLoaderOnConfirm","backdrop","allowOutsideClick","isValid","result","edit","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","marriageDate","replace","ageValid","nothingChanged","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","address","phone","fullname","phoneValid","content","date","archive","confirmArchive","src","alt","ToggleSwitch","toggleArchive","onChange","target","checked","ActionBar","search","show","addingRecord","setAddingRecord","marriageDialog","removeChild","Content","records","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","recordCounts","setRecordCounts","yearLastAdded","refreshList","fetchData","_recordCounts","index","countOfRecords","size","getMatches","arr","dateDocumentAdded","seconds","trim","createItem","getFullYear","recordCount","props","dateAdded","SidebarItem","imagesrc","label","isSelected","notifCount","setNotifCount","countRecords","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","marriage","death","donation","post","requests","church","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","getDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.98339d15.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","export default __webpack_public_path__ + \"static/media/confirm.8160dc89.svg\";","export default __webpack_public_path__ + \"static/media/email.f2182462.svg\";","import {\n  collection,\n  doc,\n  getDocs,\n  setDoc,\n  query,\n  where,\n  addDoc,\n  updateDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { firestore, storage } from \"../App\";\n\nexport async function getFile(id, directory, type) {\n  try {\n    return await getDownloadURL(ref(storage, `${directory}/${id}.${type}`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function uploadFile(id, file, directory, type) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.${type}`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function notificationCounter(collectionName, countCallback) {\n  onSnapshot(\n    query(collection(firestore, collectionName), where(\"seen\", \"!=\", true)),\n    (data) => {\n      countCallback(data);\n    }\n  );\n}\n\nexport async function recordCounter(collectionName, countCallback) {\n  onSnapshot(collection(firestore, collectionName), (data) => {\n    countCallback(data);\n  });\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value, override) {\n  let success;\n  try {\n    if (override) {\n      value[\"dateDocumentAdded\"] = new Date();\n      await setDoc(doc(collection(firestore, collectionName), docId), value);\n    } else {\n      await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    }\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  if (record.referrence === undefined) record[\"referrence\"] = record[\"id\"];\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n\nexport function formatTime(timeStr) {\n  const hours = timeStr.substring(0, 2);\n  const mins = timeStr.substring(3, 5);\n\n  const isTwelve = parseInt(hours) === 0 || parseInt(hours) === 12;\n  const isPM = parseInt(hours) >= 12;\n\n  return `${\n    isTwelve ? \"12\" : isPM ? `0${parseInt(hours) % 12}` : hours\n  }:${mins} ${isPM ? \"PM\" : \"AM\"}`;\n}\n\nexport function convertTime12to24(time12h) {\n  const [time, modifier] = time12h.split(\" \");\n\n  let [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\") {\n    hours = \"00\";\n  }\n\n  if (modifier === \"PM\") {\n    hours = parseInt(hours, 10) + 12;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function attributeSorter(selected, obj) {\n  let sortingArray = [];\n\n  switch (selected) {\n    case \"marriage\":\n      sortingArray = [\n        \"wifeName\",\n        \"wifeAge\",\n        \"wifeBirthday\",\n        \"wifeReligion\",\n        \"wifePlaceOfBirth\",\n        \"husbandName\",\n        \"husbandAge\",\n        \"husbandBirthday\",\n        \"husbandReligion\",\n        \"husbandPlaceOfBirth\",\n        \"marriageDate\",\n      ];\n      break;\n    case \"death\":\n      sortingArray = [\"name\", \"dayOfBirth\", \"dayOfDeath\", \"dateOfMass\", \"age\"];\n      break;\n    case \"requests\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"address\",\n        \"requestedDocument\",\n        \"requestMethod\",\n        \"wifeName\",\n        \"husbandName\",\n        \"fullname\",\n      ];\n      break;\n    case \"donation\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"gender\",\n        \"address\",\n        \"city\",\n        \"country\",\n        \"phoneNumber\",\n        \"amount\",\n        \"gcashNumber\",\n        \"email\",\n      ];\n      break;\n\n    default:\n      return Object.keys(obj).sort((a, b) => {\n        if (a.length !== b.length) {\n          return a.length - b.length;\n        } else {\n          return a > b;\n        }\n      });\n  }\n\n  return Object.keys(obj).sort(\n    (a, b) => sortingArray.indexOf(a) - sortingArray.indexOf(b)\n  );\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport confirm from \"../../assets/confirm.svg\";\nimport email from \"../../assets/email.svg\";\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  hasCertificate,\n  uploadFile,\n} from \"../../api/FirebaseHelper\";\nimport {\n  attributeSorter,\n  convertTime12to24,\n  customAlert,\n  formatTime,\n  getById,\n  inputGetter,\n} from \"../../helpers\";\nimport emailJS from \"emailjs-com\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [confirmingDonation, setConfirmingDonation] = useState(false);\n\n  const [hasCert, setHasCert] = useState(false);\n  const [image, setImage] = useState(false);\n\n  let showEdit = ![\"requests\", \"donation\", \"\"].includes(selected);\n  let showAchive = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showPrint = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showUpload = ![\"schedule\", \"donation\", \"requests\", \"\"].includes(selected);\n  let showConfirmDonation = selected === \"donation\";\n  let showEmailRequest = selected === \"requests\";\n\n  const showProperty = (key) =>\n    ![\"id\", \"dateDocumentAdded\", \"seen\", \"referrence\", \"verified\"].includes(\n      key\n    );\n\n  const form = useRef();\n\n  useEffect(() => {\n    async function checkCert() {\n      let res = await hasCertificate(\n        record.referrence !== undefined ? record.referrence : record.id,\n        selected\n      );\n      setHasCert(() => res);\n    }\n    checkCert();\n\n    function markSeen() {\n      record[\"seen\"] = true;\n      editRecord(selected, record.id, record);\n    }\n\n    if (\n      [\"requests\", \"donation\"].includes(selected.toLowerCase()) &&\n      record[\"seen\"] !== true\n    ) {\n      markSeen();\n    }\n\n    async function getImage() {\n      let imgSrc = await getFile(record.id, \"events\", \"jpg\");\n      setImage(() => imgSrc);\n    }\n\n    if (selected === \"events\") {\n      getImage();\n    }\n  }, [record.id, isArchive, selected, record]);\n\n  async function submit(values, override = false) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values,\n        override\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file, type) {\n    setUploading(() => true);\n    await uploadFile(\n      record.referrence !== undefined ? record.referrence : record.id,\n      file,\n      selected,\n      type\n    );\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(\n        isArchive ? `${selected}_archive` : selected,\n        isArchive ? selected : `${selected}_archive`,\n        record.id,\n        record\n      )\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    try {\n      key = key.charAt(0).toUpperCase() + key.slice(1);\n      key = key.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    } catch {}\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n        getById(\"marriageDate\").value = record.marriageDate;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion &&\n          marriageDate === record.marriageDate;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\" pattern=\"[+]{1}[0-9]{11,14}\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"address\").value = record.address;\n        getById(\"phone\").value = record.phone;\n      },\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \" \";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullname === record.name &&\n          address === record.address &&\n          phone === record.phone;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n        getById(\"date\").value = record.date;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title &&\n          content === record.content &&\n          date === record.date;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadDialog() {\n    Swal.fire({\n      title: \"Upload Certificate\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type === \"application/pdf\";\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose a pdf file\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"pdf\");\n      }\n    });\n  }\n\n  function uploadImage() {\n    Swal.fire({\n      title: \"Upload Image\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type.includes(\"image\");\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose an image\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"jpg\");\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Edit the Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () => {\n          let toRemove = getById(\"times\").lastChild;\n          toRemove.remove();\n        };\n\n        getById(\"day\").value = record.day;\n\n        let timeKeys = Object.keys(record).filter((key) =>\n          key.includes(\"time\")\n        );\n        timeKeys.sort((a, b) => {\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          } else {\n            return a > b;\n          }\n        });\n\n        timeKeys.forEach((key) => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          timeInput.value = convertTime12to24(record[key]);\n          getById(\"times\").appendChild(timeInput);\n        });\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newRecord = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          newRecord[`time${Object.keys(newRecord).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(newRecord, true);\n      }\n    });\n  }\n\n  const sendEmail = () => {\n    emailJS\n      .sendForm(\n        \"service_iredyvh\",\n        \"template_cf0wjy5\",\n        form.current,\n        \"user_NRZC9vjUaHFQ7n72dO765\"\n      )\n      .then(\n        () => {\n          customAlert(\"Email has been sent\", \"success\");\n          setVerified();\n          setConfirmingDonation(false);\n        },\n        (error) => {\n          console.log(error.text);\n          customAlert(\"Something went wrong\", \"error\");\n          setConfirmingDonation(false);\n        }\n      );\n\n    emailJS.sendForm(\n      \"service_iredyvh\",\n      \"template_tpwuinn\",\n      form.current,\n      \"user_NRZC9vjUaHFQ7n72dO765\"\n    );\n  };\n\n  async function setVerified() {\n    record.verified = true;\n    console.log(await editRecord(\"donation\", record.id, record));\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"content-details\">\n        <div className=\"record-datas\">\n          {attributeSorter(selected, record).map((key) => {\n            if (showProperty(key)) return recordDetail(key, record[key]);\n            else return null;\n          })}\n        </div>\n        <span>\n          <div className=\"icons-container\">\n            <ActionButton\n              isShown={showEmailRequest}\n              isLoading={false}\n              icon={email}\n              title=\"email\"\n              onClick={async () => {\n                window.open(\n                  `mailto:${record.emailAddress}?subject=Document Has been Picked up&body=The ${record.requestedDocument} you requested has been released`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showPrint && hasCert}\n              isLoading={false}\n              title={print}\n              icon={print}\n              onClick={async () => {\n                let file = await getFile(\n                  record.referrence !== undefined\n                    ? record.referrence\n                    : record.id,\n                  selected,\n                  \"pdf\"\n                );\n                window.open(file);\n              }}\n            />\n            <form ref={form} className=\"no-display\">\n              <input type=\"email\" name=\"user_email\" value={record.email} />\n              <input type=\"text\" name=\"donor\" value={record.firstName} />\n            </form>\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={confirmingDonation}\n              icon={confirm}\n              title=\"confirm\"\n              onClick={async () => {\n                setConfirmingDonation(() => true);\n                sendEmail();\n              }}\n            />\n            <ActionButton\n              isShown={showUpload}\n              isLoading={uploading}\n              icon={upload}\n              title=\"upload\"\n              onClick={async () => {\n                if (selected === \"events\") {\n                  uploadImage();\n                } else {\n                  uploadDialog();\n                }\n              }}\n            />\n\n            <ActionButton\n              isShown={showEdit}\n              isLoading={updating}\n              icon={edit}\n              title=\"edit\"\n              onClick={() => {\n                switch (selected) {\n                  case \"marriage\":\n                    marriageDialog();\n                    break;\n                  case \"death\":\n                    deathDialog();\n                    break;\n                  case \"donation\":\n                    donationDialog();\n                    break;\n                  case \"events\":\n                    eventDialog();\n                    break;\n                  case \"schedule\":\n                    scheduleDialog();\n                    break;\n                  default:\n                }\n              }}\n            />\n            <ActionButton\n              isShown={showAchive}\n              isLoading={archiving}\n              icon={archive}\n              title=\"archive\"\n              onClick={() =>\n                Swal.fire({\n                  title: `Are you sure you want to ${\n                    isArchive ? \"un-archive\" : \"archive\"\n                  } this record?`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonText: isArchive ? \"un-archive\" : \"archive\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    confirmArchive();\n                  }\n                })\n              }\n            />\n          </div>\n        </span>\n      </div>\n      {selected === \"events\" && image !== null ? (\n        <img src={image} alt=\"\" className=\"event-image\" />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nfunction ActionButton({ isShown, isLoading, icon, onClick, title }) {\n  return isShown ? (\n    <div className=\"icon-container\">\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img\n          src={icon}\n          title={title}\n          alt={title}\n          className=\"icon\"\n          onClick={() => onClick()}\n        />\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggleArchive }) {\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        onChange={(value) => {\n          toggleArchive(value.target.checked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, formatTime, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  isArchive,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Create a Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        <input class=\"swal2-input\" type=\"time\">\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () =>\n          getById(\"times\").removeChild(getById(\"times\").lastChild);\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let record = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          record[`time${Object.keys(record).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(record);\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"events\" ? (\n        <span className=\"search-bar\">\n          <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"events\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggleArchive={toggleArchive} />\n          <h4>Toggle Archive</h4>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"donation\" && selected !== \"requests\" ? (\n        <span\n          className=\"action-button add-record\"\n          title=\"Add\"\n          onClick={() => {\n            switch (selected) {\n              case \"marriage\":\n                marriageDialog();\n                break;\n              case \"death\":\n                deathDialog();\n                break;\n              case \"donation\":\n                donationDialog();\n                break;\n              case \"events\":\n                eventDialog();\n                break;\n              case \"schedule\":\n                scheduleDialog();\n                break;\n              default:\n                marriageDialog();\n            }\n          }}\n        >\n          {addingRecord ? (\n            <MiniLoader />\n          ) : (\n            <img src={add} alt=\"add\" className=\"icon\" />\n          )}\n          <h4>Add </h4>\n        </span>\n      ) : (\n        <span></span>\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCollection, recordCounter } from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { toDateTime } from \"../../helpers\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n  const [recordCounts, setRecordCounts] = useState([]);\n\n  let yearLastAdded = \"\";\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"events\") {\n        setIsArchive(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    } else {\n      setFetchingCollection(() => true);\n      let records = [\n        \"marriage\",\n        \"death\",\n        \"donation\",\n        \"events\",\n        \"requests\",\n        \"schedule\",\n      ];\n\n      let _recordCounts = [];\n      records.forEach(async (record, index) => {\n        await recordCounter(record, (data) => {\n          _recordCounts.push({\n            name: record,\n            countOfRecords: data.size,\n          });\n          if (index === records.length - 1) {\n            setRecordCounts(() => _recordCounts);\n            setFetchingCollection(() => false);\n          }\n        });\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort(\n      (a, b) =>\n        toDateTime(a.dateDocumentAdded.seconds) <\n        toDateTime(b.dateDocumentAdded.seconds)\n    );\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.wifeName || record.husbandName || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    if (isArchive) {\n      return (\n        <ContentItem\n          record={record}\n          key={record.id}\n          selected={selected}\n          requestRefresh={refreshList}\n          isArchive={isArchive}\n        >\n          <div className=\"content-message\">\n            {toDateTime(record.dateDocumentAdded.seconds).getFullYear()}\n          </div>\n        </ContentItem>\n      );\n    }\n    return (\n      <ContentItem\n        record={record}\n        key={record.id}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n        toggleArchive={toggleArchive}\n        isArchive={isArchive}\n      />\n      {fetchingCollection ? (\n        <Loader />\n      ) : selected === \"\" ? (\n        <div className=\"content-container\">\n          {recordCounts.map((recordCount) => {\n            recordCount.id = recordCount.name;\n            return createItem(recordCount);\n          })}\n        </div>\n      ) : isArchive ? (\n        getMatches().map((record) => {\n          console.log(record.props.record.dateDocumentAdded);\n          let dateAdded = toDateTime(\n            record.props.record.dateDocumentAdded.seconds\n          ).getFullYear();\n          if (yearLastAdded !== dateAdded) {\n            yearLastAdded = dateAdded;\n            return (\n              <div>\n                <h3 className=\"content-message\">\n                  Records From year {yearLastAdded}\n                </h3>\n                <div className=\"content-container\">{record}</div>\n              </div>\n            );\n          } else {\n            return <div className=\"content-container\">{record}</div>;\n          }\n        })\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","import { useEffect, useState } from \"react\";\nimport { notificationCounter } from \"../../api/FirebaseHelper\";\n\nexport default function SidebarItem({ imagesrc, label, isSelected }) {\n  const [notifCount, setNotifCount] = useState(0);\n\n  useEffect(() => {\n    async function countRecords() {\n      notificationCounter(label.toLowerCase(), function (data) {\n        setNotifCount(() => data.size);\n      });\n    }\n\n    if ([\"requests\", \"donation\"].includes(label.toLowerCase())) {\n      countRecords();\n    }\n  }, [label]);\n\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      {notifCount > 0 ? <span className=\"badge\">{notifCount}</span> : \"\"}\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","export default __webpack_public_path__ + \"static/media/church.ab21ef53.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"events\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Events\"\n          imagesrc={post}\n          isSelected={selected === \"events\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"schedule\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Mass Schedule\"\n          imagesrc={church}\n          isSelected={selected === \"schedule\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  //comment\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}