{"version":3,"sources":["assets/loading.gif","assets/backup.svg","assets/upload.svg","assets/print.svg","assets/edit.svg","assets/archive.svg","assets/confirm.svg","assets/email.svg","helpers.js","api/FirebaseHelper.js","components/misc/loader.jsx","components/misc/content-table/content-table.jsx","components/misc/checkbox/checkbox.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/post.svg","assets/records.svg","assets/request.svg","assets/church.svg","components/content/count-content.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/password.svg","assets/logout.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["inputGetter","id","document","getElementById","value","getById","customAlert","message","icon","a","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","toDateTime","secs","t","Date","setSeconds","formatTime","timeStr","hours","mins","isTwelve","parseInt","isPM","attributeSorter","selected","obj","sortingArray","Object","keys","sort","b","convertCamelCase","word","toUpperCase","slice","match","join","showArchive","includes","getFile","directory","type","getDownloadURL","ref","storage","uploadFile","file","uploadBytes","hasCertificate","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","notificationCounter","countCallback","onSnapshot","query","where","recordCounter","addRecord","record","addDoc","success","editRecord","docId","override","setDoc","updateDoc","deleteRecord","deleteDoc","currentCollectionName","targetCollectionName","records","isArchive","onFinished","html","loading","allowOutsideClick","showConfirmButton","index","archiveRecord","undefined","referrence","login","username","password","admins","changePassword","oldPassword","newPassword","loggedIn","find","o","backupOrRestore","isBackup","fetch","credentials","method","headers","Accept","then","response","json","catch","MiniLoader","className","Loader","ContentTable","columns","Table","onClick","event","stopPropagation","map","key","CheckBox","onChange","isChecked","e","target","checked","ContentItem","requestRefresh","isSelect","addToSelected","removeFromSelected","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","confirmingDonation","setConfirmingDonation","setIsChecked","hasCert","setHasCert","image","setImage","showOthers","setShowOthers","dontShow","showEdit","showPrint","showUpload","showConfirmDonation","showEmailRequest","showTable","submit","values","submitFile","scheduleDialog","showCancelButton","didOpen","onclick","timeInput","createElement","classList","add","appendChild","lastChild","remove","day","timeKeys","filter","time12h","time","modifier","minutes","convertTime12to24","preConfirm","noempty","querySelectorAll","element","innerHTML","isConfirmed","newRecord","useEffect","res","imgSrc","checkCert","toLowerCase","getImage","current","showProperty","recordDetail","ActionButton","isShown","isLoading","email","window","open","emailAddress","requestedDocument","print","verified","amount","confirm","confirmButtonColor","upload","input","confirmButtonText","showLoaderOnConfirm","backdrop","isValid","result","edit","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","marriageDate","replace","ageValid","nothingChanged","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","fullName","content","date","archive","confirmArchive","toString","src","alt","ToggleSwitch","toggle","label","ActionBar","search","show","toggleArchive","toggleSelectMode","archiveSelected","addingRecord","setAddingRecord","marriageDialog","fullname","address","phone","phoneValid","removeChild","CountContent","count","death","marriage","donation","post","requests","church","iconSwitch","Content","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","setIsSelect","recordCounts","setRecordCounts","selectedRecords","splice","findIndex","yearLastAdded","refreshList","fetchData","_recordCounts","countOfRecords","size","getMatches","arr","dateDocumentAdded","seconds","_seconds","JSON","stringify","trim","createItem","backup","archiveMultipleRecords","recordCount","dateAdded","props","getFullYear","SidebarItem","imagesrc","isSelected","notifCount","setNotifCount","countRecords","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","getDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2791faa1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","export default __webpack_public_path__ + \"static/media/backup.607152e5.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/confirm.8160dc89.svg\";","export default __webpack_public_path__ + \"static/media/email.f2182462.svg\";","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n\nexport function formatTime(timeStr) {\n  const hours = timeStr.substring(0, 2);\n  const mins = timeStr.substring(3, 5);\n\n  const isTwelve = parseInt(hours) === 0 || parseInt(hours) === 12;\n  const isPM = parseInt(hours) >= 12;\n\n  return `${\n    isTwelve ? \"12\" : isPM ? `0${parseInt(hours) % 12}` : hours\n  }:${mins} ${isPM ? \"PM\" : \"AM\"}`;\n}\n\nexport function convertTime12to24(time12h) {\n  const [time, modifier] = time12h.split(\" \");\n\n  let [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\") {\n    hours = \"00\";\n  }\n\n  if (modifier === \"PM\") {\n    hours = parseInt(hours, 10) + 12;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function attributeSorter(selected, obj) {\n  let sortingArray = [];\n\n  switch (selected) {\n    case \"marriage\":\n      sortingArray = [\n        \"wifeName\",\n        \"wifeAge\",\n        \"wifeBirthday\",\n        \"wifeReligion\",\n        \"wifePlaceOfBirth\",\n        \"husbandName\",\n        \"husbandAge\",\n        \"husbandBirthday\",\n        \"husbandReligion\",\n        \"husbandPlaceOfBirth\",\n        \"marriageDate\",\n      ];\n      break;\n    case \"death\":\n      sortingArray = [\"name\", \"dayOfBirth\", \"dayOfDeath\", \"dateOfMass\", \"age\"];\n      break;\n    case \"requests\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"address\",\n        \"requestedDocument\",\n        \"requestMethod\",\n        \"wifeName\",\n        \"husbandName\",\n        \"fullname\",\n      ];\n      break;\n    case \"donation\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"gender\",\n        \"address\",\n        \"city\",\n        \"country\",\n        \"phoneNumber\",\n        \"amount\",\n        \"gcashNumber\",\n        \"email\",\n      ];\n      break;\n\n    default:\n      return Object.keys(obj).sort((a, b) => {\n        if (a.length !== b.length) {\n          return a.length - b.length;\n        } else {\n          return a > b;\n        }\n      });\n  }\n\n  return Object.keys(obj).sort(\n    (a, b) => sortingArray.indexOf(a) - sortingArray.indexOf(b)\n  );\n}\n\nexport function chunkArray(inputArray) {\n  let perChunk = 5;\n\n  let result = inputArray.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / perChunk);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n\n  return result;\n}\n\nexport function convertCamelCase(word) {\n  try {\n    word = word.charAt(0).toUpperCase() + word.slice(1);\n    word = word.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    return word;\n  } catch {\n    return word;\n  }\n}\n\nexport const showArchive = (selected) =>\n  ![\"events\", \"donation\", \"\"].includes(selected);\n","import {\n  collection,\n  doc,\n  getDocs,\n  setDoc,\n  query,\n  where,\n  addDoc,\n  updateDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport Swal from \"sweetalert2\";\nimport { firestore, storage } from \"../App\";\nimport { customAlert } from \"../helpers\";\n\nimport loading from \"../assets/loading.gif\";\n\nexport async function getFile(id, directory, type) {\n  try {\n    return await getDownloadURL(ref(storage, `${directory}/${id}.${type}`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function uploadFile(id, file, directory, type) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.${type}`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function notificationCounter(collectionName, countCallback) {\n  onSnapshot(\n    query(collection(firestore, collectionName), where(\"seen\", \"!=\", true)),\n    (data) => {\n      countCallback(data);\n    }\n  );\n}\n\nexport async function recordCounter(collectionName, countCallback) {\n  onSnapshot(collection(firestore, collectionName), (data) => {\n    countCallback(data);\n  });\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value, override) {\n  let success;\n  try {\n    if (override) {\n      value[\"dateDocumentAdded\"] = new Date();\n      await setDoc(doc(collection(firestore, collectionName), docId), value);\n    } else {\n      await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    }\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveMultipleRecords(\n  currentCollectionName,\n  targetCollectionName,\n  records,\n  isArchive,\n  onFinished\n) {\n  if (records.length > 0) {\n    Swal.fire({\n      title: `${\n        isArchive ? \"Un-Archiving\" : \"Archiving\"\n      } multiple records Please wait`,\n      html: `<img src=\"${loading}\"/>`,\n      allowOutsideClick: false,\n      showConfirmButton: false,\n    });\n    records.forEach(async (record, index) => {\n      await archiveRecord(\n        currentCollectionName,\n        targetCollectionName,\n        record.id,\n        record\n      );\n      if (index === records.length - 1) {\n        customAlert(\n          `Done ${isArchive ? \"Un-Archiving\" : \"Archiving\"}`,\n          \"success\"\n        );\n        onFinished();\n      }\n    });\n  } else {\n    customAlert(\"Nothing selected\", \"info\");\n  }\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  if (record.referrence === undefined) record[\"referrence\"] = record[\"id\"];\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n\n// not related to firebase but at this point I'm too tilted to even care\n\nexport function backupOrRestore(isBackup) {\n  fetch(`http://localhost:8080/${isBackup ? \"backupAll\" : \"restoreAll\"}`, {\n    credentials: \"same-origin\",\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.success) {\n        customAlert(\n          `Data ${isBackup ? \"Backed up\" : \"Restored\"} successfully`,\n          \"success\"\n        );\n      } else {\n        customAlert(\n          `Failed to ${\n            isBackup ? \"Back up\" : \"Restore\"\n          } Data , check your internet connection and make sure you are running the data backup server in port 8080`,\n          \"error\"\n        );\n      }\n    })\n    .catch(() => {\n      customAlert(\n        `Failed to ${\n          isBackup ? \"Back up\" : \"Restore\"\n        } Data , check your internet connection and make sure you are running the data backup server in port 8080`,\n        \"error\"\n      );\n    });\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import { convertCamelCase } from \"../../../helpers\";\nimport \"./content-table.scss\";\n\nexport default function ContentTable({ columns, data }) {\n  return (\n    <div className=\"table-container\">\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nfunction Table({ columns, data }) {\n  return (\n    <table onClick={(event) => event.stopPropagation()}>\n      <thead>\n        <tr>\n          {columns.map((key, index) => (\n            <th key={key + index}>{convertCamelCase(key)}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {columns.map((key, index) => (\n            <td key={data[key] + index}>{data[key]}</td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import \"./checkbox.scss\";\n\nexport default function CheckBox({ onChange, isChecked }) {\n  return (\n    <div className=\"checkbox-container\">\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        value={isChecked}\n        onChange={(e) => {\n          e.stopPropagation();\n          onChange(e.target.checked);\n        }}\n        onClick={(e) => e.stopPropagation()}\n      />\n    </div>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport confirm from \"../../assets/confirm.svg\";\nimport email from \"../../assets/email.svg\";\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  hasCertificate,\n  uploadFile,\n} from \"../../api/FirebaseHelper\";\nimport {\n  attributeSorter,\n  convertCamelCase,\n  convertTime12to24,\n  customAlert,\n  formatTime,\n  getById,\n  inputGetter,\n} from \"../../helpers\";\nimport { useEffect, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport ContentTable from \"../misc/content-table/content-table\";\nimport CheckBox from \"../misc/checkbox/checkbox\";\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n  isSelect,\n  addToSelected,\n  removeFromSelected,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [confirmingDonation, setConfirmingDonation] = useState(false);\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const [hasCert, setHasCert] = useState(false);\n  const [image, setImage] = useState(\"\");\n\n  const [showOthers, setShowOthers] = useState(false);\n\n  let dontShow = [\"id\", \"dateDocumentAdded\", \"seen\", \"referrence\", \"verified\"];\n\n  let showEdit = ![\"requests\", \"\"].includes(selected);\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showPrint = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showUpload = ![\"schedule\", \"donation\", \"requests\", \"\"].includes(selected);\n  let showConfirmDonation = selected === \"donation\";\n  let showEmailRequest = selected === \"requests\";\n\n  let showTable = ![\"events\", \"schedule\", \"\"].includes(selected);\n\n  const showProperty = (key) => {\n    if (!showTable) return !dontShow.includes(key);\n    else\n      return (\n        key.toLowerCase().includes(\"name\") ||\n        key.toLowerCase().includes(\"gcashnumber\")\n      );\n  };\n\n  function check(value) {\n    setIsChecked(() => value);\n    if (value) {\n      addToSelected(record);\n    } else {\n      removeFromSelected(record);\n    }\n  }\n\n  useEffect(() => {\n    async function checkCert() {\n      let res = await hasCertificate(\n        record.referrence !== undefined ? record.referrence : record.id,\n        selected\n      );\n      setHasCert(() => res);\n    }\n    checkCert();\n\n    function markSeen() {\n      record[\"seen\"] = true;\n      editRecord(selected, record.id, record);\n    }\n\n    if (\n      [\"requests\", \"donation\"].includes(selected.toLowerCase()) &&\n      record[\"seen\"] !== true\n    ) {\n      markSeen();\n    }\n\n    async function getImage() {\n      let imgSrc = await getFile(record.id, \"events\", \"jpg\");\n      setImage(() => imgSrc);\n    }\n\n    if (selected === \"events\") {\n      getImage();\n    }\n  }, [record.id, isArchive, selected, record]);\n\n  async function submit(values, override = false) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values,\n        override\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file, type) {\n    setUploading(() => true);\n    await uploadFile(\n      record.referrence !== undefined ? record.referrence : record.id,\n      file,\n      selected,\n      type\n    );\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(\n        isArchive ? `${selected}_archive` : selected,\n        isArchive ? selected : `${selected}_archive`,\n        record.id,\n        record\n      )\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    key = convertCamelCase(key);\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n        getById(\"marriageDate\").value = record.marriageDate;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        // TO ADD\n        // birthPlace, address, father, mother, priest, presenceOf, residence,\n        // churchRecord{bookNo, pageNo, line}\n        // licenseNo\n        // dateIssued\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion &&\n          marriageDate === record.marriageDate;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        // TO ADD\n        // address, father, mother, spouse, cemetery, dateOfBurial, causeOfDeath, receivedSacrament\n        // churchRecord{bookNo, pageNo, line, date}\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">First Name</span>' +\n        '<input id=\"fullName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Amount</span>' +\n        '<input id=\"amount\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Verified</span>' +\n        '<input id=\"verified\" class=\"swal2-input\" type=\"checkbox\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullName\").value = record.fullName;\n        getById(\"amount\").value = record.amount;\n        getById(\"verified\").checked = record.verified;\n      },\n      preConfirm: () => {\n        let fullName = inputGetter(\"fullName\");\n        let amount = inputGetter(\"amount\");\n        let verified = getById(\"verified\").checked;\n\n        let noempty = fullName.length > 0 && amount.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullName === record.fullName &&\n          amount === record.amount &&\n          verified === record.verified;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullName = inputGetter(\"fullName\");\n        let amount = inputGetter(\"amount\");\n        let verified = getById(\"verified\").checked;\n\n        submit({\n          fullName: fullName,\n          amount: amount,\n          verified: verified,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n        getById(\"date\").value = record.date;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title &&\n          content === record.content &&\n          date === record.date;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadDialog() {\n    Swal.fire({\n      title: \"Upload Certificate\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type === \"application/pdf\";\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose a pdf file\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"pdf\");\n      }\n    });\n  }\n\n  function uploadImage() {\n    Swal.fire({\n      title: \"Upload Image\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type.includes(\"image\");\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose an image\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"jpg\");\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Edit the Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () => {\n          let toRemove = getById(\"times\").lastChild;\n          toRemove.remove();\n        };\n\n        getById(\"day\").value = record.day;\n\n        let timeKeys = Object.keys(record).filter((key) =>\n          key.includes(\"time\")\n        );\n        timeKeys.sort((a, b) => {\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          } else {\n            return a > b;\n          }\n        });\n\n        timeKeys.forEach((key) => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          timeInput.value = convertTime12to24(record[key]);\n          getById(\"times\").appendChild(timeInput);\n        });\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newRecord = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          newRecord[`time${Object.keys(newRecord).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(newRecord, true);\n      }\n    });\n  }\n\n  return (\n    <div\n      className=\"content-item\"\n      onClick={() => setShowOthers((current) => !current)}\n    >\n      <div className=\"content-details\">\n        <div className=\"record-datas\">\n          {attributeSorter(selected, record).map((key) => {\n            if (showProperty(key)) return recordDetail(key, record[key]);\n            else return null;\n          })}\n        </div>\n        <span>\n          <div className=\"icons-container\">\n            {isSelect ? (\n              <CheckBox isChecked={isChecked} onChange={check} />\n            ) : (\n              \"\"\n            )}\n            <ActionButton\n              isShown={showEmailRequest}\n              isLoading={false}\n              icon={email}\n              title=\"email\"\n              onClick={async (e) => {\n                window.open(\n                  `mailto:${record.emailAddress}?subject=${record.requestedDocument} request&body=Your request has been confirmed`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showPrint && hasCert}\n              isLoading={false}\n              title={print}\n              icon={print}\n              onClick={async () => {\n                let file = await getFile(\n                  record.referrence !== undefined\n                    ? record.referrence\n                    : record.id,\n                  selected,\n                  \"pdf\"\n                );\n                window.open(file);\n              }}\n            />\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={false}\n              icon={email}\n              title=\"send email\"\n              onClick={async () => {\n                window.open(\n                  `mailto:${record.email}?subject=Donation Confirmation&body=Your Donation of amount ${record.amount} has been confirmed, thank you for your support`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={confirmingDonation}\n              icon={confirm}\n              title=\"confirm\"\n              onClick={() => {\n                Swal.fire({\n                  icon: \"question\",\n                  title: \"Do you want to mark this donation as verified?\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"red\",\n                }).then(async (value) => {\n                  if (value.isConfirmed) {\n                    setConfirmingDonation(() => true);\n                    record.verified = true;\n                    if (await editRecord(\"donation\", record.id, record)) {\n                      customAlert(\"Donation verified!\", \"success\");\n                    }\n                    setConfirmingDonation(() => false);\n                  }\n                });\n              }}\n            />\n            <ActionButton\n              isShown={showUpload}\n              isLoading={uploading}\n              icon={upload}\n              title=\"upload\"\n              onClick={async () => {\n                if (selected === \"events\") {\n                  uploadImage();\n                } else {\n                  uploadDialog();\n                }\n              }}\n            />\n\n            <ActionButton\n              isShown={showEdit}\n              isLoading={updating}\n              icon={edit}\n              title=\"edit\"\n              onClick={(event) => {\n                switch (selected) {\n                  case \"marriage\":\n                    marriageDialog();\n                    break;\n                  case \"death\":\n                    deathDialog();\n                    break;\n                  case \"donation\":\n                    donationDialog();\n                    break;\n                  case \"events\":\n                    eventDialog();\n                    break;\n                  case \"schedule\":\n                    scheduleDialog();\n                    break;\n                  default:\n                }\n              }}\n            />\n            <ActionButton\n              isShown={showArchive}\n              isLoading={archiving}\n              icon={archive}\n              title=\"archive\"\n              onClick={() =>\n                Swal.fire({\n                  title: `Are you sure you want to ${\n                    isArchive ? \"un-archive\" : \"archive\"\n                  } this record?`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonText: isArchive ? \"un-archive\" : \"archive\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    confirmArchive();\n                  }\n                })\n              }\n            />\n          </div>\n        </span>\n      </div>\n      {showOthers && showTable ? (\n        <ContentTable\n          columns={attributeSorter(selected, record).filter(\n            (key) =>\n              ![...dontShow].includes(key) &&\n              !key.toString().toLowerCase().includes(\"name\")\n          )}\n          data={record}\n        />\n      ) : (\n        \"\"\n      )}\n      {selected === \"events\" && image !== null ? (\n        <img src={image} alt=\"\" className=\"event-image\" />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport function ActionButton({ isShown, isLoading, icon, onClick, title }) {\n  return isShown ? (\n    <div className=\"icon-container\">\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img\n          src={icon}\n          title={title}\n          alt={title}\n          className=\"icon\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClick();\n          }}\n        />\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggle, label }) {\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={(value) => {\n            toggle(value.target.checked);\n          }}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <h4>{label}</h4>\n    </div>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport archive from \"../../assets/archive.svg\";\n\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, formatTime, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  toggleSelectMode,\n  isArchive,\n  isSelect,\n  archiveSelected,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  let showArchive = ![\"events\", \"donation\", \"\"].includes(selected);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Create a Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        <input class=\"swal2-input\" type=\"time\">\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () =>\n          getById(\"times\").removeChild(getById(\"times\").lastChild);\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let record = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          record[`time${Object.keys(record).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(record);\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"events\" ? (\n        <span className=\"search-bar\">\n          <input\n            type=\"text\"\n            className=\"search-field\"\n            id=\"search-field\"\n            onChange={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"events\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggle={toggleArchive} label=\"Toggle Archive\" />\n          {showArchive ? (\n            <ToggleSwitch toggle={toggleSelectMode} label=\"Multi Select\" />\n          ) : (\n            \"\"\n          )}\n        </span>\n      ) : (\n        \"\"\n      )}\n      <div className=\"action-button-container\">\n        {showArchive && isSelect ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Archive selected\"\n            onClick={() => {\n              archiveSelected();\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={archive} alt=\"add\" className=\"icon\" />\n            )}\n            <h4> {isArchive ? \"Un-Archive\" : \"Archive\"}</h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n        {selected !== \"donation\" && selected !== \"requests\" ? (\n          <span\n            className=\"action-button add-record\"\n            title=\"Add\"\n            onClick={() => {\n              switch (selected) {\n                case \"marriage\":\n                  marriageDialog();\n                  break;\n                case \"death\":\n                  deathDialog();\n                  break;\n                case \"donation\":\n                  donationDialog();\n                  break;\n                case \"events\":\n                  eventDialog();\n                  break;\n                case \"schedule\":\n                  scheduleDialog();\n                  break;\n                default:\n                  marriageDialog();\n              }\n            }}\n          >\n            {addingRecord ? (\n              <MiniLoader />\n            ) : (\n              <img src={add} alt=\"add\" className=\"icon\" />\n            )}\n            <h4>Add </h4>\n          </span>\n        ) : (\n          <span></span>\n        )}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","export default __webpack_public_path__ + \"static/media/church.ab21ef53.svg\";","import death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\n\nexport default function CountContent({ name, count }) {\n  function iconSwitch() {\n    switch (name) {\n      case \"death\":\n        return death;\n      case \"marriage\":\n        return marriage;\n      case \"donation\":\n        return donation;\n      case \"events\":\n        return post;\n      case \"requests\":\n        return requests;\n      case \"schedule\":\n        return church;\n      default:\n        return records;\n    }\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"count-icon-container\">\n        <img src={iconSwitch()} alt={name} className=\"icon count-icon\" />\n      </div>\n      <div className=\"count-item-container\">\n        <h3> {name}</h3>\n        <h1> {count}</h1>\n      </div>\n    </div>\n  );\n}\n","import \"./content.scss\";\nimport loading from \"../../assets/loading.gif\";\n\nimport backup from \"../../assets/backup.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport {\n  archiveMultipleRecords,\n  backupOrRestore,\n  fetchCollection,\n  recordCounter,\n} from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { showArchive, toDateTime } from \"../../helpers\";\nimport CountContent from \"./count-content\";\nimport Swal from \"sweetalert2\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n  const [isSelect, setIsSelect] = useState(false);\n  const [recordCounts, setRecordCounts] = useState([]);\n\n  const selectedRecords = [];\n\n  function addToSelected(record) {\n    selectedRecords.push(record);\n  }\n\n  function removeFromSelected(record) {\n    selectedRecords.splice(\n      selectedRecords.findIndex((element) => (record.id = element.id)),\n      1\n    );\n  }\n\n  function archiveSelected() {\n    archiveMultipleRecords(\n      isArchive ? `${selected}_archive` : selected,\n      isArchive ? selected : `${selected}_archive`,\n      selectedRecords,\n      isArchive,\n      () => refreshList()\n    );\n  }\n\n  let yearLastAdded = \"\";\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n  const toggleSelectMode = (value) => setIsSelect(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"events\") {\n        setIsArchive(() => false);\n      }\n      if (!showArchive(selected)) {\n        setIsSelect(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    } else {\n      setFetchingCollection(() => true);\n      let records = [\n        \"marriage\",\n        \"death\",\n        \"donation\",\n        \"events\",\n        \"requests\",\n        \"schedule\",\n      ];\n\n      let _recordCounts = [];\n      records.forEach(async (record, index) => {\n        await recordCounter(record, (data) => {\n          _recordCounts.push({\n            name: record,\n            countOfRecords: data.size,\n          });\n          if (index === records.length - 1) {\n            setRecordCounts(() => _recordCounts);\n            setFetchingCollection(() => false);\n          }\n        });\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort((a, b) => {\n      return (\n        toDateTime(\n          b.dateDocumentAdded.seconds !== undefined\n            ? b.dateDocumentAdded.seconds\n            : b.dateDocumentAdded._seconds\n        ) -\n        toDateTime(\n          a.dateDocumentAdded.seconds !== undefined\n            ? a.dateDocumentAdded.seconds\n            : a.dateDocumentAdded._seconds\n        )\n      );\n    });\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          JSON.stringify(record)\n            // record.name +\n            // (record.wifeName !== null\n            //   ? record.wifeName + \" \" + record.husbandName\n            //   : \"\") +\n            // (record.title !== null ? record.title : \"\") +\n            // (record.nameOfDeceased !== null ? record.nameOfDeceased : \"\") +\n            // (record.fullName !== null ? record.fullName : \"\") +\n            // (record.gcashNumber !== null ? record.gcashNumber : \"\") +\n            // (record.firstName !== null\n            //   ? record.firstName + record.lastName\n            //   : \"\")\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id + isArchive}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n        isSelect={isSelect}\n        addToSelected={addToSelected}\n        removeFromSelected={removeFromSelected}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      {selected === \"backup\" ? (\n        // another DRY violation but I couldn't care less\n        <div className=\"backup-card\">\n          <div\n            className=\"backup-button\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Backing up your data don't refresh or leave the page\",\n                html: `<img src=\"${loading}\"/>`,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n              });\n              backupOrRestore(true);\n            }}\n          >\n            <span className=\"backup-label\">backup data</span>\n            <img className=\"backup-icon icon\" src={backup} alt=\"backup\" />\n          </div>\n          <div\n            className=\"backup-button\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Restoring your data don't refresh or leave the page\",\n                html: `<img src=\"${loading}\"/>`,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n              });\n              backupOrRestore(false);\n            }}\n          >\n            <span className=\"backup-label\">restore data</span>\n            <img className=\"backup-icon icon\" src={upload} alt=\"backup\" />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <ActionBar\n            search={search}\n            requestRefresh={refreshList}\n            show={selected !== \"\"}\n            selected={selected}\n            toggleArchive={toggleArchive}\n            toggleSelectMode={toggleSelectMode}\n            isArchive={isArchive}\n            isSelect={isSelect}\n            archiveSelected={archiveSelected}\n          />\n          {fetchingCollection ? (\n            <Loader />\n          ) : selected === \"\" ? (\n            <div className=\"count-container\">\n              {recordCounts.map((recordCount) => {\n                recordCount.id = recordCount.name;\n                return (\n                  <CountContent\n                    key={recordCount.name}\n                    name={recordCount.name}\n                    count={recordCount.countOfRecords}\n                  />\n                );\n              })}\n            </div>\n          ) : isArchive ? (\n            getMatches().map((record) => {\n              let dateAdded =\n                record.props.record.dateDocumentAdded.seconds !== undefined\n                  ? toDateTime(\n                      record.props.record.dateDocumentAdded.seconds\n                    ).getFullYear()\n                  : toDateTime(\n                      record.props.record.dateDocumentAdded._seconds\n                    ).getFullYear();\n\n              let id = record.props.record.id;\n              if (yearLastAdded !== dateAdded) {\n                yearLastAdded = dateAdded;\n                return (\n                  <div key={id + isArchive.toString()}>\n                    <h3 className=\"content-message\">\n                      Records From year {yearLastAdded}\n                    </h3>\n                    <div className=\"content-container\">{record}</div>\n                  </div>\n                );\n              } else {\n                return (\n                  <div\n                    key={id + isArchive.toString()}\n                    className=\"content-container\"\n                  >\n                    {record}\n                  </div>\n                );\n              }\n            })\n          ) : (\n            <div className=\"content-container\">\n              {getMatches()[0] ? (\n                getMatches()\n              ) : (\n                <h3 className=\"content-message\">No Records found</h3>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","import { useEffect, useState } from \"react\";\nimport { notificationCounter } from \"../../api/FirebaseHelper\";\n\nexport default function SidebarItem({ imagesrc, label, isSelected }) {\n  const [notifCount, setNotifCount] = useState(0);\n\n  useEffect(() => {\n    async function countRecords() {\n      notificationCounter(label.toLowerCase(), function (data) {\n        setNotifCount(() => data.size);\n      });\n    }\n\n    if ([\"requests\", \"donation\"].includes(label.toLowerCase())) {\n      countRecords();\n    }\n  }, [label]);\n\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      {notifCount > 0 ? <span className=\"badge\">{notifCount}</span> : \"\"}\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\nimport backup from \"../../assets/backup.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"events\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Events\"\n          imagesrc={post}\n          isSelected={selected === \"events\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"schedule\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Mass Schedule\"\n          imagesrc={church}\n          isSelected={selected === \"schedule\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n      <span\n        onClick={() => {\n          select(\"backup\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Backup & Restore\"\n          imagesrc={backup}\n          isSelected={selected === \"backup\"}\n        />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2 className=\"clickable\" onClick={() => select(\"\")}>\n        National Shrine of Our Lady of sorrows\n      </h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  //comment\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}