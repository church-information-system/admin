{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","assets/upload.svg","api/FirebaseHelper.js","helpers.js","components/misc/loader.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/password.svg","assets/logout.svg","assets/post.svg","assets/records.svg","assets/request.svg","assets/church.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["getFile","id","directory","type","a","getDownloadURL","ref","storage","uploadFile","file","uploadBytes","hasCertificate","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","recordCounter","countCallback","onSnapshot","query","where","addRecord","record","Date","addDoc","success","editRecord","docId","value","override","setDoc","updateDoc","deleteRecord","deleteDoc","archiveRecord","currentCollectionName","targetCollectionName","undefined","referrence","login","username","password","admins","i","length","changePassword","oldPassword","newPassword","loggedIn","find","o","message","inputGetter","document","getElementById","getById","customAlert","icon","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","toDateTime","secs","t","setSeconds","formatTime","timeStr","hours","mins","isTwelve","parseInt","isPM","attributeSorter","selected","obj","sortingArray","Object","keys","sort","b","MiniLoader","className","Loader","ContentItem","requestRefresh","isArchive","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","hasCert","setHasCert","image","setImage","showEdit","includes","showAchive","showUpload","submit","values","submitFile","marriageDialog","html","didOpen","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","preConfirm","replace","ageValid","innerHTML","noempty","nothingChanged","showCancelButton","then","isConfirmed","scheduleDialog","onclick","timeInput","createElement","classList","add","appendChild","lastChild","remove","day","timeKeys","filter","key","time12h","time","modifier","minutes","convertTime12to24","querySelectorAll","element","newRecord","useEffect","res","imgSrc","checkCert","toLowerCase","getImage","map","showProperty","toUpperCase","slice","match","join","recordDetail","src","print","alt","onClick","window","open","upload","input","confirmButtonText","showLoaderOnConfirm","backdrop","allowOutsideClick","isLoading","isValid","result","edit","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","address","phone","fullname","phoneValid","content","date","archive","confirmArchive","ToggleSwitch","toggleArchive","onChange","target","checked","ActionBar","search","show","addingRecord","setAddingRecord","removeChild","Content","records","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","refreshList","fetchData","getMatches","arr","dateDocumentAdded","seconds","trim","createItem","SidebarItem","imagesrc","label","isSelected","notifCount","setNotifCount","size","countRecords","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","marriage","death","donation","post","requests","church","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","getDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.87ed147c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","import {\n  collection,\n  doc,\n  getDocs,\n  setDoc,\n  query,\n  where,\n  addDoc,\n  updateDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { firestore, storage } from \"../App\";\n\nexport async function getFile(id, directory, type) {\n  try {\n    return await getDownloadURL(ref(storage, `${directory}/${id}.${type}`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function uploadFile(id, file, directory, type) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.${type}`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function recordCounter(collectionName, countCallback) {\n  onSnapshot(\n    query(collection(firestore, collectionName), where(\"seen\", \"!=\", true)),\n    (data) => {\n      countCallback(data);\n    }\n  );\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value, override) {\n  let success;\n  try {\n    if (override) {\n      value[\"dateDocumentAdded\"] = new Date();\n      await setDoc(doc(collection(firestore, collectionName), docId), value);\n    } else {\n      await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    }\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  if (record.referrence === undefined) record[\"referrence\"] = record[\"id\"];\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n\nexport function formatTime(timeStr) {\n  const hours = timeStr.substring(0, 2);\n  const mins = timeStr.substring(3, 5);\n\n  const isTwelve = parseInt(hours) === 0 || parseInt(hours) === 12;\n  const isPM = parseInt(hours) >= 12;\n\n  return `${\n    isTwelve ? \"12\" : isPM ? `0${parseInt(hours) % 12}` : hours\n  }:${mins} ${isPM ? \"PM\" : \"AM\"}`;\n}\n\nexport function convertTime12to24(time12h) {\n  const [time, modifier] = time12h.split(\" \");\n\n  let [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\") {\n    hours = \"00\";\n  }\n\n  if (modifier === \"PM\") {\n    hours = parseInt(hours, 10) + 12;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function attributeSorter(selected, obj) {\n  let sortingArray = [];\n\n  switch (selected) {\n    case \"marriage\":\n      sortingArray = [\n        \"wifeName\",\n        \"wifeAge\",\n        \"wifeBirthday\",\n        \"wifeReligion\",\n        \"wifePlaceOfBirth\",\n        \"husbandName\",\n        \"husbandAge\",\n        \"husbandBirthday\",\n        \"husbandReligion\",\n        \"husbandPlaceOfBirth\",\n      ];\n      break;\n    case \"death\":\n      sortingArray = [\"name\", \"dayOfBirth\", \"dayOfDeath\", \"dateOfMass\", \"age\"];\n      break;\n    case \"requests\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"address\",\n        \"requestedDocument\",\n        \"requestMethod\",\n        \"wifeName\",\n        \"husbandName\",\n        \"fullname\",\n      ];\n      break;\n    case \"donation\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"gender\",\n        \"address\",\n        \"city\",\n        \"country\",\n        \"phoneNumber\",\n        \"amount\",\n        \"gcashNumber\",\n        \"email\",\n      ];\n      break;\n\n    default:\n      return Object.keys(obj).sort((a, b) => {\n        if (a.length !== b.length) {\n          return a.length - b.length;\n        } else {\n          return a > b;\n        }\n      });\n  }\n\n  return Object.keys(obj).sort(\n    (a, b) => sortingArray.indexOf(a) - sortingArray.indexOf(b)\n  );\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  hasCertificate,\n  uploadFile,\n} from \"../../api/FirebaseHelper\";\nimport {\n  attributeSorter,\n  convertTime12to24,\n  customAlert,\n  formatTime,\n  getById,\n  inputGetter,\n} from \"../../helpers\";\nimport { useEffect, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [hasCert, setHasCert] = useState(false);\n  const [image, setImage] = useState(false);\n\n  let showEdit = ![\"requests\", \"donation\"].includes(selected);\n  let showAchive = ![\"events\", \"donation\"].includes(selected);\n  let showUpload = ![\"schedule\", \"donation\", \"requests\"].includes(selected);\n  const showProperty = (key) =>\n    ![\"id\", \"dateDocumentAdded\", \"seen\", \"referrence\"].includes(key);\n\n  useEffect(() => {\n    async function checkCert() {\n      let res = await hasCertificate(\n        record.referrence !== undefined ? record.referrence : record.id,\n        selected\n      );\n      setHasCert(() => res);\n    }\n    checkCert();\n\n    function markSeen() {\n      record[\"seen\"] = true;\n      editRecord(selected, record.id, record);\n    }\n\n    if (\n      [\"requests\", \"donation\"].includes(selected.toLowerCase()) &&\n      record[\"seen\"] !== true\n    ) {\n      markSeen();\n    }\n\n    async function getImage() {\n      let imgSrc = await getFile(record.id, \"events\", \"jpg\");\n      setImage(() => imgSrc);\n    }\n\n    if (selected === \"events\") {\n      getImage();\n    }\n  }, [record.id, isArchive, selected, record]);\n\n  async function submit(values, override = false) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values,\n        override\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file, type) {\n    setUploading(() => true);\n    await uploadFile(\n      record.referrence !== undefined ? record.referrence : record.id,\n      file,\n      selected,\n      type\n    );\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(\n        isArchive ? `${selected}_archive` : selected,\n        isArchive ? selected : `${selected}_archive`,\n        record.id,\n        record\n      )\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    try {\n      key = key.charAt(0).toUpperCase() + key.slice(1);\n      key = key.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    } catch {}\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\" pattern=\"[+]{1}[0-9]{11,14}\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"address\").value = record.address;\n        getById(\"phone\").value = record.phone;\n      },\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \" \";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullname === record.name &&\n          address === record.address &&\n          phone === record.phone;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n        getById(\"date\").value = record.date;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title &&\n          content === record.content &&\n          date === record.date;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadDialog() {\n    Swal.fire({\n      title: \"Upload Certificate\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type === \"application/pdf\";\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose a pdf file\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"pdf\");\n      }\n    });\n  }\n\n  function uploadImage() {\n    Swal.fire({\n      title: \"Upload Image\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type.includes(\"image\");\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose an image\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"jpg\");\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Edit the Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () => {\n          let toRemove = getById(\"times\").lastChild;\n          toRemove.remove();\n        };\n\n        getById(\"day\").value = record.day;\n\n        let timeKeys = Object.keys(record).filter((key) =>\n          key.includes(\"time\")\n        );\n        timeKeys.sort((a, b) => {\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          } else {\n            return a > b;\n          }\n        });\n\n        timeKeys.forEach((key) => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          timeInput.value = convertTime12to24(record[key]);\n          getById(\"times\").appendChild(timeInput);\n        });\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newRecord = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          newRecord[`time${Object.keys(newRecord).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(newRecord, true);\n      }\n    });\n  }\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"content-details\">\n        <div className=\"record-datas\">\n          {attributeSorter(selected, record).map((key) => {\n            if (showProperty(key)) return recordDetail(key, record[key]);\n            else return null;\n          })}\n        </div>\n        <span>\n          <div className=\"icons-container\">\n            {selected !== \"events\" && selected !== \"donation\" ? (\n              <div className=\"icon-container\">\n                {hasCert ? (\n                  <img\n                    src={print}\n                    title=\"print\"\n                    alt=\"\"\n                    className=\"icon\"\n                    onClick={async () => {\n                      let file = await getFile(\n                        record.referrence !== undefined\n                          ? record.referrence\n                          : record.id,\n                        selected,\n                        \"pdf\"\n                      );\n                      window.open(file);\n                    }}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {showUpload ? (\n              <div className=\"icon-container\">\n                {uploading ? (\n                  <MiniLoader />\n                ) : (\n                  <img\n                    src={upload}\n                    title=\"upload\"\n                    alt=\"upload\"\n                    className=\"icon\"\n                    onClick={async () => {\n                      if (selected === \"events\") {\n                        uploadImage();\n                      } else {\n                        uploadDialog();\n                      }\n                    }}\n                  />\n                )}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {showEdit ? (\n              <div className=\"icon-container\">\n                {updating ? (\n                  <MiniLoader />\n                ) : (\n                  <img\n                    src={edit}\n                    title=\"edit\"\n                    alt=\"\"\n                    className=\"icon\"\n                    onClick={() => {\n                      switch (selected) {\n                        case \"marriage\":\n                          marriageDialog();\n                          break;\n                        case \"death\":\n                          deathDialog();\n                          break;\n                        case \"donation\":\n                          donationDialog();\n                          break;\n                        case \"events\":\n                          eventDialog();\n                          break;\n                        case \"schedule\":\n                          scheduleDialog();\n                          break;\n                        default:\n                          marriageDialog();\n                      }\n                    }}\n                  />\n                )}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {showAchive ? (\n              <div className=\"icon-container\">\n                {archiving ? (\n                  <MiniLoader />\n                ) : (\n                  <img\n                    src={archive}\n                    title=\"archive\"\n                    alt=\"archive\"\n                    className=\"icon\"\n                    onClick={() =>\n                      Swal.fire({\n                        title: `Are you sure you want to ${\n                          isArchive ? \"un-archive\" : \"archive\"\n                        } this record?`,\n                        icon: \"warning\",\n                        showCancelButton: true,\n                        confirmButtonText: isArchive ? \"un-archive\" : \"archive\",\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          confirmArchive();\n                        }\n                      })\n                    }\n                  />\n                )}\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </span>\n      </div>\n      {selected === \"events\" && image !== null ? (\n        <img src={image} alt=\"\" className=\"event-image\" />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggleArchive }) {\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        onChange={(value) => {\n          toggleArchive(value.target.checked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, formatTime, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  isArchive,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Create a Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        <input class=\"swal2-input\" type=\"time\">\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () =>\n          getById(\"times\").removeChild(getById(\"times\").lastChild);\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let record = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          record[`time${Object.keys(record).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(record);\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"events\" ? (\n        <span className=\"search-bar\">\n          <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"events\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggleArchive={toggleArchive} />\n          <h4>Toggle Archive</h4>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"donation\" && selected !== \"requests\" ? (\n        <span\n          className=\"action-button add-record\"\n          title=\"Add\"\n          onClick={() => {\n            switch (selected) {\n              case \"marriage\":\n                marriageDialog();\n                break;\n              case \"death\":\n                deathDialog();\n                break;\n              case \"donation\":\n                donationDialog();\n                break;\n              case \"events\":\n                eventDialog();\n                break;\n              case \"schedule\":\n                scheduleDialog();\n                break;\n              default:\n                marriageDialog();\n            }\n          }}\n        >\n          {addingRecord ? (\n            <MiniLoader />\n          ) : (\n            <img src={add} alt=\"add\" className=\"icon\" />\n          )}\n          <h4>Add </h4>\n        </span>\n      ) : (\n        <span></span>\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCollection } from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { toDateTime } from \"../../helpers\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"events\") {\n        setIsArchive(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort(\n      (a, b) =>\n        toDateTime(a.dateDocumentAdded.seconds) <\n        toDateTime(b.dateDocumentAdded.seconds)\n    );\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.wifeName || record.husbandName || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    return (\n      <ContentItem\n        record={record}\n        key={record.id}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n        toggleArchive={toggleArchive}\n        isArchive={isArchive}\n      />\n      {selected === \"\" ? (\n        <h3 className=\"content-message\">Nothing Selected</h3>\n      ) : fetchingCollection ? (\n        <Loader />\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","import { useEffect, useState } from \"react\";\nimport { recordCounter } from \"../../api/FirebaseHelper\";\n\nexport default function SidebarItem({ imagesrc, label, isSelected }) {\n  const [notifCount, setNotifCount] = useState(0);\n\n  useEffect(() => {\n    async function countRecords() {\n      recordCounter(label.toLowerCase(), function (data) {\n        setNotifCount(() => data.size);\n      });\n    }\n\n    if ([\"requests\", \"donation\"].includes(label.toLowerCase())) {\n      countRecords();\n    }\n  }, [label]);\n\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      {notifCount > 0 ? <span className=\"badge\">{notifCount}</span> : \"\"}\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","export default __webpack_public_path__ + \"static/media/church.ab21ef53.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"events\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Events\"\n          imagesrc={post}\n          isSelected={selected === \"events\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"schedule\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Mass Schedule\"\n          imagesrc={church}\n          isSelected={selected === \"schedule\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  //comment\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}