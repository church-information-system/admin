{"version":3,"sources":["assets/print.svg","assets/edit.svg","assets/archive.svg","assets/upload.svg","assets/confirm.svg","assets/email.svg","api/FirebaseHelper.js","helpers.js","components/misc/loader.jsx","components/misc/content-table/content-table.jsx","components/content/content-item.jsx","assets/add.svg","components/misc/toggle-switch.jsx","components/content/action-bar.jsx","components/content/content.jsx","assets/hamburger.svg","components/sidebar/sidebar-item.jsx","assets/death.svg","assets/marriage.svg","assets/donation.svg","assets/password.svg","assets/logout.svg","assets/post.svg","assets/records.svg","assets/request.svg","assets/church.svg","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/misc/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["getFile","id","directory","type","a","getDownloadURL","ref","storage","uploadFile","file","uploadBytes","hasCertificate","fetchCollection","collectionName","getDocs","collection","firestore","querySnapshot","datas","forEach","doc","data","push","notificationCounter","countCallback","onSnapshot","query","where","recordCounter","addRecord","record","Date","addDoc","success","editRecord","docId","value","override","setDoc","updateDoc","deleteRecord","deleteDoc","archiveRecord","currentCollectionName","targetCollectionName","undefined","referrence","login","username","password","admins","i","length","changePassword","oldPassword","newPassword","loggedIn","find","o","message","inputGetter","document","getElementById","getById","customAlert","icon","Swal","fire","title","getCookie","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","toDateTime","secs","t","setSeconds","formatTime","timeStr","hours","mins","isTwelve","parseInt","isPM","attributeSorter","selected","obj","sortingArray","Object","keys","sort","b","convertCamelCase","word","toUpperCase","slice","match","join","MiniLoader","className","Loader","ContentTable","columns","Table","onClick","event","stopPropagation","map","key","index","ContentItem","requestRefresh","isArchive","useState","updating","setUpdating","archiving","setArchiving","uploading","setUploading","confirmingDonation","setConfirmingDonation","hasCert","setHasCert","image","setImage","showOthers","setShowOthers","dontShow","showEdit","includes","showAchive","showPrint","showUpload","showConfirmDonation","showEmailRequest","showTable","form","useRef","submit","values","submitFile","scheduleDialog","html","showCancelButton","didOpen","onclick","timeInput","createElement","classList","add","appendChild","lastChild","remove","day","timeKeys","filter","time12h","time","modifier","minutes","convertTime12to24","preConfirm","noempty","querySelectorAll","element","innerHTML","then","isConfirmed","newRecord","useEffect","res","imgSrc","checkCert","toLowerCase","getImage","sendEmail","emailJS","sendForm","current","verified","error","showProperty","recordDetail","ActionButton","isShown","isLoading","email","e","window","open","emailAddress","requestedDocument","print","firstName","confirm","upload","input","confirmButtonText","showLoaderOnConfirm","backdrop","allowOutsideClick","isValid","result","edit","console","log","husbandName","husbandAge","husbandBirthday","husbandPlaceOfBirth","husbandReligion","wifeName","wifeAge","wifeBirthday","wifePlaceOfBirth","wifeReligion","marriageDate","replace","ageValid","nothingChanged","dayOfDeath","dayOfBirth","dateOfMass","age","newName","newDayOfBirth","newDayOfDeath","newDateOfMass","newAge","address","phone","fullname","phoneValid","content","date","archive","confirmArchive","toString","src","alt","ToggleSwitch","toggleArchive","onChange","target","checked","ActionBar","search","show","addingRecord","setAddingRecord","marriageDialog","removeChild","Content","records","setRecords","searchString","setSearchString","fetchingCollection","setFetchingCollection","refereshes","setRefreshes","setIsArchive","recordCounts","setRecordCounts","yearLastAdded","refreshList","fetchData","_recordCounts","countOfRecords","size","getMatches","arr","dateDocumentAdded","seconds","trim","createItem","getFullYear","recordCount","dateAdded","props","SidebarItem","imagesrc","label","isSelected","notifCount","setNotifCount","countRecords","SideBar","select","hideSidebar","_hideSidebar","recordsShown","setRecordsShown","currentValue","marriage","death","donation","post","requests","church","newPassword1","matched","changeResult","location","reload","logout","NavBar","style","width","hamburger","Login","authenticate","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","loginResult","expiry","setDate","getDate","submitLogin","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","App","setSelected","authenticated","setAuthenticated","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ddcb0426.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/print.70b985ba.svg\";","export default __webpack_public_path__ + \"static/media/edit.640a02d0.svg\";","export default __webpack_public_path__ + \"static/media/archive.899a083e.svg\";","export default __webpack_public_path__ + \"static/media/upload.2a69f0ee.svg\";","export default __webpack_public_path__ + \"static/media/confirm.8160dc89.svg\";","export default __webpack_public_path__ + \"static/media/email.f2182462.svg\";","import {\n  collection,\n  doc,\n  getDocs,\n  setDoc,\n  query,\n  where,\n  addDoc,\n  updateDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { firestore, storage } from \"../App\";\n\nexport async function getFile(id, directory, type) {\n  try {\n    return await getDownloadURL(ref(storage, `${directory}/${id}.${type}`));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function uploadFile(id, file, directory, type) {\n  return await uploadBytes(ref(storage, `${directory}/${id}.${type}`), file);\n}\n\nexport async function hasCertificate(id, directory) {\n  try {\n    await getDownloadURL(ref(storage, `${directory}/${id}.pdf`));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function fetchCollection(collectionName) {\n  const querySnapshot = await getDocs(collection(firestore, collectionName));\n  let datas = [];\n  querySnapshot.forEach((doc) => {\n    let data = doc.data();\n    data[\"id\"] = doc.id;\n    datas.push(data);\n  });\n  return datas;\n}\n\nexport async function notificationCounter(collectionName, countCallback) {\n  onSnapshot(\n    query(collection(firestore, collectionName), where(\"seen\", \"!=\", true)),\n    (data) => {\n      countCallback(data);\n    }\n  );\n}\n\nexport async function recordCounter(collectionName, countCallback) {\n  onSnapshot(collection(firestore, collectionName), (data) => {\n    countCallback(data);\n  });\n}\n\nexport async function addRecord(collectionName, record) {\n  let success;\n  record[\"dateDocumentAdded\"] = new Date();\n  try {\n    await addDoc(collection(firestore, collectionName), record);\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function editRecord(collectionName, docId, value, override) {\n  let success;\n  try {\n    if (override) {\n      value[\"dateDocumentAdded\"] = new Date();\n      await setDoc(doc(collection(firestore, collectionName), docId), value);\n    } else {\n      await updateDoc(doc(collection(firestore, collectionName), docId), value);\n    }\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function deleteRecord(collectionName, docId) {\n  let success;\n  try {\n    await deleteDoc(doc(collection(firestore, collectionName), docId));\n    success = true;\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function archiveRecord(\n  currentCollectionName,\n  targetCollectionName,\n  docId,\n  record\n) {\n  if (record.referrence === undefined) record[\"referrence\"] = record[\"id\"];\n  let success = false;\n  try {\n    if (await addRecord(targetCollectionName, record)) {\n      if (await deleteRecord(currentCollectionName, docId)) {\n        success = true;\n      }\n    }\n  } catch (e) {\n    success = false;\n  }\n  return success;\n}\n\nexport async function login(username, password) {\n  let admins = await fetchCollection(\"admins\");\n  for (let i = 0; i < admins.length; i++) {\n    if (admins[i].username === username && admins[i].password === password) {\n      return admins[i].id;\n    }\n  }\n  return false;\n}\n\nexport async function changePassword(id, oldPassword, newPassword) {\n  let admins = await fetchCollection(\"admins\");\n  let loggedIn = admins.find((o) => (o.id = id));\n\n  if (loggedIn.password === oldPassword) {\n    loggedIn.password = newPassword;\n    if (await editRecord(\"admins\", id, loggedIn)) {\n      return { success: true, message: \"Password Changed, Please login again\" };\n    } else {\n      return { success: false, message: \"Failed to Update password\" };\n    }\n  } else {\n    return { success: false, message: \"Old password didn't match\" };\n  }\n}\n","import Swal from \"sweetalert2\";\n\nexport function inputGetter(id) {\n  return document.getElementById(id).value;\n}\n\nexport function getById(id) {\n  return document.getElementById(id);\n}\n\nexport async function customAlert(message, icon) {\n  await Swal.fire({\n    title: message,\n    icon: icon,\n  });\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function toDateTime(secs) {\n  var t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  return t;\n}\n\nexport function formatTime(timeStr) {\n  const hours = timeStr.substring(0, 2);\n  const mins = timeStr.substring(3, 5);\n\n  const isTwelve = parseInt(hours) === 0 || parseInt(hours) === 12;\n  const isPM = parseInt(hours) >= 12;\n\n  return `${\n    isTwelve ? \"12\" : isPM ? `0${parseInt(hours) % 12}` : hours\n  }:${mins} ${isPM ? \"PM\" : \"AM\"}`;\n}\n\nexport function convertTime12to24(time12h) {\n  const [time, modifier] = time12h.split(\" \");\n\n  let [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\") {\n    hours = \"00\";\n  }\n\n  if (modifier === \"PM\") {\n    hours = parseInt(hours, 10) + 12;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function attributeSorter(selected, obj) {\n  let sortingArray = [];\n\n  switch (selected) {\n    case \"marriage\":\n      sortingArray = [\n        \"wifeName\",\n        \"wifeAge\",\n        \"wifeBirthday\",\n        \"wifeReligion\",\n        \"wifePlaceOfBirth\",\n        \"husbandName\",\n        \"husbandAge\",\n        \"husbandBirthday\",\n        \"husbandReligion\",\n        \"husbandPlaceOfBirth\",\n        \"marriageDate\",\n      ];\n      break;\n    case \"death\":\n      sortingArray = [\"name\", \"dayOfBirth\", \"dayOfDeath\", \"dateOfMass\", \"age\"];\n      break;\n    case \"requests\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"address\",\n        \"requestedDocument\",\n        \"requestMethod\",\n        \"wifeName\",\n        \"husbandName\",\n        \"fullname\",\n      ];\n      break;\n    case \"donation\":\n      sortingArray = [\n        \"firstName\",\n        \"lastName\",\n        \"gender\",\n        \"address\",\n        \"city\",\n        \"country\",\n        \"phoneNumber\",\n        \"amount\",\n        \"gcashNumber\",\n        \"email\",\n      ];\n      break;\n\n    default:\n      return Object.keys(obj).sort((a, b) => {\n        if (a.length !== b.length) {\n          return a.length - b.length;\n        } else {\n          return a > b;\n        }\n      });\n  }\n\n  return Object.keys(obj).sort(\n    (a, b) => sortingArray.indexOf(a) - sortingArray.indexOf(b)\n  );\n}\n\nexport function chunkArray(inputArray) {\n  let perChunk = 5;\n\n  let result = inputArray.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / perChunk);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n\n  return result;\n}\n\nexport function convertCamelCase(word) {\n  try {\n    word = word.charAt(0).toUpperCase() + word.slice(1);\n    word = word.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \");\n    return word;\n  } catch {\n    return word;\n  }\n}\n","import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return <div className=\"loader\" />;\n}\n","import { convertCamelCase } from \"../../../helpers\";\nimport \"./content-table.scss\";\n\nexport default function ContentTable({ columns, data }) {\n  return (\n    <div className=\"table-container\">\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nfunction Table({ columns, data }) {\n  return (\n    <table onClick={(event) => event.stopPropagation()}>\n      <thead>\n        <tr>\n          {columns.map((key, index) => (\n            <th key={key + index}>{convertCamelCase(key)}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {columns.map((key, index) => (\n            <td key={data[key] + index}>{data[key]}</td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nimport print from \"../../assets/print.svg\";\nimport edit from \"../../assets/edit.svg\";\nimport archive from \"../../assets/archive.svg\";\nimport upload from \"../../assets/upload.svg\";\nimport confirm from \"../../assets/confirm.svg\";\nimport email from \"../../assets/email.svg\";\nimport {\n  archiveRecord,\n  editRecord,\n  getFile,\n  hasCertificate,\n  uploadFile,\n} from \"../../api/FirebaseHelper\";\nimport {\n  attributeSorter,\n  convertCamelCase,\n  convertTime12to24,\n  customAlert,\n  formatTime,\n  getById,\n  inputGetter,\n} from \"../../helpers\";\nimport emailJS from \"emailjs-com\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport ContentTable from \"../misc/content-table/content-table\";\n\nexport default function ContentItem({\n  record,\n  selected,\n  requestRefresh,\n  isArchive,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [confirmingDonation, setConfirmingDonation] = useState(false);\n\n  const [hasCert, setHasCert] = useState(false);\n  const [image, setImage] = useState(false);\n\n  const [showOthers, setShowOthers] = useState(false);\n\n  let dontShow = [\"id\", \"dateDocumentAdded\", \"seen\", \"referrence\", \"verified\"];\n\n  let showEdit = ![\"requests\", \"donation\", \"\"].includes(selected);\n  let showAchive = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showPrint = ![\"events\", \"donation\", \"\"].includes(selected);\n  let showUpload = ![\"schedule\", \"donation\", \"requests\", \"\"].includes(selected);\n  let showConfirmDonation = selected === \"donation\";\n  let showEmailRequest = selected === \"requests\";\n\n  let showTable = ![\"events\", \"schedule\", \"\"].includes(selected);\n\n  const showProperty = (key) => {\n    if (!showTable) return !dontShow.includes(key);\n    else return key.toLowerCase().includes(\"name\");\n  };\n\n  const form = useRef();\n\n  useEffect(() => {\n    async function checkCert() {\n      let res = await hasCertificate(\n        record.referrence !== undefined ? record.referrence : record.id,\n        selected\n      );\n      setHasCert(() => res);\n    }\n    checkCert();\n\n    function markSeen() {\n      record[\"seen\"] = true;\n      editRecord(selected, record.id, record);\n    }\n\n    if (\n      [\"requests\", \"donation\"].includes(selected.toLowerCase()) &&\n      record[\"seen\"] !== true\n    ) {\n      markSeen();\n    }\n\n    async function getImage() {\n      let imgSrc = await getFile(record.id, \"events\", \"jpg\");\n      setImage(() => imgSrc);\n    }\n\n    if (selected === \"events\") {\n      getImage();\n    }\n  }, [record.id, isArchive, selected, record]);\n\n  async function submit(values, override = false) {\n    setUpdating(() => true);\n    if (\n      await editRecord(\n        selected + (isArchive ? \"_archive\" : \"\"),\n        record.id,\n        values,\n        override\n      )\n    ) {\n      customAlert(\"Record Updated!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to update record\", \"error\");\n    }\n    setUpdating(false);\n  }\n\n  async function submitFile(file, type) {\n    setUploading(() => true);\n    await uploadFile(\n      record.referrence !== undefined ? record.referrence : record.id,\n      file,\n      selected,\n      type\n    );\n    setUploading(() => false);\n    requestRefresh();\n  }\n\n  async function confirmArchive() {\n    setArchiving(() => true);\n    if (\n      await archiveRecord(\n        isArchive ? `${selected}_archive` : selected,\n        isArchive ? selected : `${selected}_archive`,\n        record.id,\n        record\n      )\n    ) {\n      customAlert(\"Record Archived!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to Archive record\", \"error\");\n    }\n    setArchiving(() => false);\n  }\n\n  function recordDetail(key, value) {\n    key = convertCamelCase(key);\n\n    return (\n      <div className=\"key-value-pair\" key={key}>\n        <span className=\"key\">{key}:</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    );\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"husbandName\").value = record.husbandName;\n        getById(\"husbandAge\").value = record.husbandAge;\n        getById(\"husbandBirthday\").value = record.husbandBirthday;\n        getById(\"husbandPlaceOfBirth\").value = record.husbandPlaceOfBirth;\n        getById(\"husbandReligion\").value = record.husbandReligion;\n        getById(\"wifeName\").value = record.wifeName;\n        getById(\"wifeAge\").value = record.wifeAge;\n        getById(\"wifeBirthday\").value = record.wifeBirthday;\n        getById(\"wifePlaceOfBirth\").value = record.wifePlaceOfBirth;\n        getById(\"wifeReligion\").value = record.wifeReligion;\n        getById(\"marriageDate\").value = record.marriageDate;\n      },\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          husbandName === record.husbandName &&\n          husbandAge === record.husbandAge &&\n          husbandBirthday === record.husbandBirthday &&\n          husbandPlaceOfBirth === record.husbandPlaceOfBirth &&\n          husbandReligion === record.husbandReligion &&\n          wifeName === record.wifeName &&\n          wifeAge === record.wifeAge &&\n          wifeBirthday === record.wifeBirthday &&\n          wifePlaceOfBirth === record.wifePlaceOfBirth &&\n          wifeReligion === record.wifeReligion &&\n          marriageDate === record.marriageDate;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\" type=\"date\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"dayOfDeath\").value = record.dayOfDeath;\n        getById(\"dayOfBirth\").value = record.dayOfBirth;\n        getById(\"dateOfMass\").value = record.dateOfMass;\n        getById(\"age\").value = record.age;\n      },\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          newName === record.name &&\n          newDayOfBirth === record.dayOfBirth &&\n          newDayOfDeath === record.dayOfDeath &&\n          newDateOfMass === record.dateOfMass &&\n          newAge === record.age;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\" pattern=\"[+]{1}[0-9]{11,14}\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      didOpen: () => {\n        getById(\"fullname\").value = record.name;\n        getById(\"address\").value = record.address;\n        getById(\"phone\").value = record.phone;\n      },\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \" \";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          fullname === record.name &&\n          address === record.address &&\n          phone === record.phone;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"title\").value = record.title;\n        getById(\"post-content\").value = record.content;\n        getById(\"date\").value = record.date;\n      },\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        let nothingChanged =\n          title === record.title &&\n          content === record.content &&\n          date === record.date;\n\n        if (nothingChanged)\n          getById(\"nothingChanged\").innerHTML = \"Change atleast one value\";\n        else getById(\"nothingChanged\").innerHTML = \" \";\n\n        return noempty && !nothingChanged;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function uploadDialog() {\n    Swal.fire({\n      title: \"Upload Certificate\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type === \"application/pdf\";\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose a pdf file\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"pdf\");\n      }\n    });\n  }\n\n  function uploadImage() {\n    Swal.fire({\n      title: \"Upload Image\",\n      input: \"file\",\n      html: \"<span id='invalid' class='error-text'></span>\",\n      showCancelButton: true,\n      confirmButtonText: \"Upload\",\n      showLoaderOnConfirm: true,\n      backdrop: true,\n      allowOutsideClick: () => !Swal.isLoading(),\n      preConfirm: (value) => {\n        let isValid = value !== null && value.type.includes(\"image\");\n        if (!isValid) getById(\"invalid\").innerHTML = \"choose an image\";\n        return isValid ? value : false;\n      },\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        submitFile(result.value, \"jpg\");\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Edit the Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () => {\n          let toRemove = getById(\"times\").lastChild;\n          toRemove.remove();\n        };\n\n        getById(\"day\").value = record.day;\n\n        let timeKeys = Object.keys(record).filter((key) =>\n          key.includes(\"time\")\n        );\n        timeKeys.sort((a, b) => {\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          } else {\n            return a > b;\n          }\n        });\n\n        timeKeys.forEach((key) => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          timeInput.value = convertTime12to24(record[key]);\n          getById(\"times\").appendChild(timeInput);\n        });\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newRecord = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          newRecord[`time${Object.keys(newRecord).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(newRecord, true);\n      }\n    });\n  }\n\n  const sendEmail = () => {\n    emailJS\n      .sendForm(\n        \"service_iredyvh\",\n        \"template_cf0wjy5\",\n        form.current,\n        \"user_NRZC9vjUaHFQ7n72dO765\"\n      )\n      .then(\n        () => {\n          customAlert(\"Email has been sent\", \"success\");\n          setVerified();\n          setConfirmingDonation(false);\n        },\n        (error) => {\n          customAlert(\"Something went wrong\", \"error\");\n          setConfirmingDonation(false);\n        }\n      );\n\n    emailJS.sendForm(\n      \"service_iredyvh\",\n      \"template_tpwuinn\",\n      form.current,\n      \"user_NRZC9vjUaHFQ7n72dO765\"\n    );\n  };\n\n  function setVerified() {\n    record.verified = true;\n    editRecord(\"donation\", record.id, record);\n  }\n\n  return (\n    <div\n      className=\"content-item\"\n      onClick={() => setShowOthers((current) => !current)}\n    >\n      <div className=\"content-details\">\n        <div className=\"record-datas\">\n          {attributeSorter(selected, record).map((key) => {\n            if (showProperty(key)) return recordDetail(key, record[key]);\n            else return null;\n          })}\n        </div>\n        <span>\n          <div className=\"icons-container\">\n            <ActionButton\n              isShown={showEmailRequest}\n              isLoading={false}\n              icon={email}\n              title=\"email\"\n              onClick={async (e) => {\n                window.open(\n                  `mailto:${record.emailAddress}?subject=${record.requestedDocument} request&body=`\n                );\n              }}\n            />\n            <ActionButton\n              isShown={showPrint && hasCert}\n              isLoading={false}\n              title={print}\n              icon={print}\n              onClick={async () => {\n                let file = await getFile(\n                  record.referrence !== undefined\n                    ? record.referrence\n                    : record.id,\n                  selected,\n                  \"pdf\"\n                );\n                window.open(file);\n              }}\n            />\n            <form ref={form} className=\"no-display\">\n              <input type=\"email\" name=\"user_email\" value={record.email} />\n              <input type=\"text\" name=\"donor\" value={record.firstName} />\n            </form>\n            <ActionButton\n              isShown={showConfirmDonation && record.verified !== true}\n              isLoading={confirmingDonation}\n              icon={confirm}\n              title=\"confirm\"\n              onClick={async () => {\n                setConfirmingDonation(() => true);\n                sendEmail();\n              }}\n            />\n            <ActionButton\n              isShown={showUpload}\n              isLoading={uploading}\n              icon={upload}\n              title=\"upload\"\n              onClick={async () => {\n                if (selected === \"events\") {\n                  uploadImage();\n                } else {\n                  uploadDialog();\n                }\n              }}\n            />\n\n            <ActionButton\n              isShown={showEdit}\n              isLoading={updating}\n              icon={edit}\n              title=\"edit\"\n              onClick={(event) => {\n                console.log(event);\n                // e.stopPropagation();\n                switch (selected) {\n                  case \"marriage\":\n                    marriageDialog();\n                    break;\n                  case \"death\":\n                    deathDialog();\n                    break;\n                  case \"donation\":\n                    donationDialog();\n                    break;\n                  case \"events\":\n                    eventDialog();\n                    break;\n                  case \"schedule\":\n                    scheduleDialog();\n                    break;\n                  default:\n                }\n              }}\n            />\n            <ActionButton\n              isShown={showAchive}\n              isLoading={archiving}\n              icon={archive}\n              title=\"archive\"\n              onClick={() =>\n                Swal.fire({\n                  title: `Are you sure you want to ${\n                    isArchive ? \"un-archive\" : \"archive\"\n                  } this record?`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonText: isArchive ? \"un-archive\" : \"archive\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    confirmArchive();\n                  }\n                })\n              }\n            />\n          </div>\n        </span>\n      </div>\n      {showOthers && showTable ? (\n        <ContentTable\n          columns={attributeSorter(selected, record).filter(\n            (key) =>\n              ![...dontShow].includes(key) &&\n              !key.toString().toLowerCase().includes(\"name\")\n          )}\n          data={record}\n        />\n      ) : (\n        \"\"\n      )}\n      {selected === \"events\" && image !== null ? (\n        <img src={image} alt=\"\" className=\"event-image\" />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nfunction ActionButton({ isShown, isLoading, icon, onClick, title }) {\n  return isShown ? (\n    <div className=\"icon-container\">\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img\n          src={icon}\n          title={title}\n          alt={title}\n          className=\"icon\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClick();\n          }}\n        />\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/add.c687829d.svg\";","import \"./toggle-switch.scss\";\n\nexport default function ToggleSwitch({ toggleArchive }) {\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        onChange={(value) => {\n          toggleArchive(value.target.checked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n}\n","import add from \"../../assets/add.svg\";\nimport Swal from \"sweetalert2\";\nimport { addRecord } from \"../../api/FirebaseHelper\";\nimport { MiniLoader } from \"../misc/loader\";\nimport { useState } from \"react\";\nimport { customAlert, formatTime, getById, inputGetter } from \"../../helpers\";\nimport ToggleSwitch from \"../misc/toggle-switch\";\n\nexport default function ActionBar({\n  requestRefresh,\n  search,\n  show,\n  selected,\n  toggleArchive,\n  isArchive,\n}) {\n  const [addingRecord, setAddingRecord] = useState(false);\n\n  async function submit(values) {\n    setAddingRecord(() => true);\n    if (await addRecord(selected + (isArchive ? \"_archive\" : \"\"), values)) {\n      customAlert(\"Record Added!\", \"success\");\n      requestRefresh();\n    } else {\n      customAlert(\"Failed to add record\", \"error\");\n    }\n    setAddingRecord(() => false);\n  }\n\n  function marriageDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        \"<h3>Enter Wife details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"wifeName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"wifeAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"wifeBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"wifeReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"wifePlaceOfBirth\" class=\"swal2-input\">' +\n        \"<br></br>\" +\n        \"<h3>Enter Husband details:</h4>\" +\n        '<span class=\"swal2-input-label\">Name</span>' +\n        '<input id=\"husbandName\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"husbandAge\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<span class=\"swal2-input-label\">Birthday</span>' +\n        '<input id=\"husbandBirthday\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Religion</span>' +\n        '<input id=\"husbandReligion\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Place of Birth</span>' +\n        '<input id=\"husbandPlaceOfBirth\" class=\"swal2-input\">' +\n        \"<h3>Date Of Marriage</h3>\" +\n        '<input id=\"marriageDate\" class=\"swal2-input\" type=\"date\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        getById(\"husbandAge\").value = getById(\"husbandAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n        getById(\"wifeAge\").value = getById(\"wifeAge\").value.replace(\n          /[^0-9]/g,\n          \"\"\n        );\n\n        let husbandName = inputGetter(\"husbandName\");\n        let husbandAge = inputGetter(\"husbandAge\");\n        let husbandBirthday = inputGetter(\"husbandBirthday\");\n        let husbandPlaceOfBirth = inputGetter(\"husbandPlaceOfBirth\");\n        let husbandReligion = inputGetter(\"husbandReligion\");\n\n        let wifeName = inputGetter(\"wifeName\");\n        let wifeAge = inputGetter(\"wifeAge\");\n        let wifeBirthday = inputGetter(\"wifeBirthday\");\n        let wifePlaceOfBirth = inputGetter(\"wifePlaceOfBirth\");\n        let wifeReligion = inputGetter(\"wifeReligion\");\n\n        let marriageDate = inputGetter(\"marriageDate\");\n\n        let ageValid =\n          husbandAge.length > 0 &&\n          wifeAge.length > 0 &&\n          husbandAge > 0 &&\n          wifeAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          husbandName.length > 0 &&\n          husbandAge.length > 0 &&\n          husbandBirthday.length > 0 &&\n          husbandPlaceOfBirth.length > 0 &&\n          husbandReligion.length > 0 &&\n          wifeName.length > 0 &&\n          wifeAge.length > 0 &&\n          wifeBirthday.length > 0 &&\n          wifePlaceOfBirth.length > 0 &&\n          wifeReligion.length > 0 &&\n          marriageDate.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          husbandName: inputGetter(\"husbandName\"),\n          husbandAge: inputGetter(\"husbandAge\"),\n          husbandBirthday: inputGetter(\"husbandBirthday\"),\n          husbandPlaceOfBirth: inputGetter(\"husbandPlaceOfBirth\"),\n          husbandReligion: inputGetter(\"husbandReligion\"),\n          wifeName: inputGetter(\"wifeName\"),\n          wifeAge: inputGetter(\"wifeAge\"),\n          wifeBirthday: inputGetter(\"wifeBirthday\"),\n          wifePlaceOfBirth: inputGetter(\"wifePlaceOfBirth\"),\n          wifeReligion: inputGetter(\"wifeReligion\"),\n          marriageDate: inputGetter(\"marriageDate\"),\n        });\n      }\n    });\n  }\n\n  function deathDialog() {\n    Swal.fire({\n      title: \"Add Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Day Of Death</span>' +\n        '<input id=\"dayOfDeath\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Day Of Birth</span>' +\n        '<input id=\"dayOfBirth\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Date Of Mass</span>' +\n        '<input id=\"dateOfMass\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Age</span>' +\n        '<input id=\"age\" class=\"swal2-input\" type=\"number\" min=\"1\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidAge\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"age\").value = getById(\"age\").value.replace(/[^0-9]/g, \"\");\n\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        let ageValid = newAge.length > 0 && newAge > 0;\n        if (!ageValid)\n          getById(\"invalidAge\").innerHTML =\n            \"Please make sure that the age you entered is a valid number\";\n        else getById(\"invalidAge\").innerHTML = \" \";\n\n        let noempty =\n          newName.length > 0 &&\n          newDayOfBirth.length > 0 &&\n          newDayOfDeath.length > 0 &&\n          newDateOfMass.length > 0 &&\n          newAge.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && ageValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let newName = inputGetter(\"fullname\");\n        let newDayOfBirth = inputGetter(\"dayOfBirth\");\n        let newDayOfDeath = inputGetter(\"dayOfDeath\");\n        let newDateOfMass = inputGetter(\"dateOfMass\");\n        let newAge = inputGetter(\"age\");\n\n        submit({\n          name: newName,\n          dayOfDeath: newDayOfDeath,\n          dayOfBirth: newDayOfBirth,\n          dateOfMass: newDateOfMass,\n          age: newAge,\n        });\n      }\n    });\n  }\n\n  function donationDialog() {\n    Swal.fire({\n      title: \"Edit Details\",\n      html:\n        '<span class=\"swal2-input-label\">Fullname</span>' +\n        '<input id=\"fullname\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Address</span>' +\n        '<input id=\"address\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Phone</span>' +\n        '<input id=\"phone\" class=\"swal2-input\" type=\"tel\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"nothingChanged\" class=\"error-text\"> </div>' +\n        '<div id=\"invalidPhone\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        getById(\"phone\").value = getById(\"phone\").value.replace(/[^0-9]/g, \"\");\n\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        let phoneValid = phone.length === 11;\n        if (!phoneValid)\n          getById(\"invalidPhone\").innerHTML =\n            \"Please make sure that the phone number you entered is a valid phone number, Sample: 09xxxxxxxxx\";\n        else getById(\"invalidPhone\").innerHTML = \"\";\n\n        let noempty =\n          fullname.length > 0 && address.length > 0 && phone.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty && phoneValid;\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let fullname = inputGetter(\"fullname\");\n        let address = inputGetter(\"address\");\n        let phone = inputGetter(\"phone\");\n\n        submit({\n          name: fullname,\n          address: address,\n          phone: phone,\n        });\n      }\n    });\n  }\n\n  function eventDialog() {\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"title\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Date</span>' +\n        '<input id=\"date\" class=\"swal2-input\" type=\"date\">' +\n        '<span class=\"swal2-input-label\">Content</span>' +\n        '<textarea id=\"post-content\" class=\"swal2-input\"></textarea>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = inputGetter(\"title\");\n        let content = inputGetter(\"post-content\");\n        let date = inputGetter(\"date\");\n\n        let noempty = title.length > 0 && content.length > 0 && date.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: inputGetter(\"title\"),\n          date: inputGetter(\"date\"),\n          content: inputGetter(\"post-content\"),\n        });\n      }\n    });\n  }\n\n  function scheduleDialog() {\n    Swal.fire({\n      title: \"Create a Schedule\",\n      html:\n        '<span class=\"swal2-input-label\">Day</span>' +\n        '<input id=\"day\" class=\"swal2-input\" placeholder=\"sunday\">' +\n        `<div id=\"times\">\n        <span class=\"swal2-input-label\">Times</span>\n        <input class=\"swal2-input\" type=\"time\">\n        </div>` +\n        `<div style=\"margin: 20px\">\n          <button id=\"add-time\" class=\"action-button\">add time</button>\n          <button id=\"remove-time\" class=\"action-button\">remove time</button>\n        <div>` +\n        \"\" +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      didOpen: () => {\n        getById(\"add-time\").onclick = () => {\n          let timeInput = document.createElement(\"input\");\n          timeInput.classList.add(\"swal2-input\");\n          timeInput.type = \"time\";\n          getById(\"times\").appendChild(timeInput);\n        };\n        getById(\"remove-time\").onclick = () =>\n          getById(\"times\").removeChild(getById(\"times\").lastChild);\n      },\n      preConfirm: () => {\n        let day = inputGetter(\"day\");\n\n        let noempty = day.length > 0;\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          if (formatTime(element.value).length < 8) {\n            noempty = false;\n          }\n        });\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n        else getById(\"empty\").innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        let record = { day: inputGetter(\"day\") };\n\n        document.querySelectorAll(\"input[type='time']\").forEach((element) => {\n          record[`time${Object.keys(record).length}`] = formatTime(\n            element.value\n          );\n        });\n\n        submit(record);\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      {selected !== \"events\" ? (\n        <span className=\"search-bar\">\n          <input type=\"text\" className=\"search-field\" id=\"search-field\" />\n          <div\n            className=\"action-button\"\n            title=\"Search\"\n            onClick={() =>\n              search(document.getElementById(\"search-field\").value)\n            }\n          >\n            <h4>Search</h4>\n          </div>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"events\" && selected !== \"donation\" ? (\n        <span className=\"archive-bar\">\n          <ToggleSwitch toggleArchive={toggleArchive} />\n          <h4>Toggle Archive</h4>\n        </span>\n      ) : (\n        \"\"\n      )}\n      {selected !== \"donation\" && selected !== \"requests\" ? (\n        <span\n          className=\"action-button add-record\"\n          title=\"Add\"\n          onClick={() => {\n            switch (selected) {\n              case \"marriage\":\n                marriageDialog();\n                break;\n              case \"death\":\n                deathDialog();\n                break;\n              case \"donation\":\n                donationDialog();\n                break;\n              case \"events\":\n                eventDialog();\n                break;\n              case \"schedule\":\n                scheduleDialog();\n                break;\n              default:\n                marriageDialog();\n            }\n          }}\n        >\n          {addingRecord ? (\n            <MiniLoader />\n          ) : (\n            <img src={add} alt=\"add\" className=\"icon\" />\n          )}\n          <h4>Add </h4>\n        </span>\n      ) : (\n        <span></span>\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import \"./content.scss\";\n\nimport ContentItem from \"./content-item\";\nimport ActionBar from \"./action-bar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCollection, recordCounter } from \"../../api/FirebaseHelper\";\nimport { Loader } from \"../misc/loader\";\nimport { toDateTime } from \"../../helpers\";\n\nexport default function Content({ selected }) {\n  const [records, setRecords] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchingCollection, setFetchingCollection] = useState(false);\n  const [refereshes, setRefreshes] = useState(0);\n  const [isArchive, setIsArchive] = useState(false);\n  const [recordCounts, setRecordCounts] = useState([]);\n\n  let yearLastAdded = \"\";\n\n  const toggleArchive = (value) => setIsArchive(() => value);\n\n  const refreshList = () => setRefreshes((value) => value + 1);\n\n  const search = (input) => setSearchString(() => input);\n\n  const fetchData = async () => {\n    if (selected !== \"\") {\n      setFetchingCollection(() => true);\n      if (selected === \"donation\" || selected === \"events\") {\n        setIsArchive(() => false);\n      }\n      setRecords(\n        await fetchCollection(selected + (isArchive ? \"_archive\" : \"\"))\n      );\n      setFetchingCollection(() => false);\n    } else {\n      setFetchingCollection(() => true);\n      let records = [\n        \"marriage\",\n        \"death\",\n        \"donation\",\n        \"events\",\n        \"requests\",\n        \"schedule\",\n      ];\n\n      let _recordCounts = [];\n      records.forEach(async (record, index) => {\n        await recordCounter(record, (data) => {\n          _recordCounts.push({\n            name: record,\n            countOfRecords: data.size,\n          });\n          if (index === records.length - 1) {\n            setRecordCounts(() => _recordCounts);\n            setFetchingCollection(() => false);\n          }\n        });\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchData(), [refereshes, isArchive, selected]);\n\n  function getMatches() {\n    let arr = [];\n    records.sort(\n      (a, b) =>\n        toDateTime(a.dateDocumentAdded.seconds) <\n        toDateTime(b.dateDocumentAdded.seconds)\n    );\n    if (searchString !== \"\") {\n      records.forEach((record) => {\n        if (\n          (record.name || record.wifeName || record.husbandName || record.title)\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(record));\n        }\n      });\n    } else {\n      arr = records.map((record) => createItem(record));\n    }\n    return arr;\n  }\n\n  function createItem(record) {\n    if (isArchive) {\n      return (\n        <ContentItem\n          record={record}\n          key={record.id}\n          selected={selected}\n          requestRefresh={refreshList}\n          isArchive={isArchive}\n        >\n          <div className=\"content-message\">\n            {toDateTime(record.dateDocumentAdded.seconds).getFullYear()}\n          </div>\n        </ContentItem>\n      );\n    }\n    return (\n      <ContentItem\n        record={record}\n        key={record.id}\n        selected={selected}\n        requestRefresh={refreshList}\n        isArchive={isArchive}\n      />\n    );\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        search={search}\n        requestRefresh={refreshList}\n        show={selected !== \"\"}\n        selected={selected}\n        toggleArchive={toggleArchive}\n        isArchive={isArchive}\n      />\n      {fetchingCollection ? (\n        <Loader />\n      ) : selected === \"\" ? (\n        <div className=\"content-container\">\n          {recordCounts.map((recordCount) => {\n            recordCount.id = recordCount.name;\n            return createItem(recordCount);\n          })}\n        </div>\n      ) : isArchive ? (\n        getMatches().map((record) => {\n          let dateAdded = toDateTime(\n            record.props.record.dateDocumentAdded.seconds\n          ).getFullYear();\n          if (yearLastAdded !== dateAdded) {\n            yearLastAdded = dateAdded;\n            return (\n              <div>\n                <h3 className=\"content-message\">\n                  Records From year {yearLastAdded}\n                </h3>\n                <div className=\"content-container\">{record}</div>\n              </div>\n            );\n          } else {\n            return <div className=\"content-container\">{record}</div>;\n          }\n        })\n      ) : (\n        <div className=\"content-container\">\n          {getMatches()[0] ? (\n            getMatches()\n          ) : (\n            <h3 className=\"content-message\">No Records found</h3>\n          )}\n        </div>\n      )}\n      <div className=\"background\"></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","import { useEffect, useState } from \"react\";\nimport { notificationCounter } from \"../../api/FirebaseHelper\";\n\nexport default function SidebarItem({ imagesrc, label, isSelected }) {\n  const [notifCount, setNotifCount] = useState(0);\n\n  useEffect(() => {\n    async function countRecords() {\n      notificationCounter(label.toLowerCase(), function (data) {\n        setNotifCount(() => data.size);\n      });\n    }\n\n    if ([\"requests\", \"donation\"].includes(label.toLowerCase())) {\n      countRecords();\n    }\n  }, [label]);\n\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      {notifCount > 0 ? <span className=\"badge\">{notifCount}</span> : \"\"}\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div>{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/death.e4a73ec5.svg\";","export default __webpack_public_path__ + \"static/media/marriage.2e506062.svg\";","export default __webpack_public_path__ + \"static/media/donation.ee1bf972.svg\";","export default __webpack_public_path__ + \"static/media/password.0fbccfa5.svg\";","export default __webpack_public_path__ + \"static/media/logout.cadd8c56.svg\";","export default __webpack_public_path__ + \"static/media/post.3769af97.svg\";","export default __webpack_public_path__ + \"static/media/records.73186168.svg\";","export default __webpack_public_path__ + \"static/media/request.bd30798a.svg\";","export default __webpack_public_path__ + \"static/media/church.ab21ef53.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport death from \"../../assets/death.svg\";\nimport marriage from \"../../assets/marriage.svg\";\nimport donation from \"../../assets/donation.svg\";\nimport password from \"../../assets/password.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport post from \"../../assets/post.svg\";\nimport records from \"../../assets/records.svg\";\nimport requests from \"../../assets/request.svg\";\nimport church from \"../../assets/church.svg\";\nimport Swal from \"sweetalert2\";\nimport { customAlert, getById, getCookie, inputGetter } from \"../../helpers\";\nimport { changePassword } from \"../../api/FirebaseHelper\";\nimport { useState } from \"react\";\n\nexport default function SideBar({ selected, select, hideSidebar }) {\n  function logoutDialog() {\n    Swal.fire({\n      title: \"Are you sure you want to logout?\",\n      icon: \"question\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        document.cookie = `admin=; expires=${new Date()}`;\n        window.location.reload();\n      }\n    });\n  }\n\n  function passwordDialog() {\n    Swal.fire({\n      title: \"Change Your Password\",\n      showCancelButton: true,\n      html:\n        '<span class=\"swal2-input-label\">Old Password</span>' +\n        '<input id=\"oldPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">New Password</span>' +\n        '<input id=\"newPassword\" class=\"swal2-input\" type=\"password\">' +\n        '<span class=\"swal2-input-label\">Re-Enter New Password</span>' +\n        '<input id=\"newPassword1\" class=\"swal2-input\" type=\"password\">' +\n        '<div id=\"empty\" class=\"error-text\"> </div>' +\n        '<div id=\"notMatched\" class=\"error-text\"> </div>',\n      preConfirm: () => {\n        let oldPassword = inputGetter(\"oldPassword\");\n        let newPassword = inputGetter(\"newPassword\");\n        let newPassword1 = inputGetter(\"newPassword1\");\n\n        let noempty =\n          oldPassword.length > 0 &&\n          newPassword.length > 0 &&\n          newPassword1.length > 0;\n\n        if (!noempty) getById(\"empty\").innerHTML = \"Complete all fields\";\n\n        let matched = newPassword === newPassword1;\n\n        if (!matched)\n          getById(\"notMatched\").innerHTML = \"New Password doesn't match\";\n\n        return noempty && matched;\n      },\n    }).then(async (value) => {\n      if (value.isConfirmed) {\n        let changeResult = await changePassword(\n          getCookie(\"admin\"),\n          inputGetter(\"oldPassword\"),\n          inputGetter(\"newPassword\")\n        );\n        if (changeResult.success) {\n          await customAlert(changeResult.message, \"success\");\n          document.cookie = `admin=; expires=${new Date()}`;\n          window.location.reload();\n        } else {\n          customAlert(changeResult.message, \"error\");\n        }\n      }\n    });\n  }\n\n  function _hideSidebar() {\n    try {\n      hideSidebar();\n    } catch {}\n  }\n  const [recordsShown, setRecordsShown] = useState(false);\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setRecordsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Toggle Records\"\n          imagesrc={records}\n          isSelected={recordsShown}\n        />\n      </span>\n      {recordsShown ? (\n        <div className=\"records-container\">\n          <span\n            onClick={() => {\n              select(\"marriage\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Marriage\"\n              imagesrc={marriage}\n              isSelected={selected === \"marriage\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"death\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Death\"\n              imagesrc={death}\n              isSelected={selected === \"death\"}\n            />\n          </span>\n          <span\n            onClick={() => {\n              select(\"donation\");\n              _hideSidebar();\n            }}\n            className=\"sidebar-item-container\"\n          >\n            <SidebarItem\n              label=\"Donation\"\n              imagesrc={donation}\n              isSelected={selected === \"donation\"}\n            />\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span\n        onClick={() => {\n          select(\"events\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Events\"\n          imagesrc={post}\n          isSelected={selected === \"events\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"requests\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Requests\"\n          imagesrc={requests}\n          isSelected={selected === \"requests\"}\n        />\n      </span>\n      <span\n        onClick={() => {\n          select(\"schedule\");\n          _hideSidebar();\n        }}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Mass Schedule\"\n          imagesrc={church}\n          isSelected={selected === \"schedule\"}\n        />\n      </span>\n      <span onClick={() => passwordDialog()}>\n        <SidebarItem label=\"Change Password\" imagesrc={password} />\n      </span>\n      <span onClick={() => logoutDialog()}>\n        <SidebarItem label=\"Logout\" imagesrc={logout} />\n      </span>\n    </div>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport { getById } from \"../../helpers\";\n\nexport default function NavBar({ select, selected }) {\n  function showSidebar() {\n    getById(\"sidebar\").style.width = \"80vw\";\n    getById(\"overlay\").style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    getById(\"sidebar\").style.width = \"0vw\";\n    getById(\"overlay\").style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>National Shrine of Our Lady of sorrows</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        // onClick={() => Swal.fire({ title: \"Settings\" })}\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar selected={selected} select={select} hideSidebar={hideSidebar} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { login } from \"../../api/FirebaseHelper\";\nimport { customAlert, inputGetter } from \"../../helpers\";\nimport { MiniLoader } from \"./loader\";\nimport \"./misc.scss\";\n\nexport default function Login({ authenticate }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = inputGetter(\"username\");\n    let password = inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      let loginResult = await login(username, password);\n      if (loginResult) {\n        setSubmitting(() => false);\n        customAlert(\"Success\", \"success\");\n        if (rememberMe) {\n          let expiry = new Date();\n          expiry.setDate(expiry.getDate() + 3);\n          document.cookie = `admin=${loginResult}; expires=${expiry}; SameSite=Lax`;\n        }\n        authenticate();\n      } else {\n        customAlert(\"Failed to sign in\", \"error\");\n        setSubmitting(() => false);\n      }\n    } else {\n      customAlert(\"Please Fill All Fields\", \"info\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Username</h4>\n          <input id=\"username\" type=\"text\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport Login from \"./components/misc/login\";\nimport { getCookie } from \"./helpers\";\nimport { getStorage } from \"@firebase/storage\";\n\ninitializeApp({\n  apiKey: \"AIzaSyCDZTLgld2lnDQfqwfWekAu-kq3uXEYKAk\",\n  authDomain: \"church-backend-dbf84.firebaseapp.com\",\n  projectId: \"church-backend-dbf84\",\n  storageBucket: \"church-backend-dbf84.appspot.com\",\n  messagingSenderId: \"538646634207\",\n  appId: \"1:538646634207:web:e6d2b622a427e27be1d36a\",\n  measurementId: \"G-65LDJQ1TCK\",\n});\n\nexport const firestore = getFirestore();\nexport const storage = getStorage();\n\nexport default function App() {\n  const [selected, setSelected] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(\n    getCookie(\"admin\").length > 0\n  );\n\n  const login = () => setAuthenticated(() => true);\n  const select = (item) => setSelected(() => item);\n  //comment\n\n  return authenticated ? (\n    <div id=\"app\">\n      <NavBar selected={selected} select={select} />\n      <main>\n        <SideBar selected={selected} select={select} />\n        <Content selected={selected} />\n      </main>\n    </div>\n  ) : (\n    <Login authenticate={login} />\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}